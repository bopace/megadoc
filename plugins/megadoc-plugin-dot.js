!function(e){function n(t){if(o[t])return o[t].exports;var r=o[t]={exports:{},id:t,loaded:!1};return e[t].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var o={};return n.m=e,n.c=o,n.p="",n(0)}([function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?")},function(module,exports,__webpack_require__){eval("'use strict';var React = __webpack_require__(2);\n\nmegadoc.outlets.add('Meta', { \n  key: 'plugin-dot', \n  component: React.createClass({ displayName: 'component', \n    componentDidMount: function componentDidMount() {\n      this.resizeCharts();}, \n\n\n    componentDidUpdate: function componentDidUpdate() {\n      this.resizeCharts();}, \n\n\n    render: function render() {\n      return null;}, \n\n\n    resizeCharts: function resizeCharts() {\n      // TODO: do at compile time\n      Array.prototype.forEach.call(window.document.querySelectorAll('.plugin-dot__container svg'), function (node) {\n        var bbox = node.getBBox();\n        node.style.marginLeft = -1 * bbox.x;\n        node.style.marginTop = -1 * bbox.y;\n\n        node.setAttribute('width', bbox.width + bbox.x * 2);\n        node.setAttribute('height', bbox.height + bbox.y * 2);\n        node.setAttribute('preserveAspectRatio', 'xMidYMid');});} }) });\n\n\n\n\n\nmegadoc.use(function () {});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-plugin-dot/ui/index.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./packages/megadoc-plugin-dot/ui/index.js?")},function(module,exports){eval('module.exports = megadoc.publicModules["react"];\n\n/*****************\n ** WEBPACK FOOTER\n ** external "megadoc.publicModules[\\"react\\"]"\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22megadoc.publicModules%5B\\%22react\\%22%5D%22?')}]);