{
  "api": {
    "id": "api",
    "name": "tinydoc-plugin-js",
    "title": "JS",
    "documents": [
      "api/Bag",
      "api/Command",
      "api/CLI",
      "api/Database",
      "api/OrientDBError",
      "api/Migration",
      "api/MigrationManager",
      "api/Pool",
      "api/RecordID",
      "api/Server",
      "api/Transports.Binary",
      "api/Transports.Rest"
    ],
    "config": {
      "id": "api",
      "baseURL": null,
      "title": "JS",
      "source": [
        "lib/**/*.js"
      ],
      "exclude": [
        {},
        {}
      ],
      "useDirAsNamespace": true,
      "inferModuleIdFromFileName": true,
      "analyzeNode": null,
      "customTags": {},
      "showSourcePaths": true,
      "verbose": false,
      "alias": {
        "ODatabase": [
          "Db"
        ]
      },
      "parse": null,
      "parserOptions": null,
      "namespaceDirMap": {
        "lib/db": "Database",
        "lib/transport/binary": "Transports.Binary",
        "lib/transport/rest": "Transports.Rest"
      },
      "namedReturnTags": false
    },
    "indexFields": [
      "aliases"
    ],
    "meta": {
      "href": "/api.html",
      "outlets": [
        {
          "name": "CJS::Module",
          "options": {}
        },
        {
          "name": "CJS::ClassBrowser",
          "options": {}
        }
      ],
      "defaultLayouts": [
        {
          "match": {
            "by": "type",
            "on": "Namespace"
          },
          "regions": [
            {
              "name": "Layout::Sidebar",
              "outlets": [
                {
                  "name": "CJS::ClassBrowser"
                }
              ]
            },
            {
              "name": "Layout::Content",
              "options": {
                "framed": true
              },
              "outlets": [
                {
                  "name": "CJS::ModuleHeader"
                },
                {
                  "name": "CJS::NamespaceIndex"
                },
                {
                  "name": "Layout::Content"
                }
              ]
            }
          ]
        },
        {
          "match": {
            "by": "type",
            "on": [
              "Document",
              "DocumentEntity"
            ]
          },
          "regions": [
            {
              "name": "Layout::Content",
              "options": {
                "framed": true
              },
              "outlets": [
                {
                  "name": "CJS::ModuleHeader"
                },
                {
                  "name": "CJS::ModuleIndex"
                },
                {
                  "name": "CJS::ModuleBody"
                },
                {
                  "name": "Layout::Content"
                }
              ]
            },
            {
              "name": "Layout::Sidebar",
              "outlets": [
                {
                  "name": "CJS::ClassBrowser"
                }
              ]
            }
          ]
        }
      ],
      "anchor": "api"
    },
    "type": "Namespace",
    "symbol": "/",
    "uid": "api",
    "indices": {}
  },
  "api/Bag": {
    "id": "Bag",
    "title": "Bag",
    "summary": "A bag of Record IDs, can come in two formats:",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "symbol": "",
    "properties": {
      "id": "Bag",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"rid-bag\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#rid-bag\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">RID Bag</span>\n    </h1>\n  <p>A bag of Record IDs, can come in two formats:</p>\n<ul>\n<li>embedded - just a list of record ids.</li>\n<li>tree based - a remote tree based data structure</li>\n</ul>\n<p>for more details on the RID Bag structure, see <a href=\"https://github.com/orientechnologies/orientdb/wiki/RidBag\" target=\"_blank\">https://github.com/orientechnologies/orientdb/wiki/RidBag</a></p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} serialized The base64 encoded RID Bag",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "serialized",
            "description": "<p>The base64 encoded RID Bag</p>\n"
          },
          "line": 19
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "serialized"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 1
        }
      },
      "name": "Bag",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": true,
      "aliases": [],
      "path": "Bag",
      "line": 19
    },
    "documents": [],
    "entities": [
      "api/Bag#_parse",
      "api/Bag#toJSON",
      "api/Bag#next",
      "api/Bag#all",
      "api/Bag#_consume"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Bag.html",
      "anchor": "api-Bag"
    },
    "uid": "api/Bag",
    "indices": {
      "Bag": 1
    }
  },
  "api/Bag#_parse": {
    "id": "#_parse",
    "title": "Bag#_parse",
    "summary": "Parse the bag content.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#_parse",
      "description": "<p>Parse the bag content.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 105,
          "column": 2
        }
      },
      "name": "_parse",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#_parse",
      "line": 68
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag#_parse",
      "anchor": "api-Bag#_parse"
    },
    "uid": "api/Bag#_parse",
    "indices": {
      "#_parse": 1,
      "Bag#_parse": 2
    }
  },
  "api/Bag#toJSON": {
    "id": "#toJSON",
    "title": "Bag#toJSON",
    "summary": "Return a representation of the bag that can be serialized to JSON.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#toJSON",
      "description": "<p>Return a representation of the bag that can be serialized to JSON.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Array} The JSON representation of the bag.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "description": "<p>The JSON representation of the bag.</p>\n"
          },
          "line": 112
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 112,
          "column": 0
        },
        "end": {
          "line": 119,
          "column": 2
        }
      },
      "name": "toJSON",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#toJSON",
      "line": 112
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag#toJSON",
      "anchor": "api-Bag#toJSON"
    },
    "uid": "api/Bag#toJSON",
    "indices": {
      "#toJSON": 1,
      "Bag#toJSON": 2
    }
  },
  "api/Bag#next": {
    "id": "#next",
    "title": "Bag#next",
    "summary": "Retrieve the next RID in the bag, or null if we're at the end.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#next",
      "description": "<p>Retrieve the next RID in the bag, or null if we&#39;re at the end.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID|null} The next [RecordID Record ID](), or null.",
          "typeInfo": {
            "isOptional": true,
            "types": [
              "<a href=\"RecordID.html\">RecordID</a>",
              "null"
            ],
            "description": "<p>The next <a href=\"RecordID.html\">Record ID</a>, or null.</p>\n"
          },
          "line": 126
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 145,
          "column": 2
        }
      },
      "name": "next",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#next",
      "line": 126
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag#next",
      "anchor": "api-Bag#next"
    },
    "uid": "api/Bag#next",
    "indices": {
      "#next": 1,
      "Bag#next": 2
    }
  },
  "api/Bag#all": {
    "id": "#all",
    "title": "Bag#all",
    "summary": "Retreive all the RIDs in the bag.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#all",
      "description": "<p>Retreive all the RIDs in the bag.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID[]} The record ids.",
          "typeInfo": {
            "types": [
              "Array&lt;<a href=\"RecordID.html\">RecordID</a>&gt;"
            ],
            "description": "<p>The record ids.</p>\n"
          },
          "line": 153
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 153,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 2
        }
      },
      "name": "all",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#all",
      "line": 153
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag#all",
      "anchor": "api-Bag#all"
    },
    "uid": "api/Bag#all",
    "indices": {
      "#all": 1,
      "Bag#all": 2
    }
  },
  "api/Bag#_consume": {
    "id": "#_consume",
    "title": "Bag#_consume",
    "summary": "Consume the next RID in the bag.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#_consume",
      "description": "<p>Consume the next RID in the bag.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID|null} The next record id, or null if the bag is exhausted.",
          "typeInfo": {
            "types": [
              "<a href=\"RecordID.html\">RecordID</a>",
              "null"
            ],
            "description": "<p>The next record id, or null if the bag is exhausted.</p>\n"
          },
          "line": 166
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 166,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 2
        }
      },
      "name": "_consume",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#_consume",
      "line": 166
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag#_consume",
      "anchor": "api-Bag#_consume"
    },
    "uid": "api/Bag#_consume",
    "indices": {
      "#_consume": 1,
      "Bag#_consume": 2
    }
  },
  "api/Command": {
    "id": "Command",
    "title": "Command",
    "summary": "Base class for CLI commands.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
    "symbol": "",
    "properties": {
      "id": "Command",
      "description": "<p>Base class for CLI commands.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Server} server  The server instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Server.html\">Server</a>"
            ],
            "name": "server",
            "description": "<p>The server instance.</p>\n"
          },
          "line": 11
        },
        {
          "type": "param",
          "string": "{Object} options The opptions for the command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The opptions for the command.</p>\n"
          },
          "line": 11
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "server"
          },
          {
            "name": "options"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 1
        }
      },
      "name": "Command",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
      "isModule": true,
      "aliases": [],
      "path": "Command",
      "line": 11
    },
    "documents": [],
    "entities": [
      "api/Command#run",
      "api/Command#help"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Command.html",
      "anchor": "api-Command"
    },
    "uid": "api/Command",
    "indices": {
      "Command": 1
    }
  },
  "api/Command#run": {
    "id": "#run",
    "title": "Command#run",
    "summary": "Run the command.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
    "properties": {
      "id": "Command#run",
      "description": "<p>Run the command.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 46
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Command",
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "run",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
      "isModule": false,
      "aliases": [],
      "path": "Command#run",
      "line": 46
    },
    "type": "DocumentEntity",
    "parentNode": "api/Command",
    "meta": {
      "href": "/api/Command.html#api-Command#run",
      "anchor": "api-Command#run"
    },
    "uid": "api/Command#run",
    "indices": {
      "#run": 1,
      "Command#run": 2
    }
  },
  "api/Command#help": {
    "id": "#help",
    "title": "Command#help",
    "summary": "Show the help for the command.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
    "properties": {
      "id": "Command#help",
      "description": "<p>Show the help for the command.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Command",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 2
        }
      },
      "name": "help",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/command.js",
      "isModule": false,
      "aliases": [],
      "path": "Command#help",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/Command",
    "meta": {
      "href": "/api/Command.html#api-Command#help",
      "anchor": "api-Command#help"
    },
    "uid": "api/Command#help",
    "indices": {
      "#help": 1,
      "Command#help": 2
    }
  },
  "api/CLI": {
    "id": "CLI",
    "title": "CLI",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "symbol": "",
    "properties": {
      "id": "CLI",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"command-line-interface\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#command-line-interface\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Command Line Interface</span>\n    </h1>\n  ",
      "tags": [],
      "ctx": {
        "type": "function",
        "params": []
      },
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "name": "CLI",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": true,
      "aliases": [],
      "path": "CLI",
      "line": 13
    },
    "documents": [],
    "entities": [
      "api/CLI#run",
      "api/CLI#createCommand",
      "api/CLI#createServer",
      "api/CLI#parseArgv",
      "api/CLI#parseOptsFile",
      "api/CLI#declareArgv",
      "api/CLI#list"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/CLI.html",
      "anchor": "api-CLI"
    },
    "uid": "api/CLI",
    "indices": {
      "CLI": 1
    }
  },
  "api/CLI#run": {
    "id": "#run",
    "title": "CLI#run",
    "summary": "Parse the arguments and run the commmand.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#run",
      "description": "<p>Parse the arguments and run the commmand.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 2
        }
      },
      "name": "run",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#run",
      "line": 22
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#run",
      "anchor": "api-CLI#run"
    },
    "uid": "api/CLI#run",
    "indices": {
      "#run": 1,
      "CLI#run": 2
    }
  },
  "api/CLI#createCommand": {
    "id": "#createCommand",
    "title": "CLI#createCommand",
    "summary": "Create the named command.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#createCommand",
      "description": "<p>Create the named command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}  name The name of the command.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the command.</p>\n"
          },
          "line": 59
        },
        {
          "type": "param",
          "string": "{Object}  argv The parsed command line options.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "argv",
            "description": "<p>The parsed command line options.</p>\n"
          },
          "line": 59
        },
        {
          "type": "return",
          "string": "{Command}      The command instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Command.html\">Command</a>"
            ],
            "description": "<p>The command instance.</p>\n"
          },
          "line": 59
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 72,
          "column": 2
        }
      },
      "name": "createCommand",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#createCommand",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#createCommand",
      "anchor": "api-CLI#createCommand"
    },
    "uid": "api/CLI#createCommand",
    "indices": {
      "#createCommand": 1,
      "CLI#createCommand": 2
    }
  },
  "api/CLI#createServer": {
    "id": "#createServer",
    "title": "CLI#createServer",
    "summary": "Create a server instance based on the given arguments.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#createServer",
      "description": "<p>Create a server instance based on the given arguments.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} argv The parsed command line arguments.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "argv",
            "description": "<p>The parsed command line arguments.</p>\n"
          },
          "line": 79
        },
        {
          "type": "return",
          "string": "{Server}      The server instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Server.html\">Server</a>"
            ],
            "description": "<p>The server instance.</p>\n"
          },
          "line": 79
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 2
        }
      },
      "name": "createServer",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#createServer",
      "line": 79
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#createServer",
      "anchor": "api-CLI#createServer"
    },
    "uid": "api/CLI#createServer",
    "indices": {
      "#createServer": 1,
      "CLI#createServer": 2
    }
  },
  "api/CLI#parseArgv": {
    "id": "#parseArgv",
    "title": "CLI#parseArgv",
    "summary": "Parse the command line arguments.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#parseArgv",
      "description": "<p>Parse the command line arguments.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Array}  argv The arguments to parse",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "name": "argv",
            "description": "<p>The arguments to parse</p>\n"
          },
          "line": 94
        },
        {
          "type": "promise",
          "string": "{Object} The parsed arguments.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 94
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 2
        }
      },
      "name": "parseArgv",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#parseArgv",
      "line": 94
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#parseArgv",
      "anchor": "api-CLI#parseArgv"
    },
    "uid": "api/CLI#parseArgv",
    "indices": {
      "#parseArgv": 1,
      "CLI#parseArgv": 2
    }
  },
  "api/CLI#parseOptsFile": {
    "id": "#parseOptsFile",
    "title": "CLI#parseOptsFile",
    "summary": "Parse a .opts file into raw argv.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#parseOptsFile",
      "description": "<p>Parse a .opts file into raw argv.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} filename The path to the .opts file.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "filename",
            "description": "<p>The path to the .opts file.</p>\n"
          },
          "line": 126
        },
        {
          "type": "promise",
          "string": "{Array} The raw arguments.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 126
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "filename"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "parseOptsFile",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#parseOptsFile",
      "line": 126
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#parseOptsFile",
      "anchor": "api-CLI#parseOptsFile"
    },
    "uid": "api/CLI#parseOptsFile",
    "indices": {
      "#parseOptsFile": 1,
      "CLI#parseOptsFile": 2
    }
  },
  "api/CLI#declareArgv": {
    "id": "#declareArgv",
    "title": "CLI#declareArgv",
    "summary": "Declare the accepted command line arguments.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#declareArgv",
      "description": "<p>Declare the accepted command line arguments.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{CLI} The cli instance with argv declared.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 138
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 188,
          "column": 2
        }
      },
      "name": "declareArgv",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#declareArgv",
      "line": 138
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#declareArgv",
      "anchor": "api-CLI#declareArgv"
    },
    "uid": "api/CLI#declareArgv",
    "indices": {
      "#declareArgv": 1,
      "CLI#declareArgv": 2
    }
  },
  "api/CLI#list": {
    "id": "#list",
    "title": "CLI#list",
    "summary": "List the supported commands.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#list",
      "description": "<p>List the supported commands.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String[]} The supported command names.",
          "typeInfo": {
            "types": [
              "Array&lt;String&gt;"
            ],
            "description": "<p>The supported command names.</p>\n"
          },
          "line": 195
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 195,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#list",
      "line": 195
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI#list",
      "anchor": "api-CLI#list"
    },
    "uid": "api/CLI#list",
    "indices": {
      "#list": 1,
      "CLI#list": 2
    }
  },
  "api/Database": {
    "id": "Database",
    "title": "Database",
    "symbol": ".",
    "documents": [
      "api/Database.Class",
      "api/Database.Db",
      "api/Database.ODatabase",
      "api/Database.Statement",
      "api/Database.Transaction"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Database.html",
      "anchor": "api-Database"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Database",
    "indices": {
      "Database": 1
    }
  },
  "api/Database.Class": {
    "id": "Class",
    "title": "Database.Class",
    "summary": "The class constructor.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "symbol": "",
    "properties": {
      "id": "Database.Class",
      "namespace": "Database",
      "description": "<p>The class constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the class",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the class</p>\n"
          },
          "line": 13
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "Class",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Class",
      "line": 13
    },
    "documents": [],
    "entities": [
      "api/Database.Class#configure",
      "api/Database.Class#list",
      "api/Database.Class#find",
      "api/Database.Class#create",
      "api/Database.Class#reload",
      "api/Database.Class@cached",
      "api/Database.Class.list",
      "api/Database.Class.create",
      "api/Database.Class.update",
      "api/Database.Class.drop",
      "api/Database.Class.get",
      "api/Database.Class.cacheData"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Class.html",
      "anchor": "api-Database.Class"
    },
    "uid": "api/Database.Class",
    "indices": {
      "Class": 1,
      "Database.Class": 2
    }
  },
  "api/Database.Class#configure": {
    "id": "#configure",
    "title": "Database.Class#configure",
    "summary": "Configure the class instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#configure",
      "description": "<p>Configure the class instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 33
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#configure",
      "line": 33
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class#configure",
      "anchor": "api-Database.Class#configure"
    },
    "uid": "api/Database.Class#configure",
    "indices": {
      "#configure": 1,
      "Class#configure": 2,
      "Database.Class#configure": 3
    }
  },
  "api/Database.Class#list": {
    "id": "#list",
    "title": "Database.Class#list",
    "summary": "Return a list of records in the class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#list",
      "description": "<p>Return a list of records in the class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer|Object} limit  The maximum number of records to return, or a configuration object.",
          "typeInfo": {
            "types": [
              "Integer",
              "Object"
            ],
            "name": "limit",
            "description": "<p>The maximum number of records to return, or a configuration object.</p>\n"
          },
          "line": 61
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset to start returning records from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>The offset to start returning records from.</p>\n"
          },
          "line": 61
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of records in the class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 61
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#list",
      "line": 61
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class#list",
      "anchor": "api-Database.Class#list"
    },
    "uid": "api/Database.Class#list",
    "indices": {
      "#list": 1,
      "Class#list": 2,
      "Database.Class#list": 3
    }
  },
  "api/Database.Class#find": {
    "id": "#find",
    "title": "Database.Class#find",
    "summary": "Find a list of records in the class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#find",
      "description": "<p>Find a list of records in the class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}  attributes The attributes to search with.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "attributes",
            "description": "<p>The attributes to search with.</p>\n"
          },
          "line": 91
        },
        {
          "type": "param",
          "string": "{Integer} limit      The maximum number of records to return",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of records to return</p>\n"
          },
          "line": 91
        },
        {
          "type": "param",
          "string": "{Integer} offset     The offset to start returning records from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>The offset to start returning records from.</p>\n"
          },
          "line": 91
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of records in the class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 91
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "attributes"
          },
          {
            "name": "limit"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 125,
          "column": 2
        }
      },
      "name": "find",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#find",
      "line": 91
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class#find",
      "anchor": "api-Database.Class#find"
    },
    "uid": "api/Database.Class#find",
    "indices": {
      "#find": 1,
      "Class#find": 2,
      "Database.Class#find": 3
    }
  },
  "api/Database.Class#create": {
    "id": "#create",
    "title": "Database.Class#create",
    "summary": "Create a record for this class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#create",
      "description": "<p>Create a record for this class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record The record to create.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to create.</p>\n"
          },
          "line": 134
        },
        {
          "type": "promise",
          "string": "{Object} The created record.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 134
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 134,
          "column": 0
        },
        "end": {
          "line": 144,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#create",
      "line": 134
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class#create",
      "anchor": "api-Database.Class#create"
    },
    "uid": "api/Database.Class#create",
    "indices": {
      "#create": 1,
      "Class#create": 2,
      "Database.Class#create": 3
    }
  },
  "api/Database.Class#reload": {
    "id": "#reload",
    "title": "Database.Class#reload",
    "summary": "Reload the class instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#reload",
      "description": "<p>Reload the class instance.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Class} The class instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 151
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 151,
          "column": 0
        },
        "end": {
          "line": 158,
          "column": 2
        }
      },
      "name": "reload",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#reload",
      "line": 151
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class#reload",
      "anchor": "api-Database.Class#reload"
    },
    "uid": "api/Database.Class#reload",
    "indices": {
      "#reload": 1,
      "Class#reload": 2,
      "Database.Class#reload": 3
    }
  },
  "api/Database.Class@cached": {
    "id": "@cached",
    "title": "Database.Class@cached",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class@cached",
      "description": "",
      "tags": [
        {
          "type": "property",
          "string": "{Object|false}\nThe cached class items.",
          "typeInfo": {
            "types": [
              "Object",
              "false"
            ],
            "name": "cached",
            "description": "<p>The cached class items.</p>\n"
          },
          "line": 164
        }
      ],
      "ctx": {
        "type": "literal",
        "value": false,
        "symbol": "@"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 164,
          "column": 0
        },
        "end": {
          "line": 164,
          "column": 23
        }
      },
      "name": "cached",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class@cached",
      "line": 164
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class@cached",
      "anchor": "api-Database.Class@cached"
    },
    "uid": "api/Database.Class@cached",
    "indices": {
      "@cached": 1,
      "Class@cached": 2,
      "Database.Class@cached": 3
    }
  },
  "api/Database.Class.list": {
    "id": ".list",
    "title": "Database.Class.list",
    "summary": "Retreive a list of classes from the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.list",
      "description": "<p>Retreive a list of classes from the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Boolean} refresh Whether to refresh the list or not.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "refresh",
            "description": "<p>Whether to refresh the list or not.</p>\n"
          },
          "line": 172
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of class objects.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 172
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "refresh"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 172,
          "column": 0
        },
        "end": {
          "line": 195,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.list",
      "line": 172
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.list",
      "anchor": "api-Database.Class.list"
    },
    "uid": "api/Database.Class.list",
    "indices": {
      ".list": 1,
      "Class.list": 2,
      "Database.Class.list": 3
    }
  },
  "api/Database.Class.create": {
    "id": ".create",
    "title": "Database.Class.create",
    "summary": "Create a new class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.create",
      "description": "<p>Create a new class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name            The name of the class to create.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class to create.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{String} parentName      The name of the parent to extend, if any.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "parentName",
            "description": "<p>The name of the parent to extend, if any.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{String|Integer} cluster The cluster name or id.",
          "typeInfo": {
            "types": [
              "String",
              "Integer"
            ],
            "name": "cluster",
            "description": "<p>The cluster name or id.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{Boolean} isAbstract     The flag for the abstract class",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "isAbstract",
            "description": "<p>The flag for the abstract class</p>\n"
          },
          "line": 206
        },
        {
          "type": "promise",
          "string": "{Object} The created class object",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 206
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "parentName"
          },
          {
            "name": "cluster"
          },
          {
            "name": "isAbstract"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 206,
          "column": 0
        },
        "end": {
          "line": 232,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.create",
      "line": 206
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.create",
      "anchor": "api-Database.Class.create"
    },
    "uid": "api/Database.Class.create",
    "indices": {
      ".create": 1,
      "Class.create": 2,
      "Database.Class.create": 3
    }
  },
  "api/Database.Class.update": {
    "id": ".update",
    "title": "Database.Class.update",
    "summary": "Update the given class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.update",
      "description": "<p>Update the given class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}  class    The class settings.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "class",
            "description": "<p>The class settings.</p>\n"
          },
          "line": 241
        },
        {
          "type": "param",
          "string": "{Boolean} reload   Whether to reload the class, default to true.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "reload",
            "description": "<p>Whether to reload the class, default to true.</p>\n"
          },
          "line": 241
        },
        {
          "type": "promise",
          "string": "{Object} The updated class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 241
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "cls"
          },
          {
            "name": "reload"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 241,
          "column": 0
        },
        "end": {
          "line": 258,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.update",
      "line": 241
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.update",
      "anchor": "api-Database.Class.update"
    },
    "uid": "api/Database.Class.update",
    "indices": {
      ".update": 1,
      "Class.update": 2,
      "Database.Class.update": 3
    }
  },
  "api/Database.Class.drop": {
    "id": ".drop",
    "title": "Database.Class.drop",
    "summary": "Delete a class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.drop",
      "description": "<p>Delete a class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the class to delete.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class to delete.</p>\n"
          },
          "line": 266
        },
        {
          "type": "promise",
          "string": "{Db} The database instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 266
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 266,
          "column": 0
        },
        "end": {
          "line": 275,
          "column": 2
        }
      },
      "name": "drop",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.drop",
      "line": 266
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.drop",
      "anchor": "api-Database.Class.drop"
    },
    "uid": "api/Database.Class.drop",
    "indices": {
      ".drop": 1,
      "Class.drop": 2,
      "Database.Class.drop": 3
    }
  },
  "api/Database.Class.get": {
    "id": ".get",
    "title": "Database.Class.get",
    "summary": "Get a class by name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.get",
      "description": "<p>Get a class by name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer|String} name The name of the class.",
          "typeInfo": {
            "types": [
              "Integer",
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class.</p>\n"
          },
          "line": 284
        },
        {
          "type": "param",
          "string": "{Boolean} refresh Whether to refresh the data, defaults to false.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "refresh",
            "description": "<p>Whether to refresh the data, defaults to false.</p>\n"
          },
          "line": 284
        },
        {
          "type": "promise",
          "string": "{Object} The class object if it exists.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 284
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "refresh"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 284,
          "column": 0
        },
        "end": {
          "line": 298,
          "column": 2
        }
      },
      "name": "get",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.get",
      "line": 284
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.get",
      "anchor": "api-Database.Class.get"
    },
    "uid": "api/Database.Class.get",
    "indices": {
      ".get": 1,
      "Class.get": 2,
      "Database.Class.get": 3
    }
  },
  "api/Database.Class.cacheData": {
    "id": ".cacheData",
    "title": "Database.Class.cacheData",
    "summary": "Cache the given class data for fast lookup later.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.cacheData",
      "description": "<p>Cache the given class data for fast lookup later.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object[]} classes The class objects to cache.",
          "typeInfo": {
            "types": [
              "Array&lt;Object&gt;"
            ],
            "name": "classes",
            "description": "<p>The class objects to cache.</p>\n"
          },
          "line": 306
        },
        {
          "type": "return",
          "string": "{Db}                The db instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Db.html\">Database.Db</a>"
            ],
            "description": "<p>The db instance.</p>\n"
          },
          "line": 306
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "classes"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 306,
          "column": 0
        },
        "end": {
          "line": 327,
          "column": 2
        }
      },
      "name": "cacheData",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.cacheData",
      "line": 306
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.cacheData",
      "anchor": "api-Database.Class.cacheData"
    },
    "uid": "api/Database.Class.cacheData",
    "indices": {
      ".cacheData": 1,
      "Class.cacheData": 2,
      "Database.Class.cacheData": 3
    }
  },
  "api/Database.Db": {
    "id": "Db",
    "title": "Database.Db",
    "summary": "Database Constructor.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "symbol": "",
    "properties": {
      "id": "Database.Db",
      "namespace": "Database",
      "description": "<p>Database Constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The optional configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The optional configuration for the database.</p>\n"
          },
          "line": 22
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 1
        }
      },
      "name": "Db",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Db",
      "line": 22
    },
    "documents": [],
    "entities": [
      "api/Database.Db#configure",
      "api/Database.Db#init",
      "api/Database.Db#open",
      "api/Database.Db#close",
      "api/Database.Db#send",
      "api/Database.Db#reload",
      "api/Database.Db#begin",
      "api/Database.Db#exec",
      "api/Database.Db#query",
      "api/Database.Db#liveQuery",
      "api/Database.Db#normalizeResult",
      "api/Database.Db#normalizeResultContent",
      "api/Database.Db#registerTransformer",
      "api/Database.Db#transformDocument",
      "api/Database.Db#createQuery",
      "api/Database.Db#create",
      "api/Database.Db#select",
      "api/Database.Db#traverse",
      "api/Database.Db#insert",
      "api/Database.Db#update",
      "api/Database.Db#delete",
      "api/Database.Db#let",
      "api/Database.Db#createUserContext",
      "api/Database.Db#createFn"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Db.html",
      "anchor": "api-Database.Db"
    },
    "uid": "api/Database.Db",
    "indices": {
      "Db": 1,
      "Database.Db": 2
    }
  },
  "api/Database.Db#configure": {
    "id": "#configure",
    "title": "Database.Db#configure",
    "summary": "Configure the database instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#configure",
      "description": "<p>Configure the database instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the database.</p>\n"
          },
          "line": 56
        },
        {
          "type": "return",
          "string": "{Db}            The configured database object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Db</a>"
            ],
            "description": "<p>The configured database object.</p>\n"
          },
          "line": 56
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#configure",
      "line": 56
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#configure",
      "anchor": "api-Database.Db#configure"
    },
    "uid": "api/Database.Db#configure",
    "indices": {
      "#configure": 1,
      "Db#configure": 2,
      "Database.Db#configure": 3
    }
  },
  "api/Database.Db#init": {
    "id": "#init",
    "title": "Database.Db#init",
    "summary": "Initialize the database instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#init",
      "description": "<p>Initialize the database instance.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#init",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#init",
      "anchor": "api-Database.Db#init"
    },
    "uid": "api/Database.Db#init",
    "indices": {
      "#init": 1,
      "Db#init": 2,
      "Database.Db#init": 3
    }
  },
  "api/Database.Db#open": {
    "id": "#open",
    "title": "Database.Db#open",
    "summary": "Open the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#open",
      "description": "<p>Open the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The open db instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 92
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 92,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 2
        }
      },
      "name": "open",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#open",
      "line": 92
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#open",
      "anchor": "api-Database.Db#open"
    },
    "uid": "api/Database.Db#open",
    "indices": {
      "#open": 1,
      "Db#open": 2,
      "Database.Db#open": 3
    }
  },
  "api/Database.Db#close": {
    "id": "#close",
    "title": "Database.Db#close",
    "summary": "Close the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#close",
      "description": "<p>Close the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The now closed db instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 128
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 128,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#close",
      "line": 128
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#close",
      "anchor": "api-Database.Db#close"
    },
    "uid": "api/Database.Db#close",
    "indices": {
      "#close": 1,
      "Db#close": 2,
      "Database.Db#close": 3
    }
  },
  "api/Database.Db#send": {
    "id": "#send",
    "title": "Database.Db#send",
    "summary": "Send the given operation to the server, ensuring the\ndatabase is open first.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#send",
      "description": "<p>Send the given operation to the server, ensuring the\ndatabase is open first.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The operation to send.</p>\n"
          },
          "line": 147
        },
        {
          "type": "param",
          "string": "{Object} data       The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 147
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 147
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 147,
          "column": 0
        },
        "end": {
          "line": 160,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#send",
      "line": 147
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#send",
      "anchor": "api-Database.Db#send"
    },
    "uid": "api/Database.Db#send",
    "indices": {
      "#send": 1,
      "Db#send": 2,
      "Database.Db#send": 3
    }
  },
  "api/Database.Db#reload": {
    "id": "#reload",
    "title": "Database.Db#reload",
    "summary": "Reload the configuration for the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#reload",
      "description": "<p>Reload the configuration for the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The database with reloaded configuration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 168
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 168,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 2
        }
      },
      "name": "reload",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#reload",
      "line": 168
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#reload",
      "anchor": "api-Database.Db#reload"
    },
    "uid": "api/Database.Db#reload",
    "indices": {
      "#reload": 1,
      "Db#reload": 2,
      "Database.Db#reload": 3
    }
  },
  "api/Database.Db#begin": {
    "id": "#begin",
    "title": "Database.Db#begin",
    "summary": "Begin a new transaction.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#begin",
      "description": "<p>Begin a new transaction.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Transaction} The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Transaction.html\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 186
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 186,
          "column": 0
        },
        "end": {
          "line": 189,
          "column": 2
        }
      },
      "name": "begin",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#begin",
      "line": 186
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#begin",
      "anchor": "api-Database.Db#begin"
    },
    "uid": "api/Database.Db#begin",
    "indices": {
      "#begin": 1,
      "Db#begin": 2,
      "Database.Db#begin": 3
    }
  },
  "api/Database.Db#exec": {
    "id": "#exec",
    "title": "Database.Db#exec",
    "summary": "Execute an SQL query against the database and retreive the raw, parsed response.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#exec",
      "description": "<p>Execute an SQL query against the database and retreive the raw, parsed response.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 199
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 199
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 199
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "query"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 199,
          "column": 0
        },
        "end": {
          "line": 275,
          "column": 2
        }
      },
      "name": "exec",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#exec",
      "line": 199
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#exec",
      "anchor": "api-Database.Db#exec"
    },
    "uid": "api/Database.Db#exec",
    "indices": {
      "#exec": 1,
      "Db#exec": 2,
      "Database.Db#exec": 3
    }
  },
  "api/Database.Db#query": {
    "id": "#query",
    "title": "Database.Db#query",
    "summary": "Execute an SQL query against the database and retreive the results",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#query",
      "description": "<p>Execute an SQL query against the database and retreive the results</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 284
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 284
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 284
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "command"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 284,
          "column": 0
        },
        "end": {
          "line": 317,
          "column": 2
        }
      },
      "name": "query",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#query",
      "line": 284
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#query",
      "anchor": "api-Database.Db#query"
    },
    "uid": "api/Database.Db#query",
    "indices": {
      "#query": 1,
      "Db#query": 2,
      "Database.Db#query": 3
    }
  },
  "api/Database.Db#liveQuery": {
    "id": "#liveQuery",
    "title": "Database.Db#liveQuery",
    "summary": "Execute a live query against the database",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#liveQuery",
      "description": "<p>Execute a live query against the database</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 326
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 326
        },
        {
          "type": "promise",
          "string": "{Mixed} The token of the live query.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 326
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "command"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 375,
          "column": 2
        }
      },
      "name": "liveQuery",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#liveQuery",
      "line": 326
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#liveQuery",
      "anchor": "api-Database.Db#liveQuery"
    },
    "uid": "api/Database.Db#liveQuery",
    "indices": {
      "#liveQuery": 1,
      "Db#liveQuery": 2,
      "Database.Db#liveQuery": 3
    }
  },
  "api/Database.Db#normalizeResult": {
    "id": "#normalizeResult",
    "title": "Database.Db#normalizeResult",
    "summary": "Normalize a result, where possible.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#normalizeResult",
      "description": "<p>Normalize a result, where possible.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} result The result to normalize.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "result",
            "description": "<p>The result to normalize.</p>\n"
          },
          "line": 383
        },
        {
          "type": "return",
          "string": "{Object}        The normalized result.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The normalized result.</p>\n"
          },
          "line": 383
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "result"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 383,
          "column": 0
        },
        "end": {
          "line": 408,
          "column": 2
        }
      },
      "name": "normalizeResult",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#normalizeResult",
      "line": 383
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#normalizeResult",
      "anchor": "api-Database.Db#normalizeResult"
    },
    "uid": "api/Database.Db#normalizeResult",
    "indices": {
      "#normalizeResult": 1,
      "Db#normalizeResult": 2,
      "Database.Db#normalizeResult": 3
    }
  },
  "api/Database.Db#normalizeResultContent": {
    "id": "#normalizeResultContent",
    "title": "Database.Db#normalizeResultContent",
    "summary": "Normalize the content for a result.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#normalizeResultContent",
      "description": "<p>Normalize the content for a result.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} content The content to normalize.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "content",
            "description": "<p>The content to normalize.</p>\n"
          },
          "line": 415
        },
        {
          "type": "return",
          "string": "{Mixed}         The normalized content.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "description": "<p>The normalized content.</p>\n"
          },
          "line": 415
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "content"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 415,
          "column": 0
        },
        "end": {
          "line": 436,
          "column": 2
        }
      },
      "name": "normalizeResultContent",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#normalizeResultContent",
      "line": 415
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#normalizeResultContent",
      "anchor": "api-Database.Db#normalizeResultContent"
    },
    "uid": "api/Database.Db#normalizeResultContent",
    "indices": {
      "#normalizeResultContent": 1,
      "Db#normalizeResultContent": 2,
      "Database.Db#normalizeResultContent": 3
    }
  },
  "api/Database.Db#registerTransformer": {
    "id": "#registerTransformer",
    "title": "Database.Db#registerTransformer",
    "summary": "Register a transformer function for documents of the given class.\nThis function will be invoked for each document of the specified class\nin all future result sets.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#registerTransformer",
      "description": "<p>Register a transformer function for documents of the given class.\nThis function will be invoked for each document of the specified class\nin all future result sets.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   className   The name of the document class.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "className",
            "description": "<p>The name of the document class.</p>\n"
          },
          "line": 447
        },
        {
          "type": "param",
          "string": "{Function} transformer The transformer function.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "transformer",
            "description": "<p>The transformer function.</p>\n"
          },
          "line": 447
        },
        {
          "type": "return",
          "string": "{Db}                   The database instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Db</a>"
            ],
            "description": "<p>The database instance.</p>\n"
          },
          "line": 447
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "className"
          },
          {
            "name": "transformer"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 447,
          "column": 0
        },
        "end": {
          "line": 454,
          "column": 2
        }
      },
      "name": "registerTransformer",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#registerTransformer",
      "line": 447
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#registerTransformer",
      "anchor": "api-Database.Db#registerTransformer"
    },
    "uid": "api/Database.Db#registerTransformer",
    "indices": {
      "#registerTransformer": 1,
      "Db#registerTransformer": 2,
      "Database.Db#registerTransformer": 3
    }
  },
  "api/Database.Db#transformDocument": {
    "id": "#transformDocument",
    "title": "Database.Db#transformDocument",
    "summary": "Transform a document according to its @class property, using the registered transformers.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#transformDocument",
      "description": "<p>Transform a document according to its <code>@class</code> property, using the registered transformers.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} document The document to transform.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "document",
            "description": "<p>The document to transform.</p>\n"
          },
          "line": 462
        },
        {
          "type": "return",
          "string": "{Mixed}           The transformed document.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "description": "<p>The transformed document.</p>\n"
          },
          "line": 462
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "document"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 462,
          "column": 0
        },
        "end": {
          "line": 472,
          "column": 2
        }
      },
      "name": "transformDocument",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#transformDocument",
      "line": 462
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#transformDocument",
      "anchor": "api-Database.Db#transformDocument"
    },
    "uid": "api/Database.Db#transformDocument",
    "indices": {
      "#transformDocument": 1,
      "Db#transformDocument": 2,
      "Database.Db#transformDocument": 3
    }
  },
  "api/Database.Db#createQuery": {
    "id": "#createQuery",
    "title": "Database.Db#createQuery",
    "summary": "Create a query instance for this database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createQuery",
      "description": "<p>Create a query instance for this database.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 482
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 482,
          "column": 0
        },
        "end": {
          "line": 484,
          "column": 2
        }
      },
      "name": "createQuery",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createQuery",
      "line": 482
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#createQuery",
      "anchor": "api-Database.Db#createQuery"
    },
    "uid": "api/Database.Db#createQuery",
    "indices": {
      "#createQuery": 1,
      "Db#createQuery": 2,
      "Database.Db#createQuery": 3
    }
  },
  "api/Database.Db#create": {
    "id": "#create",
    "title": "Database.Db#create",
    "summary": "Create a create query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#create",
      "description": "<p>Create a create query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 491
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 494,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#create",
      "line": 491
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#create",
      "anchor": "api-Database.Db#create"
    },
    "uid": "api/Database.Db#create",
    "indices": {
      "#create": 1,
      "Db#create": 2,
      "Database.Db#create": 3
    }
  },
  "api/Database.Db#select": {
    "id": "#select",
    "title": "Database.Db#select",
    "summary": "Create a select query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#select",
      "description": "<p>Create a select query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 501
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 501,
          "column": 0
        },
        "end": {
          "line": 504,
          "column": 2
        }
      },
      "name": "select",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#select",
      "line": 501
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#select",
      "anchor": "api-Database.Db#select"
    },
    "uid": "api/Database.Db#select",
    "indices": {
      "#select": 1,
      "Db#select": 2,
      "Database.Db#select": 3
    }
  },
  "api/Database.Db#traverse": {
    "id": "#traverse",
    "title": "Database.Db#traverse",
    "summary": "Create a traverse query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#traverse",
      "description": "<p>Create a traverse query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 511
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 511,
          "column": 0
        },
        "end": {
          "line": 514,
          "column": 2
        }
      },
      "name": "traverse",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#traverse",
      "line": 511
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#traverse",
      "anchor": "api-Database.Db#traverse"
    },
    "uid": "api/Database.Db#traverse",
    "indices": {
      "#traverse": 1,
      "Db#traverse": 2,
      "Database.Db#traverse": 3
    }
  },
  "api/Database.Db#insert": {
    "id": "#insert",
    "title": "Database.Db#insert",
    "summary": "Create an insert query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#insert",
      "description": "<p>Create an insert query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 522
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 522,
          "column": 0
        },
        "end": {
          "line": 525,
          "column": 2
        }
      },
      "name": "insert",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#insert",
      "line": 522
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#insert",
      "anchor": "api-Database.Db#insert"
    },
    "uid": "api/Database.Db#insert",
    "indices": {
      "#insert": 1,
      "Db#insert": 2,
      "Database.Db#insert": 3
    }
  },
  "api/Database.Db#update": {
    "id": "#update",
    "title": "Database.Db#update",
    "summary": "Create an update query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#update",
      "description": "<p>Create an update query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 533
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 533,
          "column": 0
        },
        "end": {
          "line": 536,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#update",
      "line": 533
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#update",
      "anchor": "api-Database.Db#update"
    },
    "uid": "api/Database.Db#update",
    "indices": {
      "#update": 1,
      "Db#update": 2,
      "Database.Db#update": 3
    }
  },
  "api/Database.Db#delete": {
    "id": "#delete",
    "title": "Database.Db#delete",
    "summary": "Create a delete query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#delete",
      "description": "<p>Create a delete query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 543
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 543,
          "column": 0
        },
        "end": {
          "line": 546,
          "column": 2
        }
      },
      "name": "delete",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#delete",
      "line": 543
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#delete",
      "anchor": "api-Database.Db#delete"
    },
    "uid": "api/Database.Db#delete",
    "indices": {
      "#delete": 1,
      "Db#delete": 2,
      "Database.Db#delete": 3
    }
  },
  "api/Database.Db#let": {
    "id": "#let",
    "title": "Database.Db#let",
    "summary": "Create a transactional query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#let",
      "description": "<p>Create a transactional query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 554
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 554,
          "column": 0
        },
        "end": {
          "line": 557,
          "column": 2
        }
      },
      "name": "let",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#let",
      "line": 554
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#let",
      "anchor": "api-Database.Db#let"
    },
    "uid": "api/Database.Db#let",
    "indices": {
      "#let": 1,
      "Db#let": 2,
      "Database.Db#let": 3
    }
  },
  "api/Database.Db#createUserContext": {
    "id": "#createUserContext",
    "title": "Database.Db#createUserContext",
    "summary": "Create a context for a user, using their authentication token.\nThe context includes the query builder methods, which will be executed\non behalf of the user.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createUserContext",
      "description": "<p>Create a context for a user, using their authentication token.\nThe context includes the query builder methods, which will be executed\non behalf of the user.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer|String} token The authentication token.",
          "typeInfo": {
            "types": [
              "Buffer",
              "String"
            ],
            "name": "token",
            "description": "<p>The authentication token.</p>\n"
          },
          "line": 576
        },
        {
          "type": "return",
          "string": "{Object}              The object containing the query builder methods.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The object containing the query builder methods.</p>\n"
          },
          "line": 576
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 576,
          "column": 0
        },
        "end": {
          "line": 610,
          "column": 2
        }
      },
      "name": "createUserContext",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createUserContext",
      "line": 576
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#createUserContext",
      "anchor": "api-Database.Db#createUserContext"
    },
    "uid": "api/Database.Db#createUserContext",
    "indices": {
      "#createUserContext": 1,
      "Db#createUserContext": 2,
      "Database.Db#createUserContext": 3
    }
  },
  "api/Database.Db#createFn": {
    "id": "#createFn",
    "title": "Database.Db#createFn",
    "summary": "Create a orient function from a plain Javascript function",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createFn",
      "description": "<p>Create a orient function from a plain Javascript function</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name     The name of the function",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the function</p>\n"
          },
          "line": 620
        },
        {
          "type": "param",
          "string": "{Object} fn       Plain Javascript function to stringify",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "fn",
            "description": "<p>Plain Javascript function to stringify</p>\n"
          },
          "line": 620
        },
        {
          "type": "param",
          "string": "{Object} options  Not currently used but will be used for 'IDEMPOTENT' arg",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>Not currently used but will be used for &#39;IDEMPOTENT&#39; arg</p>\n"
          },
          "line": 620
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 620
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "fn"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 620,
          "column": 0
        },
        "end": {
          "line": 640,
          "column": 2
        }
      },
      "name": "createFn",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createFn",
      "line": 620
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db#createFn",
      "anchor": "api-Database.Db#createFn"
    },
    "uid": "api/Database.Db#createFn",
    "indices": {
      "#createFn": 1,
      "Db#createFn": 2,
      "Database.Db#createFn": 3
    }
  },
  "api/Database.ODatabase": {
    "id": "ODatabase",
    "title": "ODatabase",
    "summary": "Database Constructor.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
    "symbol": "",
    "properties": {
      "id": "ODatabase",
      "namespace": "Database",
      "description": "<p>Database Constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The optional configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The optional configuration for the database.</p>\n"
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          },
          {
            "name": "owner"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "name": "ODatabase",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
      "isModule": true,
      "aliases": [
        "Db"
      ],
      "path": "ODatabase",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Database.ODatabase#configureLogger",
      "api/Database.ODatabase#configureTransport"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/ODatabase.html",
      "anchor": "api-Database.ODatabase"
    },
    "uid": "api/Database.ODatabase",
    "indices": {
      "ODatabase": 1,
      "Database.ODatabase": 2,
      "Db": 2
    }
  },
  "api/Database.ODatabase#configureLogger": {
    "id": "#configureLogger",
    "title": "ODatabase#configureLogger",
    "summary": "Configure the logger for the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
    "properties": {
      "id": "ODatabase#configureLogger",
      "description": "<p>Configure the logger for the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 37
        },
        {
          "type": "return",
          "string": "{Server}        The database instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>The database instance with the configured logger.</p>\n"
          },
          "line": 37
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "ODatabase",
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
      "isModule": false,
      "aliases": [],
      "path": "ODatabase#configureLogger",
      "line": 37
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.ODatabase",
    "meta": {
      "href": "/api/Database/ODatabase.html#api-Database.ODatabase#configureLogger",
      "anchor": "api-Database.ODatabase#configureLogger"
    },
    "uid": "api/Database.ODatabase#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "ODatabase#configureLogger": 2,
      "Database.ODatabase#configureLogger": 3
    }
  },
  "api/Database.ODatabase#configureTransport": {
    "id": "#configureTransport",
    "title": "ODatabase#configureTransport",
    "summary": "Configure the transport for the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
    "properties": {
      "id": "ODatabase#configureTransport",
      "description": "<p>Configure the transport for the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The database config.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The database config.</p>\n"
          },
          "line": 52
        },
        {
          "type": "return",
          "string": "{Server}        The configured database object.",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>The configured database object.</p>\n"
          },
          "line": 52
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "ODatabase",
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 2
        }
      },
      "name": "configureTransport",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/odatabase.js",
      "isModule": false,
      "aliases": [],
      "path": "ODatabase#configureTransport",
      "line": 52
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.ODatabase",
    "meta": {
      "href": "/api/Database/ODatabase.html#api-Database.ODatabase#configureTransport",
      "anchor": "api-Database.ODatabase#configureTransport"
    },
    "uid": "api/Database.ODatabase#configureTransport",
    "indices": {
      "#configureTransport": 1,
      "ODatabase#configureTransport": 2,
      "Database.ODatabase#configureTransport": 3
    }
  },
  "api/Database.Statement": {
    "id": "Statement",
    "title": "Database.Statement",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "symbol": "",
    "properties": {
      "id": "Database.Statement",
      "namespace": "Database",
      "description": "",
      "tags": [
        {
          "type": "module",
          "string": "",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 9
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "db"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "name": "Statement",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Statement",
      "line": 9
    },
    "documents": [],
    "entities": [
      "api/Database.Statement#strategy",
      "api/Database.Statement#from",
      "api/Database.Statement#increment",
      "api/Database.Statement#add",
      "api/Database.Statement#remove",
      "api/Database.Statement#put",
      "api/Database.Statement#upsert",
      "api/Database.Statement#skip",
      "api/Database.Statement#limit",
      "api/Database.Statement#let",
      "api/Database.Statement#commit",
      "api/Database.Statement#retry",
      "api/Database.Statement#wait",
      "api/Database.Statement#return",
      "api/Database.Statement#lucene",
      "api/Database.Statement#near",
      "api/Database.Statement#within",
      "api/Database.Statement#addParam",
      "api/Database.Statement#addParams",
      "api/Database.Statement#token",
      "api/Database.Statement#buildStatement",
      "api/Database.Statement#toString",
      "api/Database.Statement#buildOptions"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Statement.html",
      "anchor": "api-Database.Statement"
    },
    "uid": "api/Database.Statement",
    "indices": {
      "Statement": 1,
      "Database.Statement": 2
    }
  },
  "api/Database.Statement#strategy": {
    "id": "#strategy",
    "title": "Database.Statement#strategy",
    "summary": "A 'strategy' clause for traverse query",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#strategy",
      "description": "<p>A &#39;strategy&#39; clause for traverse query</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} args The strategy how traverse should go in deep,\n                     either 'DEPTH_FIRST'|'BREADTH_FIRST', the first one is default",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "args",
            "description": "<p>The strategy how traverse should go in deep,                      either &#39;DEPTH_FIRST&#39;|&#39;BREADTH_FIRST&#39;, the first one is default</p>\n"
          },
          "line": 43
        },
        {
          "type": "return",
          "string": "{Statement}  The statement object",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object</p>\n"
          },
          "line": 43
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "s"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 2
        }
      },
      "name": "strategy",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#strategy",
      "line": 43
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#strategy",
      "anchor": "api-Database.Statement#strategy"
    },
    "uid": "api/Database.Statement#strategy",
    "indices": {
      "#strategy": 1,
      "Statement#strategy": 2,
      "Database.Statement#strategy": 3
    }
  },
  "api/Database.Statement#from": {
    "id": "#from",
    "title": "Database.Statement#from",
    "summary": "Use the given record id or class name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#from",
      "description": "<p>Use the given record id or class name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|String[]|Function} args The record id, class name or expression.",
          "typeInfo": {
            "types": [
              "String",
              "Array&lt;String&gt;",
              "Function"
            ],
            "name": "args",
            "description": "<p>The record id, class name or expression.</p>\n"
          },
          "line": 97
        },
        {
          "type": "return",
          "string": "{Statement}                     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 97
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 97,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 2
        }
      },
      "name": "from",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#from",
      "line": 97
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#from",
      "anchor": "api-Database.Statement#from"
    },
    "uid": "api/Database.Statement#from",
    "indices": {
      "#from": 1,
      "Statement#from": 2,
      "Database.Statement#from": 3
    }
  },
  "api/Database.Statement#increment": {
    "id": "#increment",
    "title": "Database.Statement#increment",
    "summary": "An increment clause.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#increment",
      "description": "<p>An <code>increment</code> clause.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 127
        },
        {
          "type": "param",
          "string": "{Object}     value        The value to increment by, defaults to 1",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "value",
            "description": "<p>The value to increment by, defaults to 1</p>\n"
          },
          "line": 127
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 127
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 127,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "increment",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#increment",
      "line": 127
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#increment",
      "anchor": "api-Database.Statement#increment"
    },
    "uid": "api/Database.Statement#increment",
    "indices": {
      "#increment": 1,
      "Statement#increment": 2,
      "Database.Statement#increment": 3
    }
  },
  "api/Database.Statement#add": {
    "id": "#add",
    "title": "Database.Statement#add",
    "summary": "An add clause for set / list properties.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#add",
      "description": "<p>An <code>add</code> clause for set / list properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 141
        },
        {
          "type": "param",
          "string": "{Object}     ...values    The values to add in the set / list property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "...values",
            "description": "<p>The values to add in the set / list property.</p>\n"
          },
          "line": 141
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 141
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 141,
          "column": 0
        },
        "end": {
          "line": 151,
          "column": 2
        }
      },
      "name": "add",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#add",
      "line": 141
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#add",
      "anchor": "api-Database.Statement#add"
    },
    "uid": "api/Database.Statement#add",
    "indices": {
      "#add": 1,
      "Statement#add": 2,
      "Database.Statement#add": 3
    }
  },
  "api/Database.Statement#remove": {
    "id": "#remove",
    "title": "Database.Statement#remove",
    "summary": "A remove clause for map / set / list properties.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#remove",
      "description": "<p>A <code>remove</code> clause for map / set / list properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 161
        },
        {
          "type": "param",
          "string": "{Object}     ...values    The keys / values to remove from the map / set / list property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "...values",
            "description": "<p>The keys / values to remove from the map / set / list property.</p>\n"
          },
          "line": 161
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 161
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 161,
          "column": 0
        },
        "end": {
          "line": 171,
          "column": 2
        }
      },
      "name": "remove",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#remove",
      "line": 161
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#remove",
      "anchor": "api-Database.Statement#remove"
    },
    "uid": "api/Database.Statement#remove",
    "indices": {
      "#remove": 1,
      "Statement#remove": 2,
      "Database.Statement#remove": 3
    }
  },
  "api/Database.Statement#put": {
    "id": "#put",
    "title": "Database.Statement#put",
    "summary": "A put clause for map properties.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#put",
      "description": "<p>A <code>put</code> clause for map properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property    The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 180
        },
        {
          "type": "param",
          "string": "{Object}     keysValues  The keys and values to add in the map property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "keysValues",
            "description": "<p>The keys and values to add in the map property.</p>\n"
          },
          "line": 180
        },
        {
          "type": "return",
          "string": "{Statement}              The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 180
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "keysValues"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 180,
          "column": 0
        },
        "end": {
          "line": 184,
          "column": 2
        }
      },
      "name": "put",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#put",
      "line": 180
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#put",
      "anchor": "api-Database.Statement#put"
    },
    "uid": "api/Database.Statement#put",
    "indices": {
      "#put": 1,
      "Statement#put": 2,
      "Database.Statement#put": 3
    }
  },
  "api/Database.Statement#upsert": {
    "id": "#upsert",
    "title": "Database.Statement#upsert",
    "summary": "Upsert the records to avoid multiple queries.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#upsert",
      "description": "<p>Upsert the records to avoid multiple queries.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} condition          The condition clause, if any.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "condition",
            "description": "<p>The condition clause, if any.</p>\n"
          },
          "line": 195
        },
        {
          "type": "param",
          "string": "{Object}        params             The parameters to bind to the statement, if any.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameters to bind to the statement, if any.</p>\n"
          },
          "line": 195
        },
        {
          "type": "param",
          "string": "{String}        comparisonOperator The operator to use for comparison, defaults to '='.",
          "typeInfo": {
            "defaultValue": "'.",
            "types": [
              "String"
            ],
            "name": "comparisonOperator",
            "description": "<p>The operator to use for comparison, defaults to &#39;=&#39;.</p>\n"
          },
          "line": 195
        },
        {
          "type": "return",
          "string": "{Statement}                        The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 195
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "condition"
          },
          {
            "name": "params"
          },
          {
            "name": "comparisonOperator"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 195,
          "column": 0
        },
        "end": {
          "line": 205,
          "column": 2
        }
      },
      "name": "upsert",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#upsert",
      "line": 195
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#upsert",
      "anchor": "api-Database.Statement#upsert"
    },
    "uid": "api/Database.Statement#upsert",
    "indices": {
      "#upsert": 1,
      "Statement#upsert": 2,
      "Database.Statement#upsert": 3
    }
  },
  "api/Database.Statement#skip": {
    "id": "#skip",
    "title": "Database.Statement#skip",
    "summary": "Set the offset to start returning results from.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#skip",
      "description": "<p>Set the offset to start returning results from.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} value  The offset.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "value",
            "description": "<p>The offset.</p>\n"
          },
          "line": 281
        },
        {
          "type": "return",
          "string": "{Statement}      The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 281
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 281,
          "column": 0
        },
        "end": {
          "line": 284,
          "column": 2
        }
      },
      "name": "skip",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#skip",
      "line": 281
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#skip",
      "anchor": "api-Database.Statement#skip"
    },
    "uid": "api/Database.Statement#skip",
    "indices": {
      "#skip": 1,
      "Statement#skip": 2,
      "Database.Statement#skip": 3
    }
  },
  "api/Database.Statement#limit": {
    "id": "#limit",
    "title": "Database.Statement#limit",
    "summary": "Set the maximum number of results to return.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#limit",
      "description": "<p>Set the maximum number of results to return.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} value  The limit.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "value",
            "description": "<p>The limit.</p>\n"
          },
          "line": 302
        },
        {
          "type": "return",
          "string": "{Statement}      The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 302
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 302,
          "column": 0
        },
        "end": {
          "line": 305,
          "column": 2
        }
      },
      "name": "limit",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#limit",
      "line": 302
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#limit",
      "anchor": "api-Database.Statement#limit"
    },
    "uid": "api/Database.Statement#limit",
    "indices": {
      "#limit": 1,
      "Statement#limit": 2,
      "Database.Statement#limit": 3
    }
  },
  "api/Database.Statement#let": {
    "id": "#let",
    "title": "Database.Statement#let",
    "summary": "Assign a value to a variable within an SQL statement.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#let",
      "description": "<p>Assign a value to a variable within an SQL statement.</p>\n<blockquote>\n<p>Note: The value will <strong>not</strong> be encoded as it may contain arbitrary SQL expressions.\nuse <code>OrientDB.utils.encode()</code> if you need to allow safe values here.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}           name  The name of the variable to assign",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the variable to assign</p>\n"
          },
          "line": 326
        },
        {
          "type": "param",
          "string": "{String|Statement} value The value of the variable, can be an SQL statement.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"\">Database.Statement</a>"
            ],
            "name": "value",
            "description": "<p>The value of the variable, can be an SQL statement.</p>\n"
          },
          "line": 326
        },
        {
          "type": "return",
          "string": "{Statement}              The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 326
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 330,
          "column": 2
        }
      },
      "name": "let",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#let",
      "line": 326
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#let",
      "anchor": "api-Database.Statement#let"
    },
    "uid": "api/Database.Statement#let",
    "indices": {
      "#let": 1,
      "Statement#let": 2,
      "Database.Statement#let": 3
    }
  },
  "api/Database.Statement#commit": {
    "id": "#commit",
    "title": "Database.Statement#commit",
    "summary": "Commit a transaction.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#commit",
      "description": "<p>Commit a transaction.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} retryLimit The maximum number of times to retry, defaults to 0.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "retryLimit",
            "description": "<p>The maximum number of times to retry, defaults to 0.</p>\n"
          },
          "line": 346
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 346
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "retryLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 346,
          "column": 0
        },
        "end": {
          "line": 349,
          "column": 2
        }
      },
      "name": "commit",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#commit",
      "line": 346
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#commit",
      "anchor": "api-Database.Statement#commit"
    },
    "uid": "api/Database.Statement#commit",
    "indices": {
      "#commit": 1,
      "Statement#commit": 2,
      "Database.Statement#commit": 3
    }
  },
  "api/Database.Statement#retry": {
    "id": "#retry",
    "title": "Database.Statement#retry",
    "summary": "Specify the number of times to retry a command.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#retry",
      "description": "<p>Specify the number of times to retry a command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} retryLimit The maximum number of times to retry, defaults to 1.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "retryLimit",
            "description": "<p>The maximum number of times to retry, defaults to 1.</p>\n"
          },
          "line": 358
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 358
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "retryLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 358,
          "column": 0
        },
        "end": {
          "line": 361,
          "column": 2
        }
      },
      "name": "retry",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#retry",
      "line": 358
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#retry",
      "anchor": "api-Database.Statement#retry"
    },
    "uid": "api/Database.Statement#retry",
    "indices": {
      "#retry": 1,
      "Statement#retry": 2,
      "Database.Statement#retry": 3
    }
  },
  "api/Database.Statement#wait": {
    "id": "#wait",
    "title": "Database.Statement#wait",
    "summary": "Specify the number of milliseconds to wait between retrying a command.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#wait",
      "description": "<p>Specify the number of milliseconds to wait between retrying a command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} waitLimit  The number of ms to wait.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "waitLimit",
            "description": "<p>The number of ms to wait.</p>\n"
          },
          "line": 369
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 369
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "waitLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 369,
          "column": 0
        },
        "end": {
          "line": 372,
          "column": 2
        }
      },
      "name": "wait",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#wait",
      "line": 369
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#wait",
      "anchor": "api-Database.Statement#wait"
    },
    "uid": "api/Database.Statement#wait",
    "indices": {
      "#wait": 1,
      "Statement#wait": 2,
      "Database.Statement#wait": 3
    }
  },
  "api/Database.Statement#return": {
    "id": "#return",
    "title": "Database.Statement#return",
    "summary": "Return a certain variable if there is a let clause.\nFor update, insert or delete statements it will add a RETURN clause before\nthe WHERE clause.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#return",
      "description": "<p>Return a certain variable if there is a let clause.\nFor update, insert or delete statements it will add a RETURN clause before\nthe WHERE clause.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} value The name of the variable or what to return.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "value",
            "description": "<p>The name of the variable or what to return.</p>\n"
          },
          "line": 382
        },
        {
          "type": "return",
          "string": "{Statement}   The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 382
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 382,
          "column": 0
        },
        "end": {
          "line": 385,
          "column": 2
        }
      },
      "name": "return",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#return",
      "line": 382
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#return",
      "anchor": "api-Database.Statement#return"
    },
    "uid": "api/Database.Statement#return",
    "indices": {
      "#return": 1,
      "Statement#return": 2,
      "Database.Statement#return": 3
    }
  },
  "api/Database.Statement#lucene": {
    "id": "#lucene",
    "title": "Database.Statement#lucene",
    "summary": "Specify a lucene full text query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#lucene",
      "description": "<p>Specify a lucene full text query.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} ...property    The names of the properties to include in the query.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "...property",
            "description": "<p>The names of the properties to include in the query.</p>\n"
          },
          "line": 396
        },
        {
          "type": "param",
          "string": "{String}        luceneQuery    The lucene query, using lucene QueryParser syntax.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "luceneQuery",
            "description": "<p>The lucene query, using lucene QueryParser syntax.</p>\n"
          },
          "line": 396
        },
        {
          "type": "return",
          "string": "{Statement}                    The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 396
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "luceneQuery"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 396,
          "column": 0
        },
        "end": {
          "line": 424,
          "column": 2
        }
      },
      "name": "lucene",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#lucene",
      "line": 396
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#lucene",
      "anchor": "api-Database.Statement#lucene"
    },
    "uid": "api/Database.Statement#lucene",
    "indices": {
      "#lucene": 1,
      "Statement#lucene": 2,
      "Database.Statement#lucene": 3
    }
  },
  "api/Database.Statement#near": {
    "id": "#near",
    "title": "Database.Statement#near",
    "summary": "Specify a lucene spatial query, find items near the given longitude / latitude.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#near",
      "description": "<p>Specify a lucene spatial query, find items near the given longitude / latitude.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} latitudeProperty  Either the name of the longitude property,\n                                          or a map of field names to values.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "latitudeProperty",
            "description": "<p>Either the name of the longitude property,                                           or a map of field names to values.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{String|Number} longitudeProperty Either the name of the latitude property,\n                                          or the optional `maxDistanceInKms`.",
          "typeInfo": {
            "types": [
              "String",
              "Number"
            ],
            "name": "longitudeProperty",
            "description": "<p>Either the name of the latitude property,                                           or the optional <code>maxDistanceInKms</code>.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        longitude         The longitude value to compare against.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "longitude",
            "description": "<p>The longitude value to compare against.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        latitude          The latitude value to compare against.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "latitude",
            "description": "<p>The latitude value to compare against.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        maxDistanceInKms  The maximum distance in kilometers.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "maxDistanceInKms",
            "description": "<p>The maximum distance in kilometers.</p>\n"
          },
          "line": 440
        },
        {
          "type": "return",
          "string": "{Statement}                       The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 440
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "latitudeProperty"
          },
          {
            "name": "longitudeProperty"
          },
          {
            "name": "longitude"
          },
          {
            "name": "latitude"
          },
          {
            "name": "maxDistanceInKms"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 440,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 2
        }
      },
      "name": "near",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#near",
      "line": 440
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#near",
      "anchor": "api-Database.Statement#near"
    },
    "uid": "api/Database.Statement#near",
    "indices": {
      "#near": 1,
      "Statement#near": 2,
      "Database.Statement#near": 3
    }
  },
  "api/Database.Statement#within": {
    "id": "#within",
    "title": "Database.Statement#within",
    "summary": "Specify a lucene spatial query, find items within the given bounding box.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#within",
      "description": "<p>Specify a lucene spatial query, find items within the given bounding box.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Number} latitudeProperty  The name of the latitude property.",
          "typeInfo": {
            "types": [
              "String",
              "Number"
            ],
            "name": "latitudeProperty",
            "description": "<p>The name of the latitude property.</p>\n"
          },
          "line": 478
        },
        {
          "type": "param",
          "string": "{String|Object} longitudeProperty The name of the longitude property.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "longitudeProperty",
            "description": "<p>The name of the longitude property.</p>\n"
          },
          "line": 478
        },
        {
          "type": "param",
          "string": "{Array}         box               An array of coordinates.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "name": "box",
            "description": "<p>An array of coordinates.</p>\n"
          },
          "line": 478
        },
        {
          "type": "return",
          "string": "{Statement}                       The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 478
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "latitudeProperty"
          },
          {
            "name": "longitudeProperty"
          },
          {
            "name": "box"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 478,
          "column": 0
        },
        "end": {
          "line": 482,
          "column": 2
        }
      },
      "name": "within",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#within",
      "line": 478
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#within",
      "anchor": "api-Database.Statement#within"
    },
    "uid": "api/Database.Statement#within",
    "indices": {
      "#within": 1,
      "Statement#within": 2,
      "Database.Statement#within": 3
    }
  },
  "api/Database.Statement#addParam": {
    "id": "#addParam",
    "title": "Database.Statement#addParam",
    "summary": "Add the given parameter to the query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#addParam",
      "description": "<p>Add the given parameter to the query.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} key    The parameter key.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "key",
            "description": "<p>The parameter key.</p>\n"
          },
          "line": 493
        },
        {
          "type": "param",
          "string": "{Object} params The parameter value.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameter value.</p>\n"
          },
          "line": 493
        },
        {
          "type": "return",
          "string": "{Statement}     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 493
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "key"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 493,
          "column": 0
        },
        "end": {
          "line": 496,
          "column": 2
        }
      },
      "name": "addParam",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#addParam",
      "line": 493
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#addParam",
      "anchor": "api-Database.Statement#addParam"
    },
    "uid": "api/Database.Statement#addParam",
    "indices": {
      "#addParam": 1,
      "Statement#addParam": 2,
      "Database.Statement#addParam": 3
    }
  },
  "api/Database.Statement#addParams": {
    "id": "#addParams",
    "title": "Database.Statement#addParams",
    "summary": "Add the given parameters to the query.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#addParams",
      "description": "<p>Add the given parameters to the query.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} params The parameters to add.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameters to add.</p>\n"
          },
          "line": 504
        },
        {
          "type": "return",
          "string": "{Statement}     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 504
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "params"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 504,
          "column": 0
        },
        "end": {
          "line": 513,
          "column": 2
        }
      },
      "name": "addParams",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#addParams",
      "line": 504
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#addParams",
      "anchor": "api-Database.Statement#addParams"
    },
    "uid": "api/Database.Statement#addParams",
    "indices": {
      "#addParams": 1,
      "Statement#addParams": 2,
      "Database.Statement#addParams": 3
    }
  },
  "api/Database.Statement#token": {
    "id": "#token",
    "title": "Database.Statement#token",
    "summary": "Use a particular Auth Token for this statement.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#token",
      "description": "<p>Use a particular Auth Token for this statement.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     token  The token to use",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "token",
            "description": "<p>The token to use</p>\n"
          },
          "line": 522
        },
        {
          "type": "return",
          "string": "{Statement}         The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 522
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 522,
          "column": 0
        },
        "end": {
          "line": 528,
          "column": 2
        }
      },
      "name": "token",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#token",
      "line": 522
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#token",
      "anchor": "api-Database.Statement#token"
    },
    "uid": "api/Database.Statement#token",
    "indices": {
      "#token": 1,
      "Statement#token": 2,
      "Database.Statement#token": 3
    }
  },
  "api/Database.Statement#buildStatement": {
    "id": "#buildStatement",
    "title": "Database.Statement#buildStatement",
    "summary": "Build the statement.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#buildStatement",
      "description": "<p>Build the statement.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String}             The SQL statement.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The SQL statement.</p>\n"
          },
          "line": 535
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 535,
          "column": 0
        },
        "end": {
          "line": 897,
          "column": 2
        }
      },
      "name": "buildStatement",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#buildStatement",
      "line": 535
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#buildStatement",
      "anchor": "api-Database.Statement#buildStatement"
    },
    "uid": "api/Database.Statement#buildStatement",
    "indices": {
      "#buildStatement": 1,
      "Statement#buildStatement": 2,
      "Database.Statement#buildStatement": 3
    }
  },
  "api/Database.Statement#toString": {
    "id": "#toString",
    "title": "Database.Statement#toString",
    "summary": "Return a string version of the statement, with parameters prepared and bound.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#toString",
      "description": "<p>Return a string version of the statement, with parameters prepared and bound.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String} The prepared statement.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The prepared statement.</p>\n"
          },
          "line": 905
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 905,
          "column": 0
        },
        "end": {
          "line": 907,
          "column": 2
        }
      },
      "name": "toString",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#toString",
      "line": 905
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#toString",
      "anchor": "api-Database.Statement#toString"
    },
    "uid": "api/Database.Statement#toString",
    "indices": {
      "#toString": 1,
      "Statement#toString": 2,
      "Database.Statement#toString": 3
    }
  },
  "api/Database.Statement#buildOptions": {
    "id": "#buildOptions",
    "title": "Database.Statement#buildOptions",
    "summary": "Build the options for the statement.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#buildOptions",
      "description": "<p>Build the options for the statement.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Object} The SQL statement options.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The SQL statement options.</p>\n"
          },
          "line": 914
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 914,
          "column": 0
        },
        "end": {
          "line": 945,
          "column": 2
        }
      },
      "name": "buildOptions",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#buildOptions",
      "line": 914
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement#buildOptions",
      "anchor": "api-Database.Statement#buildOptions"
    },
    "uid": "api/Database.Statement#buildOptions",
    "indices": {
      "#buildOptions": 1,
      "Statement#buildOptions": 2,
      "Database.Statement#buildOptions": 3
    }
  },
  "api/Database.Transaction": {
    "id": "Transaction",
    "title": "Database.Transaction",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
    "symbol": "",
    "properties": {
      "id": "Database.Transaction",
      "namespace": "Database",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{Db}      db  The database the transaction is for.",
          "typeInfo": {
            "types": [
              "<a href=\"Db.html\">Database.Db</a>"
            ],
            "name": "db",
            "description": "<p>The database the transaction is for.</p>\n"
          },
          "line": 11
        },
        {
          "type": "param",
          "string": "{Integer} id  The transaction id.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "id",
            "description": "<p>The transaction id.</p>\n"
          },
          "line": 11
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "db"
          },
          {
            "name": "id"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 18,
          "column": 1
        }
      },
      "name": "Transaction",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Transaction",
      "line": 11
    },
    "documents": [],
    "entities": [
      "api/Database.Transaction#commit",
      "api/Database.Transaction#create",
      "api/Database.Transaction#update",
      "api/Database.Transaction#delete"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Transaction.html",
      "anchor": "api-Database.Transaction"
    },
    "uid": "api/Database.Transaction",
    "indices": {
      "Transaction": 1,
      "Database.Transaction": 2
    }
  },
  "api/Database.Transaction#commit": {
    "id": "#commit",
    "title": "Database.Transaction#commit",
    "summary": "Commit the transaction.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#commit",
      "description": "<p>Commit the transaction.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Object} The results of the transaction.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 27
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 2
        }
      },
      "name": "commit",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#commit",
      "line": 27
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction#commit",
      "anchor": "api-Database.Transaction#commit"
    },
    "uid": "api/Database.Transaction#commit",
    "indices": {
      "#commit": 1,
      "Transaction#commit": 2,
      "Database.Transaction#commit": 3
    }
  },
  "api/Database.Transaction#create": {
    "id": "#create",
    "title": "Database.Transaction#create",
    "summary": "Insert the given record into the database.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#create",
      "description": "<p>Insert the given record into the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record  The record to insert.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to insert.</p>\n"
          },
          "line": 105
        },
        {
          "type": "return",
          "string": "{Transaction}    The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 105
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 105,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#create",
      "line": 105
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction#create",
      "anchor": "api-Database.Transaction#create"
    },
    "uid": "api/Database.Transaction#create",
    "indices": {
      "#create": 1,
      "Transaction#create": 2,
      "Database.Transaction#create": 3
    }
  },
  "api/Database.Transaction#update": {
    "id": "#update",
    "title": "Database.Transaction#update",
    "summary": "Update the given record.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#update",
      "description": "<p>Update the given record.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record  The record to update.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to update.</p>\n"
          },
          "line": 124
        },
        {
          "type": "return",
          "string": "{Transaction}    The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 124
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#update",
      "line": 124
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction#update",
      "anchor": "api-Database.Transaction#update"
    },
    "uid": "api/Database.Transaction#update",
    "indices": {
      "#update": 1,
      "Transaction#update": 2,
      "Database.Transaction#update": 3
    }
  },
  "api/Database.Transaction#delete": {
    "id": "#delete",
    "title": "Database.Transaction#delete",
    "summary": "Delete the given record.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#delete",
      "description": "<p>Delete the given record.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|RID|Object} record  The record or record id to delete.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"../RecordID.html\">RecordID</a>",
              "Object"
            ],
            "name": "record",
            "description": "<p>The record or record id to delete.</p>\n"
          },
          "line": 147
        },
        {
          "type": "return",
          "string": "{Transaction}               The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 147
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 147,
          "column": 0
        },
        "end": {
          "line": 162,
          "column": 2
        }
      },
      "name": "delete",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#delete",
      "line": 147
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction#delete",
      "anchor": "api-Database.Transaction#delete"
    },
    "uid": "api/Database.Transaction#delete",
    "indices": {
      "#delete": 1,
      "Transaction#delete": 2,
      "Database.Transaction#delete": 3
    }
  },
  "api/OrientDBError": {
    "id": "OrientDBError",
    "title": "OrientDBError",
    "summary": "A custom error class",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
    "symbol": "",
    "properties": {
      "id": "OrientDBError",
      "description": "<p>A custom error class</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "params": []
      },
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 1
        }
      },
      "name": "OrientDBError",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
      "isModule": true,
      "aliases": [],
      "path": "OrientDBError",
      "line": 6
    },
    "documents": [],
    "entities": [
      "api/OrientDBError.prototype",
      "api/OrientDBError@name",
      "api/OrientDBError#init",
      "api/OrientDBError.inherit"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/OrientDBError.html",
      "anchor": "api-OrientDBError"
    },
    "uid": "api/OrientDBError",
    "indices": {
      "OrientDBError": 1
    }
  },
  "api/OrientDBError.prototype": {
    "id": ".prototype",
    "title": "OrientDBError.prototype",
    "summary": "Extend the native error class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError.prototype",
      "description": "<p>Extend the native error class.</p>\n",
      "tags": [
        {
          "type": "type",
          "string": "",
          "explicitType": "Object",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": null,
            "description": null
          },
          "line": 15
        }
      ],
      "ctx": {
        "type": "Object",
        "symbol": "."
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      },
      "name": "prototype",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError.prototype",
      "line": 15
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError.prototype",
      "anchor": "api-OrientDBError.prototype"
    },
    "uid": "api/OrientDBError.prototype",
    "indices": {
      ".prototype": 1,
      "OrientDBError.prototype": 2
    }
  },
  "api/OrientDBError@name": {
    "id": "@name",
    "title": "OrientDBError@name",
    "summary": "The name of the error.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError@name",
      "description": "<p>The name of the error.</p>\n",
      "tags": [
        {
          "type": "type",
          "string": "",
          "explicitType": "String",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": null,
            "description": null
          },
          "line": 25
        }
      ],
      "ctx": {
        "type": "String",
        "scope": "prototype",
        "value": "OrientDBError",
        "symbol": "@"
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 47
        }
      },
      "name": "name",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError@name",
      "line": 25
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError@name",
      "anchor": "api-OrientDBError@name"
    },
    "uid": "api/OrientDBError@name",
    "indices": {
      "@name": 1,
      "OrientDBError@name": 2
    }
  },
  "api/OrientDBError#init": {
    "id": "#init",
    "title": "OrientDBError#init",
    "summary": "Initializes the error, child classes can override this.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError#init",
      "description": "<p>Initializes the error, child classes can override this.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} message the error message",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "message",
            "description": "<p>the error message</p>\n"
          },
          "line": 31
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "message"
          }
        ],
        "symbol": "#"
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError#init",
      "line": 31
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError#init",
      "anchor": "api-OrientDBError#init"
    },
    "uid": "api/OrientDBError#init",
    "indices": {
      "#init": 1,
      "OrientDBError#init": 2
    }
  },
  "api/OrientDBError.inherit": {
    "id": ".inherit",
    "title": "OrientDBError.inherit",
    "summary": "Inherit from the custom error class.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError.inherit",
      "description": "<p>Inherit from the custom error class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Function} init The init function, should have a name.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "init",
            "description": "<p>The init function, should have a name.</p>\n"
          },
          "line": 40
        },
        {
          "type": "return",
          "string": "{Function}      The descendant error class.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "description": "<p>The descendant error class.</p>\n"
          },
          "line": 40
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "init"
          }
        ],
        "symbol": "."
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "inherit",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError.inherit",
      "line": 40
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError.inherit",
      "anchor": "api-OrientDBError.inherit"
    },
    "uid": "api/OrientDBError.inherit",
    "indices": {
      ".inherit": 1,
      "OrientDBError.inherit": 2
    }
  },
  "api/Migration": {
    "id": "Migration",
    "title": "Migration",
    "summary": "The migration constructor.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
    "symbol": "",
    "properties": {
      "id": "Migration",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"migrations\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#migrations\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrations</span>\n    </h1>\n  <p>The migration constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the migration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the migration.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "Migration",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Migration",
      "line": 14
    },
    "documents": [],
    "entities": [
      "api/Migration#configure",
      "api/Migration#up",
      "api/Migration#down"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Migration.html",
      "anchor": "api-Migration"
    },
    "uid": "api/Migration",
    "indices": {
      "Migration": 1
    }
  },
  "api/Migration#configure": {
    "id": "#configure",
    "title": "Migration#configure",
    "summary": "Configure the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#configure",
      "description": "<p>Configure the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}    config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 35
        },
        {
          "type": "return",
          "string": "{Migration}        The migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Migration</a>"
            ],
            "description": "<p>The migration instance.</p>\n"
          },
          "line": 35
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 45,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#configure",
      "line": 35
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration#configure",
      "anchor": "api-Migration#configure"
    },
    "uid": "api/Migration#configure",
    "indices": {
      "#configure": 1,
      "Migration#configure": 2
    }
  },
  "api/Migration#up": {
    "id": "#up",
    "title": "Migration#up",
    "summary": "Perform the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#up",
      "description": "<p>Perform the migration.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 53
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 2
        }
      },
      "name": "up",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#up",
      "line": 53
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration#up",
      "anchor": "api-Migration#up"
    },
    "uid": "api/Migration#up",
    "indices": {
      "#up": 1,
      "Migration#up": 2
    }
  },
  "api/Migration#down": {
    "id": "#down",
    "title": "Migration#down",
    "summary": "Revert the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#down",
      "description": "<p>Revert the migration.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 63
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 63,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 2
        }
      },
      "name": "down",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#down",
      "line": 63
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration#down",
      "anchor": "api-Migration#down"
    },
    "uid": "api/Migration#down",
    "indices": {
      "#down": 1,
      "Migration#down": 2
    }
  },
  "api/MigrationManager": {
    "id": "MigrationManager",
    "title": "MigrationManager",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "symbol": "",
    "properties": {
      "id": "MigrationManager",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"migration-manager\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#migration-manager\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migration Manager</span>\n    </h1>\n  ",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the migration manager.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the migration manager.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "name": "MigrationManager",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": true,
      "aliases": [],
      "path": "MigrationManager",
      "line": 14
    },
    "documents": [],
    "entities": [
      "api/MigrationManager#configure",
      "api/MigrationManager#create",
      "api/MigrationManager#generateMigration",
      "api/MigrationManager#list",
      "api/MigrationManager#listAvailable",
      "api/MigrationManager#ensureStructure",
      "api/MigrationManager#listApplied",
      "api/MigrationManager#up",
      "api/MigrationManager#down",
      "api/MigrationManager#loadMigration",
      "api/MigrationManager#applyMigration",
      "api/MigrationManager#revertMigration"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/MigrationManager.html",
      "anchor": "api-MigrationManager"
    },
    "uid": "api/MigrationManager",
    "indices": {
      "MigrationManager": 1
    }
  },
  "api/MigrationManager#configure": {
    "id": "#configure",
    "title": "MigrationManager#configure",
    "summary": "Configure the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#configure",
      "description": "<p>Configure the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}    config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 34
        },
        {
          "type": "return",
          "string": "{MigrationManager}        The migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">MigrationManager</a>"
            ],
            "description": "<p>The migration instance.</p>\n"
          },
          "line": 34
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#configure",
      "line": 34
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#configure",
      "anchor": "api-MigrationManager#configure"
    },
    "uid": "api/MigrationManager#configure",
    "indices": {
      "#configure": 1,
      "MigrationManager#configure": 2
    }
  },
  "api/MigrationManager#create": {
    "id": "#create",
    "title": "MigrationManager#create",
    "summary": "Create a new migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#create",
      "description": "<p>Create a new migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config  The name or configuration for the new migration.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The name or configuration for the new migration.</p>\n"
          },
          "line": 52
        },
        {
          "type": "promise",
          "string": "{String} The full path to the created migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 52
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#create",
      "line": 52
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#create",
      "anchor": "api-MigrationManager#create"
    },
    "uid": "api/MigrationManager#create",
    "indices": {
      "#create": 1,
      "MigrationManager#create": 2
    }
  },
  "api/MigrationManager#generateMigration": {
    "id": "#generateMigration",
    "title": "MigrationManager#generateMigration",
    "summary": "Generate the content for a migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#generateMigration",
      "description": "<p>Generate the content for a migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 83
        },
        {
          "type": "return",
          "string": "{String}        The generated JavaScript source code.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The generated JavaScript source code.</p>\n"
          },
          "line": 83
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 88,
          "column": 2
        }
      },
      "name": "generateMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#generateMigration",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#generateMigration",
      "anchor": "api-MigrationManager#generateMigration"
    },
    "uid": "api/MigrationManager#generateMigration",
    "indices": {
      "#generateMigration": 1,
      "MigrationManager#generateMigration": 2
    }
  },
  "api/MigrationManager#list": {
    "id": "#list",
    "title": "MigrationManager#list",
    "summary": "List the migrations that have not yet been applied.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#list",
      "description": "<p>List the migrations that have not yet been applied.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{String[]} An array of migration names",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 96
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#list",
      "line": 96
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#list",
      "anchor": "api-MigrationManager#list"
    },
    "uid": "api/MigrationManager#list",
    "indices": {
      "#list": 1,
      "MigrationManager#list": 2
    }
  },
  "api/MigrationManager#listAvailable": {
    "id": "#listAvailable",
    "title": "MigrationManager#listAvailable",
    "summary": "List all the available migrations.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#listAvailable",
      "description": "<p>List all the available migrations.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{String[]} The names of the available migrations.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 138
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 147,
          "column": 2
        }
      },
      "name": "listAvailable",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#listAvailable",
      "line": 138
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#listAvailable",
      "anchor": "api-MigrationManager#listAvailable"
    },
    "uid": "api/MigrationManager#listAvailable",
    "indices": {
      "#listAvailable": 1,
      "MigrationManager#listAvailable": 2
    }
  },
  "api/MigrationManager#ensureStructure": {
    "id": "#ensureStructure",
    "title": "MigrationManager#ensureStructure",
    "summary": "Ensure the migration class exists.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#ensureStructure",
      "description": "<p>Ensure the migration class exists.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{MigrationManager} The manager instance with intact structure.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 154
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 154,
          "column": 0
        },
        "end": {
          "line": 174,
          "column": 2
        }
      },
      "name": "ensureStructure",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#ensureStructure",
      "line": 154
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#ensureStructure",
      "anchor": "api-MigrationManager#ensureStructure"
    },
    "uid": "api/MigrationManager#ensureStructure",
    "indices": {
      "#ensureStructure": 1,
      "MigrationManager#ensureStructure": 2
    }
  },
  "api/MigrationManager#listApplied": {
    "id": "#listApplied",
    "title": "MigrationManager#listApplied",
    "summary": "Retrieve a list of applied migrations.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#listApplied",
      "description": "<p>Retrieve a list of applied migrations.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Object[]} The applied migrations.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 181
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 181,
          "column": 0
        },
        "end": {
          "line": 187,
          "column": 2
        }
      },
      "name": "listApplied",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#listApplied",
      "line": 181
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#listApplied",
      "anchor": "api-MigrationManager#listApplied"
    },
    "uid": "api/MigrationManager#listApplied",
    "indices": {
      "#listApplied": 1,
      "MigrationManager#listApplied": 2
    }
  },
  "api/MigrationManager#up": {
    "id": "#up",
    "title": "MigrationManager#up",
    "summary": "Perform the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#up",
      "description": "<p>Perform the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} limit The maximum number of migrations to apply, if any.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of migrations to apply, if any.</p>\n"
          },
          "line": 196
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 196
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 196,
          "column": 0
        },
        "end": {
          "line": 214,
          "column": 2
        }
      },
      "name": "up",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#up",
      "line": 196
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#up",
      "anchor": "api-MigrationManager#up"
    },
    "uid": "api/MigrationManager#up",
    "indices": {
      "#up": 1,
      "MigrationManager#up": 2
    }
  },
  "api/MigrationManager#down": {
    "id": "#down",
    "title": "MigrationManager#down",
    "summary": "Revert the migration.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#down",
      "description": "<p>Revert the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} limit The maximum number of migrations to revert, if any.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of migrations to revert, if any.</p>\n"
          },
          "line": 223
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 223
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 223,
          "column": 0
        },
        "end": {
          "line": 248,
          "column": 2
        }
      },
      "name": "down",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#down",
      "line": 223
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#down",
      "anchor": "api-MigrationManager#down"
    },
    "uid": "api/MigrationManager#down",
    "indices": {
      "#down": 1,
      "MigrationManager#down": 2
    }
  },
  "api/MigrationManager#loadMigration": {
    "id": "#loadMigration",
    "title": "MigrationManager#loadMigration",
    "summary": "Load the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#loadMigration",
      "description": "<p>Load the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}    name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 257
        },
        {
          "type": "return",
          "string": "{Migration}      The loaded migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Migration.html\">Migration</a>"
            ],
            "description": "<p>The loaded migration instance.</p>\n"
          },
          "line": 257
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 257,
          "column": 0
        },
        "end": {
          "line": 260,
          "column": 2
        }
      },
      "name": "loadMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#loadMigration",
      "line": 257
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#loadMigration",
      "anchor": "api-MigrationManager#loadMigration"
    },
    "uid": "api/MigrationManager#loadMigration",
    "indices": {
      "#loadMigration": 1,
      "MigrationManager#loadMigration": 2
    }
  },
  "api/MigrationManager#applyMigration": {
    "id": "#applyMigration",
    "title": "MigrationManager#applyMigration",
    "summary": "Apply the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#applyMigration",
      "description": "<p>Apply the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 268
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 268
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 268,
          "column": 0
        },
        "end": {
          "line": 282,
          "column": 2
        }
      },
      "name": "applyMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#applyMigration",
      "line": 268
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#applyMigration",
      "anchor": "api-MigrationManager#applyMigration"
    },
    "uid": "api/MigrationManager#applyMigration",
    "indices": {
      "#applyMigration": 1,
      "MigrationManager#applyMigration": 2
    }
  },
  "api/MigrationManager#revertMigration": {
    "id": "#revertMigration",
    "title": "MigrationManager#revertMigration",
    "summary": "Revert the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#revertMigration",
      "description": "<p>Revert the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 291
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 291
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 291,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 2
        }
      },
      "name": "revertMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#revertMigration",
      "line": 291
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager#revertMigration",
      "anchor": "api-MigrationManager#revertMigration"
    },
    "uid": "api/MigrationManager#revertMigration",
    "indices": {
      "#revertMigration": 1,
      "MigrationManager#revertMigration": 2
    }
  },
  "api/Pool": {
    "id": "Pool",
    "title": "Pool",
    "summary": "Pool Constructor",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "symbol": "",
    "properties": {
      "id": "Pool",
      "description": "<p>Pool Constructor</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "config",
          "typeInfo": {
            "types": [],
            "name": "config",
            "description": null
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "name": "Pool",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Pool",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Pool#acquire",
      "api/Pool#getPoolSize",
      "api/Pool#getMaxPoolSize",
      "api/Pool#getAvailableResources",
      "api/Pool#release"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Pool.html",
      "anchor": "api-Pool"
    },
    "uid": "api/Pool",
    "indices": {
      "Pool": 1
    }
  },
  "api/Pool#acquire": {
    "id": "#acquire",
    "title": "Pool#acquire",
    "summary": "Request a new db.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#acquire",
      "description": "<p>Request a new db.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Promise} A promise that returns the db if acquired or An arror if rejected",
          "typeInfo": {
            "types": [
              "Promise"
            ],
            "description": "<p>A promise that returns the db if acquired or An arror if rejected</p>\n"
          },
          "line": 56
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 2
        }
      },
      "name": "acquire",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#acquire",
      "line": 56
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool#acquire",
      "anchor": "api-Pool#acquire"
    },
    "uid": "api/Pool#acquire",
    "indices": {
      "#acquire": 1,
      "Pool#acquire": 2
    }
  },
  "api/Pool#getPoolSize": {
    "id": "#getPoolSize",
    "title": "Pool#getPoolSize",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getPoolSize",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{number}",
          "typeInfo": {
            "types": [
              "number"
            ],
            "name": null,
            "description": null
          },
          "line": 113
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 2
        }
      },
      "name": "getPoolSize",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getPoolSize",
      "line": 113
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool#getPoolSize",
      "anchor": "api-Pool#getPoolSize"
    },
    "uid": "api/Pool#getPoolSize",
    "indices": {
      "#getPoolSize": 1,
      "Pool#getPoolSize": 2
    }
  },
  "api/Pool#getMaxPoolSize": {
    "id": "#getMaxPoolSize",
    "title": "Pool#getMaxPoolSize",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getMaxPoolSize",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{number|*}",
          "typeInfo": {
            "types": [
              "number",
              "*"
            ],
            "name": null,
            "description": null
          },
          "line": 121
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 2
        }
      },
      "name": "getMaxPoolSize",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getMaxPoolSize",
      "line": 121
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool#getMaxPoolSize",
      "anchor": "api-Pool#getMaxPoolSize"
    },
    "uid": "api/Pool#getMaxPoolSize",
    "indices": {
      "#getMaxPoolSize": 1,
      "Pool#getMaxPoolSize": 2
    }
  },
  "api/Pool#getAvailableResources": {
    "id": "#getAvailableResources",
    "title": "Pool#getAvailableResources",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getAvailableResources",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{*|Function|o}",
          "typeInfo": {
            "types": [
              "*",
              "Function",
              "o"
            ],
            "name": null,
            "description": null
          },
          "line": 129
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 129,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "getAvailableResources",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getAvailableResources",
      "line": 129
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool#getAvailableResources",
      "anchor": "api-Pool#getAvailableResources"
    },
    "uid": "api/Pool#getAvailableResources",
    "indices": {
      "#getAvailableResources": 1,
      "Pool#getAvailableResources": 2
    }
  },
  "api/Pool#release": {
    "id": "#release",
    "title": "Pool#release",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#release",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{ODatabase} db",
          "typeInfo": {
            "types": [
              "<a href=\"Database/ODatabase.html\">ODatabase</a>"
            ],
            "name": "db",
            "description": null
          },
          "line": 136
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "db"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 136,
          "column": 0
        },
        "end": {
          "line": 152,
          "column": 2
        }
      },
      "name": "release",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#release",
      "line": 136
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool#release",
      "anchor": "api-Pool#release"
    },
    "uid": "api/Pool#release",
    "indices": {
      "#release": 1,
      "Pool#release": 2
    }
  },
  "api/RecordID": {
    "id": "RecordID",
    "title": "RecordID",
    "summary": "Represents a Record ID in a document.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "symbol": "",
    "properties": {
      "id": "RecordID",
      "description": "<p>Represents a Record ID in a document.</p>\n<p>Used to differentiate between actual record ids and strings that merely look like them.\nWithout this, it is impossible to differentiate between <code>&#39;#1:12&#39;</code> the string and <code>#1:12</code> the record id.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object} input The input to parse.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object"
            ],
            "name": "input",
            "description": "<p>The input to parse.</p>\n"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>convert a string to a RecordID instance \n    var rid = RecordID(&#39;#1:1&#39;);\n    console.log(rid); // =&gt; {cluster: 1, position: 1}\n    console.log(&#39;ID:&#39; + rid); // =&gt; &quot;ID:#1:1&quot;</p>\n",
          "typeInfo": {
            "types": [],
            "name": "convert a string to a RecordID instance",
            "description": "<pre><code>var rid = RecordID(&#39;#1:1&#39;);\nconsole.log(rid); // =&gt; {cluster: 1, position: 1}\nconsole.log(&#39;ID:&#39; + rid); // =&gt; &quot;ID:#1:1&quot;\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>convert an array of strings to an an array of record ids \n    var rids = RecordID([&#39;#1:1&#39;, &#39;#1:2&#39;, &#39;#1:3&#39;]);\n    console.log(rids); // =&gt; [{cluster: 1, position: 1}, {cluster: 1, position: 2, {cluster: 1, position: 3}]\n    console.log(rids.join(&#39;, &#39;)); // &quot;#1:1, #1:2, #1:3&quot;</p>\n",
          "typeInfo": {
            "types": [],
            "name": "convert an array of strings to an an array of record ids",
            "description": "<pre><code>var rids = RecordID([&#39;#1:1&#39;, &#39;#1:2&#39;, &#39;#1:3&#39;]);\nconsole.log(rids); // =&gt; [{cluster: 1, position: 1}, {cluster: 1, position: 2, {cluster: 1, position: 3}]\nconsole.log(rids.join(&#39;, &#39;)); // &quot;#1:1, #1:2, #1:3&quot;\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>check that a RID is valid \n    RecordID.isValid(&#39;#1:12&#39;); // =&gt; true\n    RecordID.isValid(&#39;not a record id&#39;); // =&gt; false</p>\n",
          "typeInfo": {
            "types": [],
            "name": "check that a RID is valid",
            "description": "<pre><code>RecordID.isValid(&#39;#1:12&#39;); // =&gt; true\nRecordID.isValid(&#39;not a record id&#39;); // =&gt; false\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "alias",
          "string": "",
          "alias": "RID",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 30
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "name": "RecordID",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": true,
      "aliases": [
        "RID"
      ],
      "path": "RecordID",
      "line": 30
    },
    "documents": [],
    "entities": [
      "api/RecordID#isValid",
      "api/RecordID#equals",
      "api/RecordID.parse",
      "api/RecordID.isValid",
      "api/RecordID.toRid"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/RecordID.html",
      "anchor": "api-RecordID"
    },
    "uid": "api/RecordID",
    "indices": {
      "RecordID": 1,
      "RID": 1
    }
  },
  "api/RecordID#isValid": {
    "id": "#isValid",
    "title": "RecordID#isValid",
    "summary": "Determine whether the record id is valid.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID#isValid",
      "description": "<p>Determine whether the record id is valid.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Boolean} true if the record id is valid.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>true if the record id is valid.</p>\n"
          },
          "line": 73
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 73,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 2
        }
      },
      "name": "isValid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID#isValid",
      "line": 73
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID#isValid",
      "anchor": "api-RecordID#isValid"
    },
    "uid": "api/RecordID#isValid",
    "indices": {
      "#isValid": 1,
      "RecordID#isValid": 2
    }
  },
  "api/RecordID#equals": {
    "id": "#equals",
    "title": "RecordID#equals",
    "summary": "Determine whether the record id is equal to another.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID#equals",
      "description": "<p>Determine whether the record id is equal to another.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|RID} rid  The RID to compare with.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"\">RecordID</a>"
            ],
            "name": "rid",
            "description": "<p>The RID to compare with.</p>\n"
          },
          "line": 83
        },
        {
          "type": "return",
          "string": "{Boolean}         If the RID matches, then true.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>If the RID matches, then true.</p>\n"
          },
          "line": 83
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "rid"
          }
        ],
        "symbol": "#"
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 2
        }
      },
      "name": "equals",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID#equals",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID#equals",
      "anchor": "api-RecordID#equals"
    },
    "uid": "api/RecordID#equals",
    "indices": {
      "#equals": 1,
      "RecordID#equals": 2
    }
  },
  "api/RecordID.parse": {
    "id": ".parse",
    "title": "RecordID.parse",
    "summary": "Parse a record id into a RecordID object.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.parse",
      "description": "<p>Parse a record id into a RecordID object.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object}          input The input to parse.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object"
            ],
            "name": "input",
            "description": "<p>The input to parse.</p>\n"
          },
          "line": 111
        },
        {
          "type": "return",
          "string": "{RecordID|RecordID[]|Boolean}        The parsed RecordID instance(s)\n                                             or false if the record id could not be parsed",
          "typeInfo": {
            "types": [
              "<a href=\"\">RecordID</a>",
              "Array&lt;<a href=\"\">RecordID</a>&gt;",
              "Boolean"
            ],
            "description": "<p>The parsed RecordID instance(s)                                              or false if the record id could not be parsed</p>\n"
          },
          "line": 111
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 2
        }
      },
      "name": "parse",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.parse",
      "line": 111
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.parse",
      "anchor": "api-RecordID.parse"
    },
    "uid": "api/RecordID.parse",
    "indices": {
      ".parse": 1,
      "RecordID.parse": 2
    }
  },
  "api/RecordID.isValid": {
    "id": ".isValid",
    "title": "RecordID.isValid",
    "summary": "Determine whether the given input is a valid record id.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.isValid",
      "description": "<p>Determine whether the given input is a valid record id.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object|RecordID}  input The record id to check.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object",
              "<a href=\"\">RecordID</a>"
            ],
            "name": "input",
            "description": "<p>The record id to check.</p>\n"
          },
          "line": 143
        },
        {
          "type": "return",
          "string": "{Boolean}",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": null,
            "description": null
          },
          "line": 143
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 166,
          "column": 2
        }
      },
      "name": "isValid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.isValid",
      "line": 143
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.isValid",
      "anchor": "api-RecordID.isValid"
    },
    "uid": "api/RecordID.isValid",
    "indices": {
      ".isValid": 1,
      "RecordID.isValid": 2
    }
  },
  "api/RecordID.toRid": {
    "id": ".toRid",
    "title": "RecordID.toRid",
    "summary": "Return a record id for a given cluster and position.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.toRid",
      "description": "<p>Return a record id for a given cluster and position.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} cluster  The cluster ID.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "cluster",
            "description": "<p>The cluster ID.</p>\n"
          },
          "line": 175
        },
        {
          "type": "param",
          "string": "{Integer} position The position.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "position",
            "description": "<p>The position.</p>\n"
          },
          "line": 175
        },
        {
          "type": "return",
          "string": "{String}           The record id.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The record id.</p>\n"
          },
          "line": 175
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "cluster"
          },
          {
            "name": "position"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 175,
          "column": 0
        },
        "end": {
          "line": 177,
          "column": 2
        }
      },
      "name": "toRid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.toRid",
      "line": 175
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.toRid",
      "anchor": "api-RecordID.toRid"
    },
    "uid": "api/RecordID.toRid",
    "indices": {
      ".toRid": 1,
      "RecordID.toRid": 2
    }
  },
  "api/Server": {
    "id": "Server",
    "title": "Server",
    "summary": "Represents a connection to an orientdb server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "symbol": "",
    "properties": {
      "id": "Server",
      "description": "<p>Represents a connection to an orientdb server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} options The server URL, or configuration object",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "options",
            "description": "<p>The server URL, or configuration object</p>\n"
          },
          "line": 20
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "options"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 1
        }
      },
      "name": "Server",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Server",
      "line": 20
    },
    "documents": [],
    "entities": [
      "api/Server#configure",
      "api/Server#configureTransport",
      "api/Server#configureLogger",
      "api/Server#init",
      "api/Server#send",
      "api/Server#close",
      "api/Server#use",
      "api/Server#create",
      "api/Server#drop",
      "api/Server#list",
      "api/Server#exists",
      "api/Server#freeze",
      "api/Server#release"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Server.html",
      "anchor": "api-Server"
    },
    "uid": "api/Server",
    "indices": {
      "Server": 1
    }
  },
  "api/Server#configure": {
    "id": "#configure",
    "title": "Server#configure",
    "summary": "Configure the server instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configure",
      "description": "<p>Configure the server instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the server.</p>\n"
          },
          "line": 54
        },
        {
          "type": "return",
          "string": "{Server}            The configured server object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The configured server object.</p>\n"
          },
          "line": 54
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configure",
      "line": 54
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#configure",
      "anchor": "api-Server#configure"
    },
    "uid": "api/Server#configure",
    "indices": {
      "#configure": 1,
      "Server#configure": 2
    }
  },
  "api/Server#configureTransport": {
    "id": "#configureTransport",
    "title": "Server#configureTransport",
    "summary": "Configure the transport for the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configureTransport",
      "description": "<p>Configure the transport for the server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The server config.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The server config.</p>\n"
          },
          "line": 67
        },
        {
          "type": "return",
          "string": "{Server}        The configured server object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The configured server object.</p>\n"
          },
          "line": 67
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 2
        }
      },
      "name": "configureTransport",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configureTransport",
      "line": 67
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#configureTransport",
      "anchor": "api-Server#configureTransport"
    },
    "uid": "api/Server#configureTransport",
    "indices": {
      "#configureTransport": 1,
      "Server#configureTransport": 2
    }
  },
  "api/Server#configureLogger": {
    "id": "#configureLogger",
    "title": "Server#configureLogger",
    "summary": "Configure the logger for the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configureLogger",
      "description": "<p>Configure the logger for the server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 86
        },
        {
          "type": "return",
          "string": "{Server}        The server instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The server instance with the configured logger.</p>\n"
          },
          "line": 86
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 86,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configureLogger",
      "line": 86
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#configureLogger",
      "anchor": "api-Server#configureLogger"
    },
    "uid": "api/Server#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "Server#configureLogger": 2
    }
  },
  "api/Server#init": {
    "id": "#init",
    "title": "Server#init",
    "summary": "Initialize the server instance.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#init",
      "description": "<p>Initialize the server instance.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 100,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#init",
      "line": 100
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#init",
      "anchor": "api-Server#init"
    },
    "uid": "api/Server#init",
    "indices": {
      "#init": 1,
      "Server#init": 2
    }
  },
  "api/Server#send": {
    "id": "#send",
    "title": "Server#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 111
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 111
        },
        {
          "type": "return",
          "string": "{Promise.<Mixed>}   The result of the operation.",
          "typeInfo": {
            "types": [
              "Promise.&lt;Mixed&gt;"
            ],
            "description": "<p>The result of the operation.</p>\n"
          },
          "line": 111
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#send",
      "line": 111
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#send",
      "anchor": "api-Server#send"
    },
    "uid": "api/Server#send",
    "indices": {
      "#send": 1,
      "Server#send": 2
    }
  },
  "api/Server#close": {
    "id": "#close",
    "title": "Server#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Server} the disconnected server instance",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>the disconnected server instance</p>\n"
          },
          "line": 120
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 120,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#close",
      "line": 120
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#close",
      "anchor": "api-Server#close"
    },
    "uid": "api/Server#close",
    "indices": {
      "#close": 1,
      "Server#close": 2
    }
  },
  "api/Server#use": {
    "id": "#use",
    "title": "Server#use",
    "summary": "Use the database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#use",
      "description": "<p>Use the database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name, or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name, or configuration object.</p>\n"
          },
          "line": 133
        },
        {
          "type": "return",
          "string": "{Db}                   The database instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Database/Db.html\">Database.Db</a>"
            ],
            "description": "<p>The database instance.</p>\n"
          },
          "line": 133
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 133,
          "column": 0
        },
        "end": {
          "line": 165,
          "column": 2
        }
      },
      "name": "use",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#use",
      "line": 133
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#use",
      "anchor": "api-Server#use"
    },
    "uid": "api/Server#use",
    "indices": {
      "#use": 1,
      "Server#use": 2
    }
  },
  "api/Server#create": {
    "id": "#create",
    "title": "Server#create",
    "summary": "Create a database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#create",
      "description": "<p>Create a database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name or configuration object.</p>\n"
          },
          "line": 173
        },
        {
          "type": "promise",
          "string": "{Db} The database instance",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 173
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 173,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#create",
      "line": 173
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#create",
      "anchor": "api-Server#create"
    },
    "uid": "api/Server#create",
    "indices": {
      "#create": 1,
      "Server#create": 2
    }
  },
  "api/Server#drop": {
    "id": "#drop",
    "title": "Server#drop",
    "summary": "Destroy a database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#drop",
      "description": "<p>Destroy a database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name or configuration object.</p>\n"
          },
          "line": 218
        },
        {
          "type": "promise",
          "string": "{Mixed} The server response.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 218
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 240,
          "column": 2
        }
      },
      "name": "drop",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#drop",
      "line": 218
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#drop",
      "anchor": "api-Server#drop"
    },
    "uid": "api/Server#drop",
    "indices": {
      "#drop": 1,
      "Server#drop": 2
    }
  },
  "api/Server#list": {
    "id": "#list",
    "title": "Server#list",
    "summary": "List all the databases on the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#list",
      "description": "<p>List all the databases on the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Db[]}\n        An array of databases.",
          "typeInfo": {
            "types": [
              "Array&lt;<a href=\"Database/Db.html\">Database.Db</a>&gt;"
            ],
            "name": null,
            "description": "<p>An array of databases.</p>\n"
          },
          "line": 248
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 248,
          "column": 0
        },
        "end": {
          "line": 269,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#list",
      "line": 248
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#list",
      "anchor": "api-Server#list"
    },
    "uid": "api/Server#list",
    "indices": {
      "#list": 1,
      "Server#list": 2
    }
  },
  "api/Server#exists": {
    "id": "#exists",
    "title": "Server#exists",
    "summary": "Determine whether a database exists with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#exists",
      "description": "<p>Determine whether a database exists with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 278
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 278
        },
        {
          "type": "promise",
          "string": "{Boolean} true if the database exists.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 278
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 278,
          "column": 0
        },
        "end": {
          "line": 293,
          "column": 2
        }
      },
      "name": "exists",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#exists",
      "line": 278
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#exists",
      "anchor": "api-Server#exists"
    },
    "uid": "api/Server#exists",
    "indices": {
      "#exists": 1,
      "Server#exists": 2
    }
  },
  "api/Server#freeze": {
    "id": "#freeze",
    "title": "Server#freeze",
    "summary": "Freeze the database with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#freeze",
      "description": "<p>Freeze the database with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 305
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 305
        },
        {
          "type": "return",
          "string": "{Object}              The response from the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The response from the server.</p>\n"
          },
          "line": 305
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 305,
          "column": 0
        },
        "end": {
          "line": 321,
          "column": 2
        }
      },
      "name": "freeze",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#freeze",
      "line": 305
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#freeze",
      "anchor": "api-Server#freeze"
    },
    "uid": "api/Server#freeze",
    "indices": {
      "#freeze": 1,
      "Server#freeze": 2
    }
  },
  "api/Server#release": {
    "id": "#release",
    "title": "Server#release",
    "summary": "Release the database with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#release",
      "description": "<p>Release the database with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 331
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 331
        },
        {
          "type": "return",
          "string": "{Object}              The response from the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The response from the server.</p>\n"
          },
          "line": 331
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 331,
          "column": 0
        },
        "end": {
          "line": 348,
          "column": 2
        }
      },
      "name": "release",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#release",
      "line": 331
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server#release",
      "anchor": "api-Server#release"
    },
    "uid": "api/Server#release",
    "indices": {
      "#release": 1,
      "Server#release": 2
    }
  },
  "api/Transports.Binary": {
    "id": "Transports.Binary",
    "title": "Transports.Binary",
    "symbol": ".",
    "documents": [
      "api/Transports.Binary.BinaryTransport",
      "api/Transports.Binary.Operation",
      "api/Transports.Binary.Operation",
      "api/Transports.Binary.Operation"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Transports.Binary.html",
      "anchor": "api-Transports.Binary"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Transports.Binary",
    "indices": {
      "Transports.Binary": 1
    }
  },
  "api/Transports.Binary.BinaryTransport": {
    "id": "BinaryTransport",
    "title": "Transports.Binary.BinaryTransport",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Binary.BinaryTransport",
      "namespace": "Transports.Binary",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the transport.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the transport.</p>\n"
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "BinaryTransport",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Transports.Binary.BinaryTransport#configure",
      "api/Transports.Binary.BinaryTransport#configureLogger",
      "api/Transports.Binary.BinaryTransport#configureConnection",
      "api/Transports.Binary.BinaryTransport#configurePool",
      "api/Transports.Binary.BinaryTransport#connect",
      "api/Transports.Binary.BinaryTransport#shiftServer",
      "api/Transports.Binary.BinaryTransport#send",
      "api/Transports.Binary.BinaryTransport#close"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Binary",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html",
      "anchor": "api-Transports.Binary.BinaryTransport"
    },
    "uid": "api/Transports.Binary.BinaryTransport",
    "indices": {
      "BinaryTransport": 1,
      "Transports.Binary.BinaryTransport": 2
    }
  },
  "api/Transports.Binary.BinaryTransport#configure": {
    "id": "#configure",
    "title": "Transports.Binary.BinaryTransport#configure",
    "summary": "Configure the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configure",
      "description": "<p>Configure the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The transport configuration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The transport configuration.</p>\n"
          },
          "line": 36
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configure",
      "line": 36
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#configure",
      "anchor": "api-Transports.Binary.BinaryTransport#configure"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configure",
    "indices": {
      "#configure": 1,
      "BinaryTransport#configure": 2,
      "Transports.Binary.BinaryTransport#configure": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configureLogger": {
    "id": "#configureLogger",
    "title": "Transports.Binary.BinaryTransport#configureLogger",
    "summary": "Configure the logger for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configureLogger",
      "description": "<p>Configure the logger for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config  The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 74
        },
        {
          "type": "return",
          "string": "{BinaryTransport}         The transport instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured logger.</p>\n"
          },
          "line": 74
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 74,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configureLogger",
      "line": 74
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#configureLogger",
      "anchor": "api-Transports.Binary.BinaryTransport#configureLogger"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "BinaryTransport#configureLogger": 2,
      "Transports.Binary.BinaryTransport#configureLogger": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configureConnection": {
    "id": "#configureConnection",
    "title": "Transports.Binary.BinaryTransport#configureConnection",
    "summary": "Configure a connection for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configureConnection",
      "description": "<p>Configure a connection for the transport.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{BinaryTransport} The transport instance with the configured connection.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured connection.</p>\n"
          },
          "line": 114
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 114,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 2
        }
      },
      "name": "configureConnection",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configureConnection",
      "line": 114
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#configureConnection",
      "anchor": "api-Transports.Binary.BinaryTransport#configureConnection"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configureConnection",
    "indices": {
      "#configureConnection": 1,
      "BinaryTransport#configureConnection": 2,
      "Transports.Binary.BinaryTransport#configureConnection": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configurePool": {
    "id": "#configurePool",
    "title": "Transports.Binary.BinaryTransport#configurePool",
    "summary": "Configure a connection pool for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configurePool",
      "description": "<p>Configure a connection pool for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config The connection pool config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The connection pool config</p>\n"
          },
          "line": 148
        },
        {
          "type": "return",
          "string": "{BinaryTransport}        The transport instance with the configured connection pool.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured connection pool.</p>\n"
          },
          "line": 148
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 148,
          "column": 0
        },
        "end": {
          "line": 161,
          "column": 2
        }
      },
      "name": "configurePool",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configurePool",
      "line": 148
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#configurePool",
      "anchor": "api-Transports.Binary.BinaryTransport#configurePool"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configurePool",
    "indices": {
      "#configurePool": 1,
      "BinaryTransport#configurePool": 2,
      "Transports.Binary.BinaryTransport#configurePool": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#connect": {
    "id": "#connect",
    "title": "Transports.Binary.BinaryTransport#connect",
    "summary": "Connect to the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#connect",
      "description": "<p>Connect to the server.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{BinaryTransport} The connected transport instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 169
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 169,
          "column": 0
        },
        "end": {
          "line": 229,
          "column": 2
        }
      },
      "name": "connect",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#connect",
      "line": 169
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#connect",
      "anchor": "api-Transports.Binary.BinaryTransport#connect"
    },
    "uid": "api/Transports.Binary.BinaryTransport#connect",
    "indices": {
      "#connect": 1,
      "BinaryTransport#connect": 2,
      "Transports.Binary.BinaryTransport#connect": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#shiftServer": {
    "id": "#shiftServer",
    "title": "Transports.Binary.BinaryTransport#shiftServer",
    "summary": "Fetch the next available server",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#shiftServer",
      "description": "<p>Fetch the next available server</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 233,
          "column": 0
        },
        "end": {
          "line": 245,
          "column": 2
        }
      },
      "name": "shiftServer",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#shiftServer",
      "line": 233
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#shiftServer",
      "anchor": "api-Transports.Binary.BinaryTransport#shiftServer"
    },
    "uid": "api/Transports.Binary.BinaryTransport#shiftServer",
    "indices": {
      "#shiftServer": 1,
      "BinaryTransport#shiftServer": 2,
      "Transports.Binary.BinaryTransport#shiftServer": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#send": {
    "id": "#send",
    "title": "Transports.Binary.BinaryTransport#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 275
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 275
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 275
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 275,
          "column": 0
        },
        "end": {
          "line": 306,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#send",
      "line": 275
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#send",
      "anchor": "api-Transports.Binary.BinaryTransport#send"
    },
    "uid": "api/Transports.Binary.BinaryTransport#send",
    "indices": {
      "#send": 1,
      "BinaryTransport#send": 2,
      "Transports.Binary.BinaryTransport#send": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#close": {
    "id": "#close",
    "title": "Transports.Binary.BinaryTransport#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{BinaryTransport} the disconnected transport instance",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>the disconnected transport instance</p>\n"
          },
          "line": 314
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 314,
          "column": 0
        },
        "end": {
          "line": 318,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#close",
      "line": 314
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport#close",
      "anchor": "api-Transports.Binary.BinaryTransport#close"
    },
    "uid": "api/Transports.Binary.BinaryTransport#close",
    "indices": {
      "#close": 1,
      "BinaryTransport#close": 2,
      "Transports.Binary.BinaryTransport#close": 3
    }
  },
  "api/Transports.Binary.Operation": {
    "id": "Operation",
    "title": "Transports.Binary.Operation",
    "summary": "The base class for operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Binary.Operation",
      "namespace": "Transports.Binary",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"operations\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#operations\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Operations</span>\n    </h1>\n  <p>The base class for operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.</p>\n<p>Each operation should implement the <code>writer()</code> and <code>reader()</code> methods.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} data The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 21
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "data"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 1
        }
      },
      "name": "Operation",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Binary.Operation",
      "line": 21
    },
    "documents": [],
    "entities": [
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData",
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData",
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeHeader",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Binary",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html",
      "anchor": "api-Transports.Binary.Operation"
    },
    "uid": "api/Transports.Binary.Operation",
    "indices": {
      "Operation": 1,
      "Transports.Binary.Operation": 2
    }
  },
  "api/Transports.Binary.Operation#writer": {
    "id": "#writer",
    "title": "Transports.Binary.Operation#writer",
    "summary": "Declares the commands to send to the server.\nChild classes should implement this function.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writer",
      "description": "<p>&lt;p&gt;&lt;p&gt;Declares the commands to send to the server.\nChild classes should implement this function.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 2
        }
      },
      "name": "writer",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writer",
      "line": 51
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writer",
      "anchor": "api-Transports.Binary.Operation#writer"
    },
    "uid": "api/Transports.Binary.Operation#writer",
    "indices": {
      "#writer": 1,
      "Operation#writer": 2,
      "Transports.Binary.Operation#writer": 3
    }
  },
  "api/Transports.Binary.Operation#reader": {
    "id": "#reader",
    "title": "Transports.Binary.Operation#reader",
    "summary": "Declares the steps required to recieve data for the operation.\nChild classes should implement this function.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#reader",
      "description": "<p>&lt;p&gt;&lt;p&gt;Declares the steps required to recieve data for the operation.\nChild classes should implement this function.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 2
        }
      },
      "name": "reader",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#reader",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#reader",
      "anchor": "api-Transports.Binary.Operation#reader"
    },
    "uid": "api/Transports.Binary.Operation#reader",
    "indices": {
      "#reader": 1,
      "Operation#reader": 2,
      "Transports.Binary.Operation#reader": 3
    }
  },
  "api/Transports.Binary.Operation#buffer": {
    "id": "#buffer",
    "title": "Transports.Binary.Operation#buffer",
    "summary": "Prepare the buffer for the operation.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#buffer",
      "description": "<p>&lt;p&gt;&lt;p&gt;Prepare the buffer for the operation.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Buffer} The buffer containing the commands to send to the server.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the commands to send to the server.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 68
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 2
        }
      },
      "name": "buffer",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#buffer",
      "line": 68
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#buffer",
      "anchor": "api-Transports.Binary.Operation#buffer"
    },
    "uid": "api/Transports.Binary.Operation#buffer",
    "indices": {
      "#buffer": 1,
      "Operation#buffer": 2,
      "Transports.Binary.Operation#buffer": 3
    }
  },
  "api/Transports.Binary.Operation#writeByte": {
    "id": "#writeByte",
    "title": "Transports.Binary.Operation#writeByte",
    "summary": "Write a byte.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeByte",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a byte.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 122
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 122
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 122,
          "column": 0
        },
        "end": {
          "line": 127,
          "column": 2
        }
      },
      "name": "writeByte",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeByte",
      "line": 122
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeByte",
      "anchor": "api-Transports.Binary.Operation#writeByte"
    },
    "uid": "api/Transports.Binary.Operation#writeByte",
    "indices": {
      "#writeByte": 1,
      "Operation#writeByte": 2,
      "Transports.Binary.Operation#writeByte": 3
    }
  },
  "api/Transports.Binary.Operation#writeBoolean": {
    "id": "#writeBoolean",
    "title": "Transports.Binary.Operation#writeBoolean",
    "summary": "Write a boolean.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeBoolean",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a boolean.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 135
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 135
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 2
        }
      },
      "name": "writeBoolean",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeBoolean",
      "line": 135
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeBoolean",
      "anchor": "api-Transports.Binary.Operation#writeBoolean"
    },
    "uid": "api/Transports.Binary.Operation#writeBoolean",
    "indices": {
      "#writeBoolean": 1,
      "Operation#writeBoolean": 2,
      "Transports.Binary.Operation#writeBoolean": 3
    }
  },
  "api/Transports.Binary.Operation#writeChar": {
    "id": "#writeChar",
    "title": "Transports.Binary.Operation#writeChar",
    "summary": "Write a single character.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeChar",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a single character.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 149
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 149
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 149,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 2
        }
      },
      "name": "writeChar",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeChar",
      "line": 149
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeChar",
      "anchor": "api-Transports.Binary.Operation#writeChar"
    },
    "uid": "api/Transports.Binary.Operation#writeChar",
    "indices": {
      "#writeChar": 1,
      "Operation#writeChar": 2,
      "Transports.Binary.Operation#writeChar": 3
    }
  },
  "api/Transports.Binary.Operation#writeInt": {
    "id": "#writeInt",
    "title": "Transports.Binary.Operation#writeInt",
    "summary": "Parse data to 4 bytes which represents integer value.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeInt",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 4 bytes which represents integer value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 162
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 162
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 162,
          "column": 0
        },
        "end": {
          "line": 168,
          "column": 2
        }
      },
      "name": "writeInt",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeInt",
      "line": 162
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeInt",
      "anchor": "api-Transports.Binary.Operation#writeInt"
    },
    "uid": "api/Transports.Binary.Operation#writeInt",
    "indices": {
      "#writeInt": 1,
      "Operation#writeInt": 2,
      "Transports.Binary.Operation#writeInt": 3
    }
  },
  "api/Transports.Binary.Operation#writeLong": {
    "id": "#writeLong",
    "title": "Transports.Binary.Operation#writeLong",
    "summary": "Parse data to 8 bytes which represents a long value.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeLong",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 8 bytes which represents a long value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 176
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 176
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 176,
          "column": 0
        },
        "end": {
          "line": 185,
          "column": 2
        }
      },
      "name": "writeLong",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeLong",
      "line": 176
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeLong",
      "anchor": "api-Transports.Binary.Operation#writeLong"
    },
    "uid": "api/Transports.Binary.Operation#writeLong",
    "indices": {
      "#writeLong": 1,
      "Operation#writeLong": 2,
      "Transports.Binary.Operation#writeLong": 3
    }
  },
  "api/Transports.Binary.Operation#writeShort": {
    "id": "#writeShort",
    "title": "Transports.Binary.Operation#writeShort",
    "summary": "Parse data to 2 bytes which represents short value.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeShort",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 2 bytes which represents short value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 193
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 193
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 193,
          "column": 0
        },
        "end": {
          "line": 199,
          "column": 2
        }
      },
      "name": "writeShort",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeShort",
      "line": 193
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeShort",
      "anchor": "api-Transports.Binary.Operation#writeShort"
    },
    "uid": "api/Transports.Binary.Operation#writeShort",
    "indices": {
      "#writeShort": 1,
      "Operation#writeShort": 2,
      "Transports.Binary.Operation#writeShort": 3
    }
  },
  "api/Transports.Binary.Operation#writeBytes": {
    "id": "#writeBytes",
    "title": "Transports.Binary.Operation#writeBytes",
    "summary": "Write bytes to a buffer",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeBytes",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write bytes to a buffer&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} data  The data to write.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 206
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 206
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 206,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 2
        }
      },
      "name": "writeBytes",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeBytes",
      "line": 206
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeBytes",
      "anchor": "api-Transports.Binary.Operation#writeBytes"
    },
    "uid": "api/Transports.Binary.Operation#writeBytes",
    "indices": {
      "#writeBytes": 1,
      "Operation#writeBytes": 2,
      "Transports.Binary.Operation#writeBytes": 3
    }
  },
  "api/Transports.Binary.Operation#writeString": {
    "id": "#writeString",
    "title": "Transports.Binary.Operation#writeString",
    "summary": "Parse string data to buffer with UTF-8 encoding.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeString",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse string data to buffer with UTF-8 encoding.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 220
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 220
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 220,
          "column": 0
        },
        "end": {
          "line": 231,
          "column": 2
        }
      },
      "name": "writeString",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeString",
      "line": 220
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeString",
      "anchor": "api-Transports.Binary.Operation#writeString"
    },
    "uid": "api/Transports.Binary.Operation#writeString",
    "indices": {
      "#writeString": 1,
      "Operation#writeString": 2,
      "Transports.Binary.Operation#writeString": 3
    }
  },
  "api/Transports.Binary.Operation#readStatus": {
    "id": "#readStatus",
    "title": "Transports.Binary.Operation#readStatus",
    "summary": "Read a status from the server response.\nIf the status contains an error, that error\nwill be read instead of any subsequently queued commands.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readStatus",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read a status from the server response.\nIf the status contains an error, that error\nwill be read instead of any subsequently queued commands.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 249,
          "column": 0
        },
        "end": {
          "line": 284,
          "column": 2
        }
      },
      "name": "readStatus",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readStatus",
      "line": 249
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#readStatus",
      "anchor": "api-Transports.Binary.Operation#readStatus"
    },
    "uid": "api/Transports.Binary.Operation#readStatus",
    "indices": {
      "#readStatus": 1,
      "Operation#readStatus": 2,
      "Transports.Binary.Operation#readStatus": 3
    }
  },
  "api/Transports.Binary.Operation#readError": {
    "id": "#readError",
    "title": "Transports.Binary.Operation#readError",
    "summary": "Read an error from the server response.\nAny subsequently queued commands will not run.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readError",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read an error from the server response.\nAny subsequently queued commands will not run.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 294,
          "column": 0
        },
        "end": {
          "line": 297,
          "column": 2
        }
      },
      "name": "readError",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readError",
      "line": 294
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#readError",
      "anchor": "api-Transports.Binary.Operation#readError"
    },
    "uid": "api/Transports.Binary.Operation#readError",
    "indices": {
      "#readError": 1,
      "Operation#readError": 2,
      "Transports.Binary.Operation#readError": 3
    }
  },
  "api/Transports.Binary.Operation#readObject": {
    "id": "#readObject",
    "title": "Transports.Binary.Operation#readObject",
    "summary": "Read an object from the server response.\nThis is the same as readString but deserializes the returned string\ninto an object.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readObject",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read an object from the server response.\nThis is the same as &lt;code&gt;readString&lt;/code&gt; but deserializes the returned string\ninto an object.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 308,
          "column": 0
        },
        "end": {
          "line": 316,
          "column": 2
        }
      },
      "name": "readObject",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readObject",
      "line": 308
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#readObject",
      "anchor": "api-Transports.Binary.Operation#readObject"
    },
    "uid": "api/Transports.Binary.Operation#readObject",
    "indices": {
      "#readObject": 1,
      "Operation#readObject": 2,
      "Transports.Binary.Operation#readObject": 3
    }
  },
  "api/Transports.Binary.Operation#consume": {
    "id": "#consume",
    "title": "Transports.Binary.Operation#consume",
    "summary": "Consume the buffer starting from the given offset.\nReturns an array containing the operation status, the\nnew offset and any collected result.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#consume",
      "description": "<p>&lt;p&gt;&lt;p&gt;Consume the buffer starting from the given offset.\nReturns an array containing the operation status, the\nnew offset and any collected result.&lt;/p&gt;\n&lt;p&gt;If the buffer doesn&#39;t contain enough data for the operation\nto complete, it will process as much as possible and return\na partial result with a status code of &lt;code&gt;Operation.READING&lt;/code&gt; meaning\nthat the operation is still in the reading state.&lt;/p&gt;\n&lt;p&gt;If the operation completes successfully, the status code will be\n&lt;code&gt;Operation.COMPLETE&lt;/code&gt;.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer  The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        },
        {
          "type": "return",
          "string": "{Array}          The array containing the status, new offset and result.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The array containing the status, new offset and result.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 361,
          "column": 0
        },
        "end": {
          "line": 454,
          "column": 2
        }
      },
      "name": "consume",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#consume",
      "line": 361
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#consume",
      "anchor": "api-Transports.Binary.Operation#consume"
    },
    "uid": "api/Transports.Binary.Operation#consume",
    "indices": {
      "#consume": 1,
      "Operation#consume": 2,
      "Transports.Binary.Operation#consume": 3
    }
  },
  "api/Transports.Binary.Operation#canRead": {
    "id": "#canRead",
    "title": "Transports.Binary.Operation#canRead",
    "summary": "Defetermine whether the operation can read a value of the given\ntype from the buffer at the given offset.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#canRead",
      "description": "<p>&lt;p&gt;&lt;p&gt;Defetermine whether the operation can read a value of the given\ntype from the buffer at the given offset.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} type    The value type.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "type",
            "description": "<p>&lt;p&gt;&lt;p&gt;The value type.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "param",
          "string": "{Buffer} buffer  The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset to start reading at.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading at.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "return",
          "string": "{Boolean}        true if the value can be read.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;true if the value can be read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "type"
          },
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 465,
          "column": 0
        },
        "end": {
          "line": 498,
          "column": 2
        }
      },
      "name": "canRead",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#canRead",
      "line": 465
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#canRead",
      "anchor": "api-Transports.Binary.Operation#canRead"
    },
    "uid": "api/Transports.Binary.Operation#canRead",
    "indices": {
      "#canRead": 1,
      "Operation#canRead": 2,
      "Transports.Binary.Operation#canRead": 3
    }
  },
  "api/Transports.Binary.Operation#parseByte": {
    "id": "#parseByte",
    "title": "Transports.Binary.Operation#parseByte",
    "summary": "Parse a byte from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseByte",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a byte from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 512,
          "column": 0
        },
        "end": {
          "line": 518,
          "column": 2
        }
      },
      "name": "parseByte",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseByte",
      "line": 512
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseByte",
      "anchor": "api-Transports.Binary.Operation#parseByte"
    },
    "uid": "api/Transports.Binary.Operation#parseByte",
    "indices": {
      "#parseByte": 1,
      "Operation#parseByte": 2,
      "Transports.Binary.Operation#parseByte": 3
    }
  },
  "api/Transports.Binary.Operation#parseChar": {
    "id": "#parseChar",
    "title": "Transports.Binary.Operation#parseChar",
    "summary": "Parse a character from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseChar",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a character from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 531,
          "column": 0
        },
        "end": {
          "line": 537,
          "column": 2
        }
      },
      "name": "parseChar",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseChar",
      "line": 531
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseChar",
      "anchor": "api-Transports.Binary.Operation#parseChar"
    },
    "uid": "api/Transports.Binary.Operation#parseChar",
    "indices": {
      "#parseChar": 1,
      "Operation#parseChar": 2,
      "Transports.Binary.Operation#parseChar": 3
    }
  },
  "api/Transports.Binary.Operation#parseBoolean": {
    "id": "#parseBoolean",
    "title": "Transports.Binary.Operation#parseBoolean",
    "summary": "Parse a boolean from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseBoolean",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a boolean from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 550,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 2
        }
      },
      "name": "parseBoolean",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseBoolean",
      "line": 550
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseBoolean",
      "anchor": "api-Transports.Binary.Operation#parseBoolean"
    },
    "uid": "api/Transports.Binary.Operation#parseBoolean",
    "indices": {
      "#parseBoolean": 1,
      "Operation#parseBoolean": 2,
      "Transports.Binary.Operation#parseBoolean": 3
    }
  },
  "api/Transports.Binary.Operation#parseShort": {
    "id": "#parseShort",
    "title": "Transports.Binary.Operation#parseShort",
    "summary": "Parse a short from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseShort",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a short from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 570,
          "column": 0
        },
        "end": {
          "line": 577,
          "column": 2
        }
      },
      "name": "parseShort",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseShort",
      "line": 570
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseShort",
      "anchor": "api-Transports.Binary.Operation#parseShort"
    },
    "uid": "api/Transports.Binary.Operation#parseShort",
    "indices": {
      "#parseShort": 1,
      "Operation#parseShort": 2,
      "Transports.Binary.Operation#parseShort": 3
    }
  },
  "api/Transports.Binary.Operation#parseInt": {
    "id": "#parseInt",
    "title": "Transports.Binary.Operation#parseInt",
    "summary": "Parse an integer from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseInt",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an integer from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 590,
          "column": 0
        },
        "end": {
          "line": 596,
          "column": 2
        }
      },
      "name": "parseInt",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseInt",
      "line": 590
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseInt",
      "anchor": "api-Transports.Binary.Operation#parseInt"
    },
    "uid": "api/Transports.Binary.Operation#parseInt",
    "indices": {
      "#parseInt": 1,
      "Operation#parseInt": 2,
      "Transports.Binary.Operation#parseInt": 3
    }
  },
  "api/Transports.Binary.Operation#parseLong": {
    "id": "#parseLong",
    "title": "Transports.Binary.Operation#parseLong",
    "summary": "Parse a long from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseLong",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a long from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 609,
          "column": 0
        },
        "end": {
          "line": 621,
          "column": 2
        }
      },
      "name": "parseLong",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseLong",
      "line": 609
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseLong",
      "anchor": "api-Transports.Binary.Operation#parseLong"
    },
    "uid": "api/Transports.Binary.Operation#parseLong",
    "indices": {
      "#parseLong": 1,
      "Operation#parseLong": 2,
      "Transports.Binary.Operation#parseLong": 3
    }
  },
  "api/Transports.Binary.Operation#parseBytes": {
    "id": "#parseBytes",
    "title": "Transports.Binary.Operation#parseBytes",
    "summary": "Parse some bytes from the given buffer at the given offset and\ninsert them into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseBytes",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse some bytes from the given buffer at the given offset and\ninsert them into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 634,
          "column": 0
        },
        "end": {
          "line": 647,
          "column": 2
        }
      },
      "name": "parseBytes",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseBytes",
      "line": 634
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseBytes",
      "anchor": "api-Transports.Binary.Operation#parseBytes"
    },
    "uid": "api/Transports.Binary.Operation#parseBytes",
    "indices": {
      "#parseBytes": 1,
      "Operation#parseBytes": 2,
      "Transports.Binary.Operation#parseBytes": 3
    }
  },
  "api/Transports.Binary.Operation#parseString": {
    "id": "#parseString",
    "title": "Transports.Binary.Operation#parseString",
    "summary": "Parse a string from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseString",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a string from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 661,
          "column": 0
        },
        "end": {
          "line": 674,
          "column": 2
        }
      },
      "name": "parseString",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseString",
      "line": 661
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseString",
      "anchor": "api-Transports.Binary.Operation#parseString"
    },
    "uid": "api/Transports.Binary.Operation#parseString",
    "indices": {
      "#parseString": 1,
      "Operation#parseString": 2,
      "Transports.Binary.Operation#parseString": 3
    }
  },
  "api/Transports.Binary.Operation#parseRecord": {
    "id": "#parseRecord",
    "title": "Transports.Binary.Operation#parseRecord",
    "summary": "Parse a record from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseRecord",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a record from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 687,
          "column": 0
        },
        "end": {
          "line": 757,
          "column": 2
        }
      },
      "name": "parseRecord",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseRecord",
      "line": 687
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseRecord",
      "anchor": "api-Transports.Binary.Operation#parseRecord"
    },
    "uid": "api/Transports.Binary.Operation#parseRecord",
    "indices": {
      "#parseRecord": 1,
      "Operation#parseRecord": 2,
      "Transports.Binary.Operation#parseRecord": 3
    }
  },
  "api/Transports.Binary.Operation#parseCollection": {
    "id": "#parseCollection",
    "title": "Transports.Binary.Operation#parseCollection",
    "summary": "Parse a collection from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseCollection",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a collection from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 771,
          "column": 0
        },
        "end": {
          "line": 789,
          "column": 2
        }
      },
      "name": "parseCollection",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseCollection",
      "line": 771
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseCollection",
      "anchor": "api-Transports.Binary.Operation#parseCollection"
    },
    "uid": "api/Transports.Binary.Operation#parseCollection",
    "indices": {
      "#parseCollection": 1,
      "Operation#parseCollection": 2,
      "Transports.Binary.Operation#parseCollection": 3
    }
  },
  "api/Transports.Binary.Operation#parseArray": {
    "id": "#parseArray",
    "title": "Transports.Binary.Operation#parseArray",
    "summary": "Parse an array from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseArray",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an array from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;blockquote&gt;\n&lt;p&gt;Note. this differs from the other &lt;code&gt;parseXYZ&lt;/code&gt; methods in that &lt;code&gt;reader&lt;/code&gt;\nis required, and MUST return an array of functions. Each function in the\narray represents a &#39;scope&#39; for an item in the array and will be invoked in order.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 807,
          "column": 0
        },
        "end": {
          "line": 837,
          "column": 2
        }
      },
      "name": "parseArray",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseArray",
      "line": 807
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseArray",
      "anchor": "api-Transports.Binary.Operation#parseArray"
    },
    "uid": "api/Transports.Binary.Operation#parseArray",
    "indices": {
      "#parseArray": 1,
      "Operation#parseArray": 2,
      "Transports.Binary.Operation#parseArray": 3
    }
  },
  "api/Transports.Binary.Operation#parseError": {
    "id": "#parseError",
    "title": "Transports.Binary.Operation#parseError",
    "summary": "Parse an error from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseError",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an error from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;blockquote&gt;\n&lt;p&gt;Note: this implementation differs from the others in that\nwhen an error is encountered, any subsequent &lt;code&gt;readXYZ()&lt;/code&gt; commands\nthat were due to be run will be skipped.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 854,
          "column": 0
        },
        "end": {
          "line": 901,
          "column": 2
        }
      },
      "name": "parseError",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseError",
      "line": 854
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parseError",
      "anchor": "api-Transports.Binary.Operation#parseError"
    },
    "uid": "api/Transports.Binary.Operation#parseError",
    "indices": {
      "#parseError": 1,
      "Operation#parseError": 2,
      "Transports.Binary.Operation#parseError": 3
    }
  },
  "api/Transports.Binary.Operation#parsePushedData": {
    "id": "#parsePushedData",
    "title": "Transports.Binary.Operation#parsePushedData",
    "summary": "Parse any pushed data from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parsePushedData",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse any pushed data from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 916,
          "column": 0
        },
        "end": {
          "line": 928,
          "column": 2
        }
      },
      "name": "parsePushedData",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parsePushedData",
      "line": 916
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#parsePushedData",
      "anchor": "api-Transports.Binary.Operation#parsePushedData"
    },
    "uid": "api/Transports.Binary.Operation#parsePushedData",
    "indices": {
      "#parsePushedData": 1,
      "Operation#parsePushedData": 2,
      "Transports.Binary.Operation#parsePushedData": 3
    }
  },
  "api/Transports.Binary.Operation#writeHeader": {
    "id": "#writeHeader",
    "title": "Transports.Binary.Operation#writeHeader",
    "summary": "Write a request header.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeHeader",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a request header.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer}    opCode     The operation code.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "opCode",
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation code.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "param",
          "string": "{Integer}    sessionId  The session ID.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "sessionId",
            "description": "<p>&lt;p&gt;&lt;p&gt;The session ID.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "param",
          "string": "{Buffer}     token      The token, if any.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "token",
            "description": "<p>&lt;p&gt;&lt;p&gt;The token, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "return",
          "string": "{Operation}             The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "opCode"
          },
          {
            "name": "sessionId"
          },
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 114,
          "column": 2
        }
      },
      "name": "writeHeader",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeHeader",
      "line": 106
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation#writeHeader",
      "anchor": "api-Transports.Binary.Operation#writeHeader"
    },
    "uid": "api/Transports.Binary.Operation#writeHeader",
    "indices": {
      "#writeHeader": 1,
      "Operation#writeHeader": 2,
      "Transports.Binary.Operation#writeHeader": 3
    }
  },
  "api/Transports.Rest": {
    "id": "Transports.Rest",
    "title": "Transports.Rest",
    "symbol": ".",
    "documents": [
      "api/Transports.Rest.RestTransport",
      "api/Transports.Rest.Operation"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Transports.Rest.html",
      "anchor": "api-Transports.Rest"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Transports.Rest",
    "indices": {
      "Transports.Rest": 1
    }
  },
  "api/Transports.Rest.RestTransport": {
    "id": "RestTransport",
    "title": "Transports.Rest.RestTransport",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Rest.RestTransport",
      "namespace": "Transports.Rest",
      "description": "\n    <h1 class=\"anchorable-heading\">\n      <a name=\"binary-transport\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#binary-transport\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Binary Transport</span>\n    </h1>\n  ",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the transport.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the transport.</p>\n"
          },
          "line": 21
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "name": "RestTransport",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Rest.RestTransport",
      "line": 21
    },
    "documents": [],
    "entities": [
      "api/Transports.Rest.RestTransport#configure",
      "api/Transports.Rest.RestTransport#configureLogger",
      "api/Transports.Rest.RestTransport#send",
      "api/Transports.Rest.RestTransport#close"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Rest",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html",
      "anchor": "api-Transports.Rest.RestTransport"
    },
    "uid": "api/Transports.Rest.RestTransport",
    "indices": {
      "RestTransport": 1,
      "Transports.Rest.RestTransport": 2
    }
  },
  "api/Transports.Rest.RestTransport#configure": {
    "id": "#configure",
    "title": "Transports.Rest.RestTransport#configure",
    "summary": "Configure the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#configure",
      "description": "<p>Configure the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The transport configuration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The transport configuration.</p>\n"
          },
          "line": 43
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#configure",
      "line": 43
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport#configure",
      "anchor": "api-Transports.Rest.RestTransport#configure"
    },
    "uid": "api/Transports.Rest.RestTransport#configure",
    "indices": {
      "#configure": 1,
      "RestTransport#configure": 2,
      "Transports.Rest.RestTransport#configure": 3
    }
  },
  "api/Transports.Rest.RestTransport#configureLogger": {
    "id": "#configureLogger",
    "title": "Transports.Rest.RestTransport#configureLogger",
    "summary": "Configure the logger for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#configureLogger",
      "description": "<p>Configure the logger for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config  The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 62
        },
        {
          "type": "return",
          "string": "{RestTransport}           The transport instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Rest.RestTransport</a>"
            ],
            "description": "<p>The transport instance with the configured logger.</p>\n"
          },
          "line": 62
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#configureLogger",
      "line": 62
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport#configureLogger",
      "anchor": "api-Transports.Rest.RestTransport#configureLogger"
    },
    "uid": "api/Transports.Rest.RestTransport#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "RestTransport#configureLogger": 2,
      "Transports.Rest.RestTransport#configureLogger": 3
    }
  },
  "api/Transports.Rest.RestTransport#send": {
    "id": "#send",
    "title": "Transports.Rest.RestTransport#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 79
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 79
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 79
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#send",
      "line": 79
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport#send",
      "anchor": "api-Transports.Rest.RestTransport#send"
    },
    "uid": "api/Transports.Rest.RestTransport#send",
    "indices": {
      "#send": 1,
      "RestTransport#send": 2,
      "Transports.Rest.RestTransport#send": 3
    }
  },
  "api/Transports.Rest.RestTransport#close": {
    "id": "#close",
    "title": "Transports.Rest.RestTransport#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Server} the disconnected server instance",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>the disconnected server instance</p>\n"
          },
          "line": 90
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 90,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#close",
      "line": 90
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport#close",
      "anchor": "api-Transports.Rest.RestTransport#close"
    },
    "uid": "api/Transports.Rest.RestTransport#close",
    "indices": {
      "#close": 1,
      "RestTransport#close": 2,
      "Transports.Rest.RestTransport#close": 3
    }
  },
  "api/Transports.Rest.Operation": {
    "id": "Operation",
    "title": "Transports.Rest.Operation",
    "summary": "The base class for REST operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.",
    "filePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/protocol/operation.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Rest.Operation",
      "namespace": "Transports.Rest",
      "description": "<p>The base class for REST operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.</p>\n<p>Each operation should implement the <code>write()</code> and <code>read()</code> methods.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} data The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "data"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 1
        }
      },
      "name": "Operation",
      "filePath": "/lib/transport/rest/protocol/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/tinydoc-examples/orientjs/lib/transport/rest/protocol/operation.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Rest.Operation",
      "line": 14
    },
    "documents": [],
    "entities": [],
    "type": "Document",
    "parentNode": "api/Transports.Rest",
    "meta": {
      "href": "/api/Transports.Rest/Operation.html",
      "anchor": "api-Transports.Rest.Operation"
    },
    "uid": "api/Transports.Rest.Operation",
    "indices": {
      "Operation": 1,
      "Transports.Rest.Operation": 2
    }
  },
  "ui": {
    "id": "ui",
    "name": "ui",
    "meta": {
      "anchor": "ui"
    },
    "documents": [
      "ui/index",
      "ui/404"
    ],
    "type": "Namespace",
    "symbol": "/",
    "uid": "ui",
    "indices": {}
  },
  "ui/index": {
    "id": "index",
    "title": "orientjs",
    "summary": "",
    "meta": {
      "href": "/index.html",
      "anchor": "ui-index"
    },
    "type": "Document",
    "parentNode": "ui",
    "symbol": "/",
    "uid": "ui/index",
    "indices": {
      "index": 1
    }
  },
  "ui/404": {
    "id": "404",
    "title": "404 - Not Found",
    "summary": "Not Found",
    "meta": {
      "href": "/404.html",
      "anchor": "ui-404"
    },
    "type": "Document",
    "parentNode": "ui",
    "symbol": "/",
    "uid": "ui/404",
    "indices": {
      "404": 1
    }
  }
}