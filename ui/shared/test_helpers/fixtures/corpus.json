{
  "api": {
    "id": "api",
    "name": "tinydoc-plugin-js",
    "title": "JS",
    "documents": [
      "api/Bag",
      "api/Command",
      "api/CLI",
      "api/Database",
      "api/OrientDBError",
      "api/Migration",
      "api/MigrationManager",
      "api/Pool",
      "api/RecordID",
      "api/Server",
      "api/Transports.Binary",
      "api/Transports.Rest"
    ],
    "config": {
      "routeName": "api",
      "source": [
        "lib/**/*.js"
      ],
      "exclude": [
        {},
        {}
      ],
      "useDirAsNamespace": true,
      "inferModuleIdFromFileName": true,
      "analyzeNode": null,
      "customTags": {},
      "showSourcePaths": true,
      "sortModulesAlphabetically": true,
      "verbose": false,
      "corpusContext": "JS",
      "alias": {
        "ODatabase": [
          "Db"
        ]
      },
      "parse": null,
      "parserOptions": null,
      "namespaceDirMap": {
        "lib/db": "Database",
        "lib/transport/binary": "Transports.Binary",
        "lib/transport/rest": "Transports.Rest"
      },
      "namedReturnTags": false
    },
    "indexFields": [
      "aliases"
    ],
    "meta": {
      "outlets": [
        {
          "name": "CJS::Module",
          "options": {}
        },
        {
          "name": "CJS::ClassBrowser",
          "options": {}
        }
      ],
      "defaultLayouts": [
        {
          "match": {
            "by": "type",
            "on": "Namespace"
          },
          "regions": [
            {
              "name": "Layout::Sidebar",
              "outlets": [
                {
                  "name": "CJS::ClassBrowser"
                }
              ]
            }
          ]
        },
        {
          "match": {
            "by": "type",
            "on": [
              "Document",
              "DocumentEntity"
            ]
          },
          "regions": [
            {
              "name": "Layout::Content",
              "options": {
                "framed": true
              },
              "outlets": [
                {
                  "name": "CJS::ModuleHeader"
                },
                {
                  "name": "CJS::ModuleIndex"
                },
                {
                  "name": "CJS::ModuleBody"
                },
                {
                  "name": "Layout::Content"
                }
              ]
            },
            {
              "name": "Layout::Sidebar",
              "outlets": [
                {
                  "name": "CJS::ClassBrowser"
                }
              ]
            }
          ]
        }
      ],
      "href": "/api.html",
      "anchor": "api"
    },
    "type": "Namespace",
    "symbol": "/",
    "uid": "api",
    "indices": {}
  },
  "api/Bag": {
    "id": "Bag",
    "title": "Bag",
    "summary": "A bag of Record IDs, can come in two formats:",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "symbol": "",
    "properties": {
      "id": "Bag",
      "description": "\n    <h1>\n      RID Bag\n    </h1>\n  <p>A bag of Record IDs, can come in two formats:</p>\n<ul>\n<li>embedded - just a list of record ids.</li>\n<li>tree based - a remote tree based data structure</li>\n</ul>\n<p>for more details on the RID Bag structure, see <a href=\"https://github.com/orientechnologies/orientdb/wiki/RidBag\" target=\"_blank\">https://github.com/orientechnologies/orientdb/wiki/RidBag</a></p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} serialized The base64 encoded RID Bag",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "serialized",
            "description": "<p>The base64 encoded RID Bag</p>\n"
          },
          "line": 19
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "serialized"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 1
        }
      },
      "name": "Bag",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": true,
      "aliases": [],
      "path": "Bag",
      "line": 19
    },
    "documents": [],
    "entities": [
      "api/Bag#_parse",
      "api/Bag#toJSON",
      "api/Bag#next",
      "api/Bag#all",
      "api/Bag#_consume"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Bag.html",
      "anchor": "api-Bag",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "not.committed.yet": "Not Committed Yet"
        }
      }
    },
    "uid": "api/Bag",
    "indices": {
      "Bag": 1
    }
  },
  "api/Bag#_parse": {
    "id": "#_parse",
    "title": "Bag#_parse",
    "summary": "Parse the bag content.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#_parse",
      "description": "<p>Parse the bag content.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 105,
          "column": 2
        }
      },
      "name": "_parse",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#_parse",
      "line": 68
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag%23_parse",
      "anchor": "api-Bag%23_parse"
    },
    "uid": "api/Bag#_parse",
    "indices": {
      "#_parse": 1,
      "Bag#_parse": 2
    }
  },
  "api/Bag#toJSON": {
    "id": "#toJSON",
    "title": "Bag#toJSON",
    "summary": "Return a representation of the bag that can be serialized to JSON.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#toJSON",
      "description": "<p>Return a representation of the bag that can be serialized to JSON.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Array} The JSON representation of the bag.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "description": "<p>The JSON representation of the bag.</p>\n"
          },
          "line": 112
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 112,
          "column": 0
        },
        "end": {
          "line": 119,
          "column": 2
        }
      },
      "name": "toJSON",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#toJSON",
      "line": 112
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag%23toJSON",
      "anchor": "api-Bag%23toJSON"
    },
    "uid": "api/Bag#toJSON",
    "indices": {
      "#toJSON": 1,
      "Bag#toJSON": 2
    }
  },
  "api/Bag#next": {
    "id": "#next",
    "title": "Bag#next",
    "summary": "Retrieve the next RID in the bag, or null if we're at the end.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#next",
      "description": "<p>Retrieve the next RID in the bag, or null if we&#39;re at the end.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID|null} The next [RecordID Record ID](), or null.",
          "typeInfo": {
            "isOptional": true,
            "types": [
              "<a href=\"RecordID.html\">RecordID</a>",
              "null"
            ],
            "description": "<p>The next <a href=\"RecordID.html\">Record ID</a>, or null.</p>\n"
          },
          "line": 126
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 145,
          "column": 2
        }
      },
      "name": "next",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#next",
      "line": 126
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag%23next",
      "anchor": "api-Bag%23next"
    },
    "uid": "api/Bag#next",
    "indices": {
      "#next": 1,
      "Bag#next": 2
    }
  },
  "api/Bag#all": {
    "id": "#all",
    "title": "Bag#all",
    "summary": "Retreive all the RIDs in the bag.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#all",
      "description": "<p>Retreive all the RIDs in the bag.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID[]} The record ids.",
          "typeInfo": {
            "types": [
              "Array&lt;<a href=\"RecordID.html\">RecordID</a>&gt;"
            ],
            "description": "<p>The record ids.</p>\n"
          },
          "line": 153
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 153,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 2
        }
      },
      "name": "all",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#all",
      "line": 153
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag%23all",
      "anchor": "api-Bag%23all"
    },
    "uid": "api/Bag#all",
    "indices": {
      "#all": 1,
      "Bag#all": 2
    }
  },
  "api/Bag#_consume": {
    "id": "#_consume",
    "title": "Bag#_consume",
    "summary": "Consume the next RID in the bag.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
    "properties": {
      "id": "Bag#_consume",
      "description": "<p>Consume the next RID in the bag.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{RID|null} The next record id, or null if the bag is exhausted.",
          "typeInfo": {
            "types": [
              "<a href=\"RecordID.html\">RecordID</a>",
              "null"
            ],
            "description": "<p>The next record id, or null if the bag is exhausted.</p>\n"
          },
          "line": 166
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Bag",
      "loc": {
        "start": {
          "line": 166,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 2
        }
      },
      "name": "_consume",
      "filePath": "/lib/bag.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/bag.js",
      "isModule": false,
      "aliases": [],
      "path": "Bag#_consume",
      "line": 166
    },
    "type": "DocumentEntity",
    "parentNode": "api/Bag",
    "meta": {
      "href": "/api/Bag.html#api-Bag%23_consume",
      "anchor": "api-Bag%23_consume"
    },
    "uid": "api/Bag#_consume",
    "indices": {
      "#_consume": 1,
      "Bag#_consume": 2
    }
  },
  "api/Command": {
    "id": "Command",
    "title": "Command",
    "summary": "Base class for CLI commands.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
    "symbol": "",
    "properties": {
      "id": "Command",
      "description": "<p>Base class for CLI commands.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Server} server  The server instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Server.html\">Server</a>"
            ],
            "name": "server",
            "description": "<p>The server instance.</p>\n"
          },
          "line": 11
        },
        {
          "type": "param",
          "string": "{Object} options The opptions for the command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The opptions for the command.</p>\n"
          },
          "line": 11
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "server"
          },
          {
            "name": "options"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 1
        }
      },
      "name": "Command",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
      "isModule": true,
      "aliases": [],
      "path": "Command",
      "line": 11
    },
    "documents": [],
    "entities": [
      "api/Command#run",
      "api/Command#help"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Command.html",
      "anchor": "api-Command",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
        "lastCommittedAt": 1424118283,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/Command",
    "indices": {
      "Command": 1
    }
  },
  "api/Command#run": {
    "id": "#run",
    "title": "Command#run",
    "summary": "Run the command.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
    "properties": {
      "id": "Command#run",
      "description": "<p>Run the command.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 46
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Command",
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "run",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
      "isModule": false,
      "aliases": [],
      "path": "Command#run",
      "line": 46
    },
    "type": "DocumentEntity",
    "parentNode": "api/Command",
    "meta": {
      "href": "/api/Command.html#api-Command%23run",
      "anchor": "api-Command%23run"
    },
    "uid": "api/Command#run",
    "indices": {
      "#run": 1,
      "Command#run": 2
    }
  },
  "api/Command#help": {
    "id": "#help",
    "title": "Command#help",
    "summary": "Show the help for the command.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
    "properties": {
      "id": "Command#help",
      "description": "<p>Show the help for the command.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Command",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 2
        }
      },
      "name": "help",
      "filePath": "/lib/cli/command.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/command.js",
      "isModule": false,
      "aliases": [],
      "path": "Command#help",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/Command",
    "meta": {
      "href": "/api/Command.html#api-Command%23help",
      "anchor": "api-Command%23help"
    },
    "uid": "api/Command#help",
    "indices": {
      "#help": 1,
      "Command#help": 2
    }
  },
  "api/CLI": {
    "id": "CLI",
    "title": "CLI",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "symbol": "",
    "properties": {
      "id": "CLI",
      "description": "\n    <h1>\n      Command Line Interface\n    </h1>\n  ",
      "tags": [],
      "ctx": {
        "type": "function",
        "params": []
      },
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "name": "CLI",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": true,
      "aliases": [],
      "path": "CLI",
      "line": 13
    },
    "documents": [],
    "entities": [
      "api/CLI#run",
      "api/CLI#createCommand",
      "api/CLI#createServer",
      "api/CLI#parseArgv",
      "api/CLI#parseOptsFile",
      "api/CLI#declareArgv",
      "api/CLI#list"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/CLI.html",
      "anchor": "api-CLI",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
        "lastCommittedAt": 1434467481,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "rschmukler@gmail.com": "Ryan Schmukler",
          "l.garulli@gmail.com": "lvca"
        }
      }
    },
    "uid": "api/CLI",
    "indices": {
      "CLI": 1
    }
  },
  "api/CLI#run": {
    "id": "#run",
    "title": "CLI#run",
    "summary": "Parse the arguments and run the commmand.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#run",
      "description": "<p>Parse the arguments and run the commmand.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 2
        }
      },
      "name": "run",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#run",
      "line": 22
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23run",
      "anchor": "api-CLI%23run"
    },
    "uid": "api/CLI#run",
    "indices": {
      "#run": 1,
      "CLI#run": 2
    }
  },
  "api/CLI#createCommand": {
    "id": "#createCommand",
    "title": "CLI#createCommand",
    "summary": "Create the named command.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#createCommand",
      "description": "<p>Create the named command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}  name The name of the command.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the command.</p>\n"
          },
          "line": 59
        },
        {
          "type": "param",
          "string": "{Object}  argv The parsed command line options.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "argv",
            "description": "<p>The parsed command line options.</p>\n"
          },
          "line": 59
        },
        {
          "type": "return",
          "string": "{Command}      The command instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Command.html\">Command</a>"
            ],
            "description": "<p>The command instance.</p>\n"
          },
          "line": 59
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 72,
          "column": 2
        }
      },
      "name": "createCommand",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#createCommand",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23createCommand",
      "anchor": "api-CLI%23createCommand"
    },
    "uid": "api/CLI#createCommand",
    "indices": {
      "#createCommand": 1,
      "CLI#createCommand": 2
    }
  },
  "api/CLI#createServer": {
    "id": "#createServer",
    "title": "CLI#createServer",
    "summary": "Create a server instance based on the given arguments.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#createServer",
      "description": "<p>Create a server instance based on the given arguments.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} argv The parsed command line arguments.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "argv",
            "description": "<p>The parsed command line arguments.</p>\n"
          },
          "line": 79
        },
        {
          "type": "return",
          "string": "{Server}      The server instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Server.html\">Server</a>"
            ],
            "description": "<p>The server instance.</p>\n"
          },
          "line": 79
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 2
        }
      },
      "name": "createServer",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#createServer",
      "line": 79
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23createServer",
      "anchor": "api-CLI%23createServer"
    },
    "uid": "api/CLI#createServer",
    "indices": {
      "#createServer": 1,
      "CLI#createServer": 2
    }
  },
  "api/CLI#parseArgv": {
    "id": "#parseArgv",
    "title": "CLI#parseArgv",
    "summary": "Parse the command line arguments.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#parseArgv",
      "description": "<p>Parse the command line arguments.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Array}  argv The arguments to parse",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "name": "argv",
            "description": "<p>The arguments to parse</p>\n"
          },
          "line": 94
        },
        {
          "type": "promise",
          "string": "{Object} The parsed arguments.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 94
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "argv"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 2
        }
      },
      "name": "parseArgv",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#parseArgv",
      "line": 94
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23parseArgv",
      "anchor": "api-CLI%23parseArgv"
    },
    "uid": "api/CLI#parseArgv",
    "indices": {
      "#parseArgv": 1,
      "CLI#parseArgv": 2
    }
  },
  "api/CLI#parseOptsFile": {
    "id": "#parseOptsFile",
    "title": "CLI#parseOptsFile",
    "summary": "Parse a .opts file into raw argv.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#parseOptsFile",
      "description": "<p>Parse a .opts file into raw argv.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} filename The path to the .opts file.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "filename",
            "description": "<p>The path to the .opts file.</p>\n"
          },
          "line": 126
        },
        {
          "type": "promise",
          "string": "{Array} The raw arguments.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 126
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "filename"
          }
        ],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "parseOptsFile",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#parseOptsFile",
      "line": 126
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23parseOptsFile",
      "anchor": "api-CLI%23parseOptsFile"
    },
    "uid": "api/CLI#parseOptsFile",
    "indices": {
      "#parseOptsFile": 1,
      "CLI#parseOptsFile": 2
    }
  },
  "api/CLI#declareArgv": {
    "id": "#declareArgv",
    "title": "CLI#declareArgv",
    "summary": "Declare the accepted command line arguments.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#declareArgv",
      "description": "<p>Declare the accepted command line arguments.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{CLI} The cli instance with argv declared.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 138
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 188,
          "column": 2
        }
      },
      "name": "declareArgv",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#declareArgv",
      "line": 138
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23declareArgv",
      "anchor": "api-CLI%23declareArgv"
    },
    "uid": "api/CLI#declareArgv",
    "indices": {
      "#declareArgv": 1,
      "CLI#declareArgv": 2
    }
  },
  "api/CLI#list": {
    "id": "#list",
    "title": "CLI#list",
    "summary": "List the supported commands.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
    "properties": {
      "id": "CLI#list",
      "description": "<p>List the supported commands.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String[]} The supported command names.",
          "typeInfo": {
            "types": [
              "Array&lt;String&gt;"
            ],
            "description": "<p>The supported command names.</p>\n"
          },
          "line": 195
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "CLI",
      "loc": {
        "start": {
          "line": 195,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/cli/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/cli/index.js",
      "isModule": false,
      "aliases": [],
      "path": "CLI#list",
      "line": 195
    },
    "type": "DocumentEntity",
    "parentNode": "api/CLI",
    "meta": {
      "href": "/api/CLI.html#api-CLI%23list",
      "anchor": "api-CLI%23list"
    },
    "uid": "api/CLI#list",
    "indices": {
      "#list": 1,
      "CLI#list": 2
    }
  },
  "api/Database": {
    "id": "Database",
    "title": "Database",
    "symbol": ".",
    "documents": [
      "api/Database.Class",
      "api/Database.Db",
      "api/Database.ODatabase",
      "api/Database.Statement",
      "api/Database.Transaction"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Database.html",
      "anchor": "api-Database"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Database",
    "indices": {
      "Database": 1
    }
  },
  "api/Database.Class": {
    "id": "Class",
    "title": "Database.Class",
    "summary": "The class constructor.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "symbol": "",
    "properties": {
      "id": "Database.Class",
      "namespace": "Database",
      "description": "<p>The class constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the class",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the class</p>\n"
          },
          "line": 13
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "Class",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Class",
      "line": 13
    },
    "documents": [],
    "entities": [
      "api/Database.Class#configure",
      "api/Database.Class#list",
      "api/Database.Class#find",
      "api/Database.Class#create",
      "api/Database.Class#reload",
      "api/Database.Class@cached",
      "api/Database.Class.list",
      "api/Database.Class.create",
      "api/Database.Class.update",
      "api/Database.Class.drop",
      "api/Database.Class.get",
      "api/Database.Class.cacheData"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Class.html",
      "anchor": "api-Database.Class",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "maggiolo00@gmail.com": "maggiolo00",
          "not.committed.yet": "Not Committed Yet",
          "zfedor@gmail.com": "Zlatko Fedor",
          "gabriele.ds@gmail.com": "Gabriele Di Stefano",
          "radusamson@ymail.com": "Samson Radu"
        }
      }
    },
    "uid": "api/Database.Class",
    "indices": {
      "Class": 1,
      "Database.Class": 2
    }
  },
  "api/Database.Class#configure": {
    "id": "#configure",
    "title": "Database.Class#configure",
    "summary": "Configure the class instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#configure",
      "description": "<p>Configure the class instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 33
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#configure",
      "line": 33
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%23configure",
      "anchor": "api-Database.Class%23configure"
    },
    "uid": "api/Database.Class#configure",
    "indices": {
      "#configure": 1,
      "Class#configure": 2,
      "Database.Class#configure": 3
    }
  },
  "api/Database.Class#list": {
    "id": "#list",
    "title": "Database.Class#list",
    "summary": "Return a list of records in the class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#list",
      "description": "<p>Return a list of records in the class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer|Object} limit  The maximum number of records to return, or a configuration object.",
          "typeInfo": {
            "types": [
              "Integer",
              "Object"
            ],
            "name": "limit",
            "description": "<p>The maximum number of records to return, or a configuration object.</p>\n"
          },
          "line": 61
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset to start returning records from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>The offset to start returning records from.</p>\n"
          },
          "line": 61
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of records in the class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 61
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#list",
      "line": 61
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%23list",
      "anchor": "api-Database.Class%23list"
    },
    "uid": "api/Database.Class#list",
    "indices": {
      "#list": 1,
      "Class#list": 2,
      "Database.Class#list": 3
    }
  },
  "api/Database.Class#find": {
    "id": "#find",
    "title": "Database.Class#find",
    "summary": "Find a list of records in the class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#find",
      "description": "<p>Find a list of records in the class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}  attributes The attributes to search with.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "attributes",
            "description": "<p>The attributes to search with.</p>\n"
          },
          "line": 91
        },
        {
          "type": "param",
          "string": "{Integer} limit      The maximum number of records to return",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of records to return</p>\n"
          },
          "line": 91
        },
        {
          "type": "param",
          "string": "{Integer} offset     The offset to start returning records from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>The offset to start returning records from.</p>\n"
          },
          "line": 91
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of records in the class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 91
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "attributes"
          },
          {
            "name": "limit"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 125,
          "column": 2
        }
      },
      "name": "find",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#find",
      "line": 91
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%23find",
      "anchor": "api-Database.Class%23find"
    },
    "uid": "api/Database.Class#find",
    "indices": {
      "#find": 1,
      "Class#find": 2,
      "Database.Class#find": 3
    }
  },
  "api/Database.Class#create": {
    "id": "#create",
    "title": "Database.Class#create",
    "summary": "Create a record for this class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#create",
      "description": "<p>Create a record for this class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record The record to create.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to create.</p>\n"
          },
          "line": 134
        },
        {
          "type": "promise",
          "string": "{Object} The created record.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 134
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 134,
          "column": 0
        },
        "end": {
          "line": 144,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#create",
      "line": 134
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%23create",
      "anchor": "api-Database.Class%23create"
    },
    "uid": "api/Database.Class#create",
    "indices": {
      "#create": 1,
      "Class#create": 2,
      "Database.Class#create": 3
    }
  },
  "api/Database.Class#reload": {
    "id": "#reload",
    "title": "Database.Class#reload",
    "summary": "Reload the class instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class#reload",
      "description": "<p>Reload the class instance.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Class} The class instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 151
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 151,
          "column": 0
        },
        "end": {
          "line": 158,
          "column": 2
        }
      },
      "name": "reload",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class#reload",
      "line": 151
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%23reload",
      "anchor": "api-Database.Class%23reload"
    },
    "uid": "api/Database.Class#reload",
    "indices": {
      "#reload": 1,
      "Class#reload": 2,
      "Database.Class#reload": 3
    }
  },
  "api/Database.Class@cached": {
    "id": "@cached",
    "title": "Database.Class@cached",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class@cached",
      "description": "",
      "tags": [
        {
          "type": "property",
          "string": "{Object|false}\nThe cached class items.",
          "typeInfo": {
            "types": [
              "Object",
              "false"
            ],
            "name": "cached",
            "description": "<p>The cached class items.</p>\n"
          },
          "line": 164
        }
      ],
      "ctx": {
        "type": "literal",
        "value": false,
        "symbol": "@"
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 164,
          "column": 0
        },
        "end": {
          "line": 164,
          "column": 23
        }
      },
      "name": "cached",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class@cached",
      "line": 164
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class%40cached",
      "anchor": "api-Database.Class%40cached"
    },
    "uid": "api/Database.Class@cached",
    "indices": {
      "@cached": 1,
      "Class@cached": 2,
      "Database.Class@cached": 3
    }
  },
  "api/Database.Class.list": {
    "id": ".list",
    "title": "Database.Class.list",
    "summary": "Retreive a list of classes from the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.list",
      "description": "<p>Retreive a list of classes from the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Boolean} refresh Whether to refresh the list or not.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "refresh",
            "description": "<p>Whether to refresh the list or not.</p>\n"
          },
          "line": 172
        },
        {
          "type": "promise",
          "string": "{Object[]} An array of class objects.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 172
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "refresh"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 172,
          "column": 0
        },
        "end": {
          "line": 195,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.list",
      "line": 172
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.list",
      "anchor": "api-Database.Class.list"
    },
    "uid": "api/Database.Class.list",
    "indices": {
      ".list": 1,
      "Class.list": 2,
      "Database.Class.list": 3
    }
  },
  "api/Database.Class.create": {
    "id": ".create",
    "title": "Database.Class.create",
    "summary": "Create a new class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.create",
      "description": "<p>Create a new class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name            The name of the class to create.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class to create.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{String} parentName      The name of the parent to extend, if any.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "parentName",
            "description": "<p>The name of the parent to extend, if any.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{String|Integer} cluster The cluster name or id.",
          "typeInfo": {
            "types": [
              "String",
              "Integer"
            ],
            "name": "cluster",
            "description": "<p>The cluster name or id.</p>\n"
          },
          "line": 206
        },
        {
          "type": "param",
          "string": "{Boolean} isAbstract     The flag for the abstract class",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "isAbstract",
            "description": "<p>The flag for the abstract class</p>\n"
          },
          "line": 206
        },
        {
          "type": "promise",
          "string": "{Object} The created class object",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 206
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "parentName"
          },
          {
            "name": "cluster"
          },
          {
            "name": "isAbstract"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 206,
          "column": 0
        },
        "end": {
          "line": 232,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.create",
      "line": 206
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.create",
      "anchor": "api-Database.Class.create"
    },
    "uid": "api/Database.Class.create",
    "indices": {
      ".create": 1,
      "Class.create": 2,
      "Database.Class.create": 3
    }
  },
  "api/Database.Class.update": {
    "id": ".update",
    "title": "Database.Class.update",
    "summary": "Update the given class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.update",
      "description": "<p>Update the given class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}  class    The class settings.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "class",
            "description": "<p>The class settings.</p>\n"
          },
          "line": 241
        },
        {
          "type": "param",
          "string": "{Boolean} reload   Whether to reload the class, default to true.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "reload",
            "description": "<p>Whether to reload the class, default to true.</p>\n"
          },
          "line": 241
        },
        {
          "type": "promise",
          "string": "{Object} The updated class.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 241
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "cls"
          },
          {
            "name": "reload"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 241,
          "column": 0
        },
        "end": {
          "line": 258,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.update",
      "line": 241
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.update",
      "anchor": "api-Database.Class.update"
    },
    "uid": "api/Database.Class.update",
    "indices": {
      ".update": 1,
      "Class.update": 2,
      "Database.Class.update": 3
    }
  },
  "api/Database.Class.drop": {
    "id": ".drop",
    "title": "Database.Class.drop",
    "summary": "Delete a class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.drop",
      "description": "<p>Delete a class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the class to delete.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class to delete.</p>\n"
          },
          "line": 266
        },
        {
          "type": "promise",
          "string": "{Db} The database instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 266
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 266,
          "column": 0
        },
        "end": {
          "line": 275,
          "column": 2
        }
      },
      "name": "drop",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.drop",
      "line": 266
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.drop",
      "anchor": "api-Database.Class.drop"
    },
    "uid": "api/Database.Class.drop",
    "indices": {
      ".drop": 1,
      "Class.drop": 2,
      "Database.Class.drop": 3
    }
  },
  "api/Database.Class.get": {
    "id": ".get",
    "title": "Database.Class.get",
    "summary": "Get a class by name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.get",
      "description": "<p>Get a class by name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer|String} name The name of the class.",
          "typeInfo": {
            "types": [
              "Integer",
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the class.</p>\n"
          },
          "line": 284
        },
        {
          "type": "param",
          "string": "{Boolean} refresh Whether to refresh the data, defaults to false.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": "refresh",
            "description": "<p>Whether to refresh the data, defaults to false.</p>\n"
          },
          "line": 284
        },
        {
          "type": "promise",
          "string": "{Object} The class object if it exists.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 284
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "refresh"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 284,
          "column": 0
        },
        "end": {
          "line": 298,
          "column": 2
        }
      },
      "name": "get",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.get",
      "line": 284
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.get",
      "anchor": "api-Database.Class.get"
    },
    "uid": "api/Database.Class.get",
    "indices": {
      ".get": 1,
      "Class.get": 2,
      "Database.Class.get": 3
    }
  },
  "api/Database.Class.cacheData": {
    "id": ".cacheData",
    "title": "Database.Class.cacheData",
    "summary": "Cache the given class data for fast lookup later.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
    "properties": {
      "id": "Database.Class.cacheData",
      "description": "<p>Cache the given class data for fast lookup later.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object[]} classes The class objects to cache.",
          "typeInfo": {
            "types": [
              "Array&lt;Object&gt;"
            ],
            "name": "classes",
            "description": "<p>The class objects to cache.</p>\n"
          },
          "line": 306
        },
        {
          "type": "return",
          "string": "{Db}                The db instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Db.html\">Database.Db</a>"
            ],
            "description": "<p>The db instance.</p>\n"
          },
          "line": 306
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "classes"
          }
        ],
        "symbol": "."
      },
      "receiver": "Database.Class",
      "loc": {
        "start": {
          "line": 306,
          "column": 0
        },
        "end": {
          "line": 327,
          "column": 2
        }
      },
      "name": "cacheData",
      "filePath": "/lib/db/class/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/class/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Class.cacheData",
      "line": 306
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Class",
    "meta": {
      "href": "/api/Database/Class.html#api-Database.Class.cacheData",
      "anchor": "api-Database.Class.cacheData"
    },
    "uid": "api/Database.Class.cacheData",
    "indices": {
      ".cacheData": 1,
      "Class.cacheData": 2,
      "Database.Class.cacheData": 3
    }
  },
  "api/Database.Db": {
    "id": "Db",
    "title": "Database.Db",
    "summary": "Database Constructor.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "symbol": "",
    "properties": {
      "id": "Database.Db",
      "namespace": "Database",
      "description": "<p>Database Constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The optional configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The optional configuration for the database.</p>\n"
          },
          "line": 22
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 1
        }
      },
      "name": "Db",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Db",
      "line": 22
    },
    "documents": [],
    "entities": [
      "api/Database.Db#configure",
      "api/Database.Db#init",
      "api/Database.Db#open",
      "api/Database.Db#close",
      "api/Database.Db#send",
      "api/Database.Db#reload",
      "api/Database.Db#begin",
      "api/Database.Db#exec",
      "api/Database.Db#query",
      "api/Database.Db#liveQuery",
      "api/Database.Db#normalizeResult",
      "api/Database.Db#normalizeResultContent",
      "api/Database.Db#registerTransformer",
      "api/Database.Db#transformDocument",
      "api/Database.Db#createQuery",
      "api/Database.Db#create",
      "api/Database.Db#select",
      "api/Database.Db#traverse",
      "api/Database.Db#insert",
      "api/Database.Db#update",
      "api/Database.Db#delete",
      "api/Database.Db#let",
      "api/Database.Db#createUserContext",
      "api/Database.Db#createFn"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Db.html",
      "anchor": "api-Database.Db",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
        "lastCommittedAt": 1461861433,
        "committers": {
          "maggiolo00@gmail.com": "maggiolo00"
        }
      }
    },
    "uid": "api/Database.Db",
    "indices": {
      "Db": 1,
      "Database.Db": 2
    }
  },
  "api/Database.Db#configure": {
    "id": "#configure",
    "title": "Database.Db#configure",
    "summary": "Configure the database instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#configure",
      "description": "<p>Configure the database instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the database.</p>\n"
          },
          "line": 56
        },
        {
          "type": "return",
          "string": "{Db}            The configured database object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Db</a>"
            ],
            "description": "<p>The configured database object.</p>\n"
          },
          "line": 56
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#configure",
      "line": 56
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23configure",
      "anchor": "api-Database.Db%23configure"
    },
    "uid": "api/Database.Db#configure",
    "indices": {
      "#configure": 1,
      "Db#configure": 2,
      "Database.Db#configure": 3
    }
  },
  "api/Database.Db#init": {
    "id": "#init",
    "title": "Database.Db#init",
    "summary": "Initialize the database instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#init",
      "description": "<p>Initialize the database instance.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#init",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23init",
      "anchor": "api-Database.Db%23init"
    },
    "uid": "api/Database.Db#init",
    "indices": {
      "#init": 1,
      "Db#init": 2,
      "Database.Db#init": 3
    }
  },
  "api/Database.Db#open": {
    "id": "#open",
    "title": "Database.Db#open",
    "summary": "Open the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#open",
      "description": "<p>Open the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The open db instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 92
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 92,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 2
        }
      },
      "name": "open",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#open",
      "line": 92
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23open",
      "anchor": "api-Database.Db%23open"
    },
    "uid": "api/Database.Db#open",
    "indices": {
      "#open": 1,
      "Db#open": 2,
      "Database.Db#open": 3
    }
  },
  "api/Database.Db#close": {
    "id": "#close",
    "title": "Database.Db#close",
    "summary": "Close the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#close",
      "description": "<p>Close the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The now closed db instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 128
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 128,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#close",
      "line": 128
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23close",
      "anchor": "api-Database.Db%23close"
    },
    "uid": "api/Database.Db#close",
    "indices": {
      "#close": 1,
      "Db#close": 2,
      "Database.Db#close": 3
    }
  },
  "api/Database.Db#send": {
    "id": "#send",
    "title": "Database.Db#send",
    "summary": "Send the given operation to the server, ensuring the\ndatabase is open first.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#send",
      "description": "<p>Send the given operation to the server, ensuring the\ndatabase is open first.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The operation to send.</p>\n"
          },
          "line": 147
        },
        {
          "type": "param",
          "string": "{Object} data       The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 147
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 147
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 147,
          "column": 0
        },
        "end": {
          "line": 160,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#send",
      "line": 147
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23send",
      "anchor": "api-Database.Db%23send"
    },
    "uid": "api/Database.Db#send",
    "indices": {
      "#send": 1,
      "Db#send": 2,
      "Database.Db#send": 3
    }
  },
  "api/Database.Db#reload": {
    "id": "#reload",
    "title": "Database.Db#reload",
    "summary": "Reload the configuration for the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#reload",
      "description": "<p>Reload the configuration for the database.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Db} The database with reloaded configuration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 168
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 168,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 2
        }
      },
      "name": "reload",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#reload",
      "line": 168
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23reload",
      "anchor": "api-Database.Db%23reload"
    },
    "uid": "api/Database.Db#reload",
    "indices": {
      "#reload": 1,
      "Db#reload": 2,
      "Database.Db#reload": 3
    }
  },
  "api/Database.Db#begin": {
    "id": "#begin",
    "title": "Database.Db#begin",
    "summary": "Begin a new transaction.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#begin",
      "description": "<p>Begin a new transaction.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Transaction} The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Transaction.html\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 186
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 186,
          "column": 0
        },
        "end": {
          "line": 189,
          "column": 2
        }
      },
      "name": "begin",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#begin",
      "line": 186
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23begin",
      "anchor": "api-Database.Db%23begin"
    },
    "uid": "api/Database.Db#begin",
    "indices": {
      "#begin": 1,
      "Db#begin": 2,
      "Database.Db#begin": 3
    }
  },
  "api/Database.Db#exec": {
    "id": "#exec",
    "title": "Database.Db#exec",
    "summary": "Execute an SQL query against the database and retreive the raw, parsed response.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#exec",
      "description": "<p>Execute an SQL query against the database and retreive the raw, parsed response.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 199
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 199
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 199
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "query"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 199,
          "column": 0
        },
        "end": {
          "line": 275,
          "column": 2
        }
      },
      "name": "exec",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#exec",
      "line": 199
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23exec",
      "anchor": "api-Database.Db%23exec"
    },
    "uid": "api/Database.Db#exec",
    "indices": {
      "#exec": 1,
      "Db#exec": 2,
      "Database.Db#exec": 3
    }
  },
  "api/Database.Db#query": {
    "id": "#query",
    "title": "Database.Db#query",
    "summary": "Execute an SQL query against the database and retreive the results",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#query",
      "description": "<p>Execute an SQL query against the database and retreive the results</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 284
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 284
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 284
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "command"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 284,
          "column": 0
        },
        "end": {
          "line": 317,
          "column": 2
        }
      },
      "name": "query",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#query",
      "line": 284
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23query",
      "anchor": "api-Database.Db%23query"
    },
    "uid": "api/Database.Db#query",
    "indices": {
      "#query": 1,
      "Db#query": 2,
      "Database.Db#query": 3
    }
  },
  "api/Database.Db#liveQuery": {
    "id": "#liveQuery",
    "title": "Database.Db#liveQuery",
    "summary": "Execute a live query against the database",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#liveQuery",
      "description": "<p>Execute a live query against the database</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} query   The query or command to execute.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "query",
            "description": "<p>The query or command to execute.</p>\n"
          },
          "line": 326
        },
        {
          "type": "param",
          "string": "{Object} options The options for the query / command.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the query / command.</p>\n"
          },
          "line": 326
        },
        {
          "type": "promise",
          "string": "{Mixed} The token of the live query.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 326
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "command"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 375,
          "column": 2
        }
      },
      "name": "liveQuery",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#liveQuery",
      "line": 326
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23liveQuery",
      "anchor": "api-Database.Db%23liveQuery"
    },
    "uid": "api/Database.Db#liveQuery",
    "indices": {
      "#liveQuery": 1,
      "Db#liveQuery": 2,
      "Database.Db#liveQuery": 3
    }
  },
  "api/Database.Db#normalizeResult": {
    "id": "#normalizeResult",
    "title": "Database.Db#normalizeResult",
    "summary": "Normalize a result, where possible.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#normalizeResult",
      "description": "<p>Normalize a result, where possible.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} result The result to normalize.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "result",
            "description": "<p>The result to normalize.</p>\n"
          },
          "line": 383
        },
        {
          "type": "return",
          "string": "{Object}        The normalized result.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The normalized result.</p>\n"
          },
          "line": 383
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "result"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 383,
          "column": 0
        },
        "end": {
          "line": 408,
          "column": 2
        }
      },
      "name": "normalizeResult",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#normalizeResult",
      "line": 383
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23normalizeResult",
      "anchor": "api-Database.Db%23normalizeResult"
    },
    "uid": "api/Database.Db#normalizeResult",
    "indices": {
      "#normalizeResult": 1,
      "Db#normalizeResult": 2,
      "Database.Db#normalizeResult": 3
    }
  },
  "api/Database.Db#normalizeResultContent": {
    "id": "#normalizeResultContent",
    "title": "Database.Db#normalizeResultContent",
    "summary": "Normalize the content for a result.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#normalizeResultContent",
      "description": "<p>Normalize the content for a result.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} content The content to normalize.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "content",
            "description": "<p>The content to normalize.</p>\n"
          },
          "line": 415
        },
        {
          "type": "return",
          "string": "{Mixed}         The normalized content.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "description": "<p>The normalized content.</p>\n"
          },
          "line": 415
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "content"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 415,
          "column": 0
        },
        "end": {
          "line": 436,
          "column": 2
        }
      },
      "name": "normalizeResultContent",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#normalizeResultContent",
      "line": 415
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23normalizeResultContent",
      "anchor": "api-Database.Db%23normalizeResultContent"
    },
    "uid": "api/Database.Db#normalizeResultContent",
    "indices": {
      "#normalizeResultContent": 1,
      "Db#normalizeResultContent": 2,
      "Database.Db#normalizeResultContent": 3
    }
  },
  "api/Database.Db#registerTransformer": {
    "id": "#registerTransformer",
    "title": "Database.Db#registerTransformer",
    "summary": "Register a transformer function for documents of the given class.\nThis function will be invoked for each document of the specified class\nin all future result sets.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#registerTransformer",
      "description": "<p>Register a transformer function for documents of the given class.\nThis function will be invoked for each document of the specified class\nin all future result sets.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   className   The name of the document class.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "className",
            "description": "<p>The name of the document class.</p>\n"
          },
          "line": 447
        },
        {
          "type": "param",
          "string": "{Function} transformer The transformer function.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "transformer",
            "description": "<p>The transformer function.</p>\n"
          },
          "line": 447
        },
        {
          "type": "return",
          "string": "{Db}                   The database instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Db</a>"
            ],
            "description": "<p>The database instance.</p>\n"
          },
          "line": 447
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "className"
          },
          {
            "name": "transformer"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 447,
          "column": 0
        },
        "end": {
          "line": 454,
          "column": 2
        }
      },
      "name": "registerTransformer",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#registerTransformer",
      "line": 447
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23registerTransformer",
      "anchor": "api-Database.Db%23registerTransformer"
    },
    "uid": "api/Database.Db#registerTransformer",
    "indices": {
      "#registerTransformer": 1,
      "Db#registerTransformer": 2,
      "Database.Db#registerTransformer": 3
    }
  },
  "api/Database.Db#transformDocument": {
    "id": "#transformDocument",
    "title": "Database.Db#transformDocument",
    "summary": "Transform a document according to its @class property, using the registered transformers.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#transformDocument",
      "description": "<p>Transform a document according to its <code>@class</code> property, using the registered transformers.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} document The document to transform.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "document",
            "description": "<p>The document to transform.</p>\n"
          },
          "line": 462
        },
        {
          "type": "return",
          "string": "{Mixed}           The transformed document.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "description": "<p>The transformed document.</p>\n"
          },
          "line": 462
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "document"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 462,
          "column": 0
        },
        "end": {
          "line": 472,
          "column": 2
        }
      },
      "name": "transformDocument",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#transformDocument",
      "line": 462
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23transformDocument",
      "anchor": "api-Database.Db%23transformDocument"
    },
    "uid": "api/Database.Db#transformDocument",
    "indices": {
      "#transformDocument": 1,
      "Db#transformDocument": 2,
      "Database.Db#transformDocument": 3
    }
  },
  "api/Database.Db#createQuery": {
    "id": "#createQuery",
    "title": "Database.Db#createQuery",
    "summary": "Create a query instance for this database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createQuery",
      "description": "<p>Create a query instance for this database.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 482
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 482,
          "column": 0
        },
        "end": {
          "line": 484,
          "column": 2
        }
      },
      "name": "createQuery",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createQuery",
      "line": 482
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23createQuery",
      "anchor": "api-Database.Db%23createQuery"
    },
    "uid": "api/Database.Db#createQuery",
    "indices": {
      "#createQuery": 1,
      "Db#createQuery": 2,
      "Database.Db#createQuery": 3
    }
  },
  "api/Database.Db#create": {
    "id": "#create",
    "title": "Database.Db#create",
    "summary": "Create a create query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#create",
      "description": "<p>Create a create query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 491
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 494,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#create",
      "line": 491
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23create",
      "anchor": "api-Database.Db%23create"
    },
    "uid": "api/Database.Db#create",
    "indices": {
      "#create": 1,
      "Db#create": 2,
      "Database.Db#create": 3
    }
  },
  "api/Database.Db#select": {
    "id": "#select",
    "title": "Database.Db#select",
    "summary": "Create a select query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#select",
      "description": "<p>Create a select query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 501
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 501,
          "column": 0
        },
        "end": {
          "line": 504,
          "column": 2
        }
      },
      "name": "select",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#select",
      "line": 501
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23select",
      "anchor": "api-Database.Db%23select"
    },
    "uid": "api/Database.Db#select",
    "indices": {
      "#select": 1,
      "Db#select": 2,
      "Database.Db#select": 3
    }
  },
  "api/Database.Db#traverse": {
    "id": "#traverse",
    "title": "Database.Db#traverse",
    "summary": "Create a traverse query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#traverse",
      "description": "<p>Create a traverse query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 511
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 511,
          "column": 0
        },
        "end": {
          "line": 514,
          "column": 2
        }
      },
      "name": "traverse",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#traverse",
      "line": 511
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23traverse",
      "anchor": "api-Database.Db%23traverse"
    },
    "uid": "api/Database.Db#traverse",
    "indices": {
      "#traverse": 1,
      "Db#traverse": 2,
      "Database.Db#traverse": 3
    }
  },
  "api/Database.Db#insert": {
    "id": "#insert",
    "title": "Database.Db#insert",
    "summary": "Create an insert query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#insert",
      "description": "<p>Create an insert query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 522
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 522,
          "column": 0
        },
        "end": {
          "line": 525,
          "column": 2
        }
      },
      "name": "insert",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#insert",
      "line": 522
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23insert",
      "anchor": "api-Database.Db%23insert"
    },
    "uid": "api/Database.Db#insert",
    "indices": {
      "#insert": 1,
      "Db#insert": 2,
      "Database.Db#insert": 3
    }
  },
  "api/Database.Db#update": {
    "id": "#update",
    "title": "Database.Db#update",
    "summary": "Create an update query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#update",
      "description": "<p>Create an update query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 533
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 533,
          "column": 0
        },
        "end": {
          "line": 536,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#update",
      "line": 533
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23update",
      "anchor": "api-Database.Db%23update"
    },
    "uid": "api/Database.Db#update",
    "indices": {
      "#update": 1,
      "Db#update": 2,
      "Database.Db#update": 3
    }
  },
  "api/Database.Db#delete": {
    "id": "#delete",
    "title": "Database.Db#delete",
    "summary": "Create a delete query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#delete",
      "description": "<p>Create a delete query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 543
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 543,
          "column": 0
        },
        "end": {
          "line": 546,
          "column": 2
        }
      },
      "name": "delete",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#delete",
      "line": 543
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23delete",
      "anchor": "api-Database.Db%23delete"
    },
    "uid": "api/Database.Db#delete",
    "indices": {
      "#delete": 1,
      "Db#delete": 2,
      "Database.Db#delete": 3
    }
  },
  "api/Database.Db#let": {
    "id": "#let",
    "title": "Database.Db#let",
    "summary": "Create a transactional query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#let",
      "description": "<p>Create a transactional query.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Query} The query instance.",
          "typeInfo": {
            "types": [
              "Query"
            ],
            "description": "<p>The query instance.</p>\n"
          },
          "line": 554
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 554,
          "column": 0
        },
        "end": {
          "line": 557,
          "column": 2
        }
      },
      "name": "let",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#let",
      "line": 554
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23let",
      "anchor": "api-Database.Db%23let"
    },
    "uid": "api/Database.Db#let",
    "indices": {
      "#let": 1,
      "Db#let": 2,
      "Database.Db#let": 3
    }
  },
  "api/Database.Db#createUserContext": {
    "id": "#createUserContext",
    "title": "Database.Db#createUserContext",
    "summary": "Create a context for a user, using their authentication token.\nThe context includes the query builder methods, which will be executed\non behalf of the user.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createUserContext",
      "description": "<p>Create a context for a user, using their authentication token.\nThe context includes the query builder methods, which will be executed\non behalf of the user.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer|String} token The authentication token.",
          "typeInfo": {
            "types": [
              "Buffer",
              "String"
            ],
            "name": "token",
            "description": "<p>The authentication token.</p>\n"
          },
          "line": 576
        },
        {
          "type": "return",
          "string": "{Object}              The object containing the query builder methods.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The object containing the query builder methods.</p>\n"
          },
          "line": 576
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 576,
          "column": 0
        },
        "end": {
          "line": 610,
          "column": 2
        }
      },
      "name": "createUserContext",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createUserContext",
      "line": 576
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23createUserContext",
      "anchor": "api-Database.Db%23createUserContext"
    },
    "uid": "api/Database.Db#createUserContext",
    "indices": {
      "#createUserContext": 1,
      "Db#createUserContext": 2,
      "Database.Db#createUserContext": 3
    }
  },
  "api/Database.Db#createFn": {
    "id": "#createFn",
    "title": "Database.Db#createFn",
    "summary": "Create a orient function from a plain Javascript function",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
    "properties": {
      "id": "Database.Db#createFn",
      "description": "<p>Create a orient function from a plain Javascript function</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name     The name of the function",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the function</p>\n"
          },
          "line": 620
        },
        {
          "type": "param",
          "string": "{Object} fn       Plain Javascript function to stringify",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "fn",
            "description": "<p>Plain Javascript function to stringify</p>\n"
          },
          "line": 620
        },
        {
          "type": "param",
          "string": "{Object} options  Not currently used but will be used for 'IDEMPOTENT' arg",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>Not currently used but will be used for &#39;IDEMPOTENT&#39; arg</p>\n"
          },
          "line": 620
        },
        {
          "type": "promise",
          "string": "{Mixed} The results of the query / command.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 620
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "fn"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Db",
      "loc": {
        "start": {
          "line": 620,
          "column": 0
        },
        "end": {
          "line": 640,
          "column": 2
        }
      },
      "name": "createFn",
      "filePath": "/lib/db/db.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/db.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Db#createFn",
      "line": 620
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Db",
    "meta": {
      "href": "/api/Database/Db.html#api-Database.Db%23createFn",
      "anchor": "api-Database.Db%23createFn"
    },
    "uid": "api/Database.Db#createFn",
    "indices": {
      "#createFn": 1,
      "Db#createFn": 2,
      "Database.Db#createFn": 3
    }
  },
  "api/Database.ODatabase": {
    "id": "ODatabase",
    "title": "ODatabase",
    "summary": "Database Constructor.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
    "symbol": "",
    "properties": {
      "id": "ODatabase",
      "namespace": "Database",
      "description": "<p>Database Constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The optional configuration for the database.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The optional configuration for the database.</p>\n"
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          },
          {
            "name": "owner"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "name": "ODatabase",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
      "isModule": true,
      "aliases": [
        "Db"
      ],
      "path": "ODatabase",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Database.ODatabase#configureLogger",
      "api/Database.ODatabase#configureTransport"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/ODatabase.html",
      "anchor": "api-Database.ODatabase",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
        "lastCommittedAt": 1456409841,
        "committers": {
          "maggiolo00@gmail.com": "maggiolo00"
        }
      }
    },
    "uid": "api/Database.ODatabase",
    "indices": {
      "ODatabase": 1,
      "Database.ODatabase": 2,
      "Db": 2
    }
  },
  "api/Database.ODatabase#configureLogger": {
    "id": "#configureLogger",
    "title": "ODatabase#configureLogger",
    "summary": "Configure the logger for the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
    "properties": {
      "id": "ODatabase#configureLogger",
      "description": "<p>Configure the logger for the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 37
        },
        {
          "type": "return",
          "string": "{Server}        The database instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>The database instance with the configured logger.</p>\n"
          },
          "line": 37
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "ODatabase",
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
      "isModule": false,
      "aliases": [],
      "path": "ODatabase#configureLogger",
      "line": 37
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.ODatabase",
    "meta": {
      "href": "/api/Database/ODatabase.html#api-Database.ODatabase%23configureLogger",
      "anchor": "api-Database.ODatabase%23configureLogger"
    },
    "uid": "api/Database.ODatabase#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "ODatabase#configureLogger": 2,
      "Database.ODatabase#configureLogger": 3
    }
  },
  "api/Database.ODatabase#configureTransport": {
    "id": "#configureTransport",
    "title": "ODatabase#configureTransport",
    "summary": "Configure the transport for the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
    "properties": {
      "id": "ODatabase#configureTransport",
      "description": "<p>Configure the transport for the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The database config.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The database config.</p>\n"
          },
          "line": 52
        },
        {
          "type": "return",
          "string": "{Server}        The configured database object.",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>The configured database object.</p>\n"
          },
          "line": 52
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "ODatabase",
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 2
        }
      },
      "name": "configureTransport",
      "filePath": "/lib/db/odatabase.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/odatabase.js",
      "isModule": false,
      "aliases": [],
      "path": "ODatabase#configureTransport",
      "line": 52
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.ODatabase",
    "meta": {
      "href": "/api/Database/ODatabase.html#api-Database.ODatabase%23configureTransport",
      "anchor": "api-Database.ODatabase%23configureTransport"
    },
    "uid": "api/Database.ODatabase#configureTransport",
    "indices": {
      "#configureTransport": 1,
      "ODatabase#configureTransport": 2,
      "Database.ODatabase#configureTransport": 3
    }
  },
  "api/Database.Statement": {
    "id": "Statement",
    "title": "Database.Statement",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "symbol": "",
    "properties": {
      "id": "Database.Statement",
      "namespace": "Database",
      "description": "",
      "tags": [
        {
          "type": "module",
          "string": "",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 9
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "db"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "name": "Statement",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Statement",
      "line": 9
    },
    "documents": [],
    "entities": [
      "api/Database.Statement#strategy",
      "api/Database.Statement#from",
      "api/Database.Statement#increment",
      "api/Database.Statement#add",
      "api/Database.Statement#remove",
      "api/Database.Statement#put",
      "api/Database.Statement#upsert",
      "api/Database.Statement#skip",
      "api/Database.Statement#limit",
      "api/Database.Statement#let",
      "api/Database.Statement#commit",
      "api/Database.Statement#retry",
      "api/Database.Statement#wait",
      "api/Database.Statement#return",
      "api/Database.Statement#lucene",
      "api/Database.Statement#near",
      "api/Database.Statement#within",
      "api/Database.Statement#addParam",
      "api/Database.Statement#addParams",
      "api/Database.Statement#token",
      "api/Database.Statement#buildStatement",
      "api/Database.Statement#toString",
      "api/Database.Statement#buildOptions"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Statement.html",
      "anchor": "api-Database.Statement",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "coder@littleglobe.de": "mamobyz",
          "not.committed.yet": "Not Committed Yet",
          "dehbmarques@gmail.com": "André Marques",
          "vslinko@yahoo.com": "Vyacheslav Slinko",
          "daniel.s.silva@live.com": "Daniel Silva",
          "l.garulli@gmail.com": "lvca",
          "dario@appscot.com": "Dario Marcelino",
          "maggiolo00@gmail.com": "maggiolo00"
        }
      }
    },
    "uid": "api/Database.Statement",
    "indices": {
      "Statement": 1,
      "Database.Statement": 2
    }
  },
  "api/Database.Statement#strategy": {
    "id": "#strategy",
    "title": "Database.Statement#strategy",
    "summary": "A 'strategy' clause for traverse query",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#strategy",
      "description": "<p>A &#39;strategy&#39; clause for traverse query</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} args The strategy how traverse should go in deep,\n                     either 'DEPTH_FIRST'|'BREADTH_FIRST', the first one is default",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "args",
            "description": "<p>The strategy how traverse should go in deep,                      either &#39;DEPTH_FIRST&#39;|&#39;BREADTH_FIRST&#39;, the first one is default</p>\n"
          },
          "line": 43
        },
        {
          "type": "return",
          "string": "{Statement}  The statement object",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object</p>\n"
          },
          "line": 43
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "s"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 2
        }
      },
      "name": "strategy",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#strategy",
      "line": 43
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23strategy",
      "anchor": "api-Database.Statement%23strategy"
    },
    "uid": "api/Database.Statement#strategy",
    "indices": {
      "#strategy": 1,
      "Statement#strategy": 2,
      "Database.Statement#strategy": 3
    }
  },
  "api/Database.Statement#from": {
    "id": "#from",
    "title": "Database.Statement#from",
    "summary": "Use the given record id or class name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#from",
      "description": "<p>Use the given record id or class name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|String[]|Function} args The record id, class name or expression.",
          "typeInfo": {
            "types": [
              "String",
              "Array&lt;String&gt;",
              "Function"
            ],
            "name": "args",
            "description": "<p>The record id, class name or expression.</p>\n"
          },
          "line": 97
        },
        {
          "type": "return",
          "string": "{Statement}                     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 97
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 97,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 2
        }
      },
      "name": "from",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#from",
      "line": 97
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23from",
      "anchor": "api-Database.Statement%23from"
    },
    "uid": "api/Database.Statement#from",
    "indices": {
      "#from": 1,
      "Statement#from": 2,
      "Database.Statement#from": 3
    }
  },
  "api/Database.Statement#increment": {
    "id": "#increment",
    "title": "Database.Statement#increment",
    "summary": "An increment clause.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#increment",
      "description": "<p>An <code>increment</code> clause.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 127
        },
        {
          "type": "param",
          "string": "{Object}     value        The value to increment by, defaults to 1",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "value",
            "description": "<p>The value to increment by, defaults to 1</p>\n"
          },
          "line": 127
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 127
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 127,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "increment",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#increment",
      "line": 127
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23increment",
      "anchor": "api-Database.Statement%23increment"
    },
    "uid": "api/Database.Statement#increment",
    "indices": {
      "#increment": 1,
      "Statement#increment": 2,
      "Database.Statement#increment": 3
    }
  },
  "api/Database.Statement#add": {
    "id": "#add",
    "title": "Database.Statement#add",
    "summary": "An add clause for set / list properties.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#add",
      "description": "<p>An <code>add</code> clause for set / list properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 141
        },
        {
          "type": "param",
          "string": "{Object}     ...values    The values to add in the set / list property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "...values",
            "description": "<p>The values to add in the set / list property.</p>\n"
          },
          "line": 141
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 141
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 141,
          "column": 0
        },
        "end": {
          "line": 151,
          "column": 2
        }
      },
      "name": "add",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#add",
      "line": 141
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23add",
      "anchor": "api-Database.Statement%23add"
    },
    "uid": "api/Database.Statement#add",
    "indices": {
      "#add": 1,
      "Statement#add": 2,
      "Database.Statement#add": 3
    }
  },
  "api/Database.Statement#remove": {
    "id": "#remove",
    "title": "Database.Statement#remove",
    "summary": "A remove clause for map / set / list properties.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#remove",
      "description": "<p>A <code>remove</code> clause for map / set / list properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property     The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 161
        },
        {
          "type": "param",
          "string": "{Object}     ...values    The keys / values to remove from the map / set / list property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "...values",
            "description": "<p>The keys / values to remove from the map / set / list property.</p>\n"
          },
          "line": 161
        },
        {
          "type": "return",
          "string": "{Statement}               The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 161
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 161,
          "column": 0
        },
        "end": {
          "line": 171,
          "column": 2
        }
      },
      "name": "remove",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#remove",
      "line": 161
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23remove",
      "anchor": "api-Database.Statement%23remove"
    },
    "uid": "api/Database.Statement#remove",
    "indices": {
      "#remove": 1,
      "Statement#remove": 2,
      "Database.Statement#remove": 3
    }
  },
  "api/Database.Statement#put": {
    "id": "#put",
    "title": "Database.Statement#put",
    "summary": "A put clause for map properties.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#put",
      "description": "<p>A <code>put</code> clause for map properties.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     property    The property name to put the key to.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "property",
            "description": "<p>The property name to put the key to.</p>\n"
          },
          "line": 180
        },
        {
          "type": "param",
          "string": "{Object}     keysValues  The keys and values to add in the map property.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "keysValues",
            "description": "<p>The keys and values to add in the map property.</p>\n"
          },
          "line": 180
        },
        {
          "type": "return",
          "string": "{Statement}              The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 180
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "keysValues"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 180,
          "column": 0
        },
        "end": {
          "line": 184,
          "column": 2
        }
      },
      "name": "put",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#put",
      "line": 180
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23put",
      "anchor": "api-Database.Statement%23put"
    },
    "uid": "api/Database.Statement#put",
    "indices": {
      "#put": 1,
      "Statement#put": 2,
      "Database.Statement#put": 3
    }
  },
  "api/Database.Statement#upsert": {
    "id": "#upsert",
    "title": "Database.Statement#upsert",
    "summary": "Upsert the records to avoid multiple queries.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#upsert",
      "description": "<p>Upsert the records to avoid multiple queries.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} condition          The condition clause, if any.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "condition",
            "description": "<p>The condition clause, if any.</p>\n"
          },
          "line": 195
        },
        {
          "type": "param",
          "string": "{Object}        params             The parameters to bind to the statement, if any.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameters to bind to the statement, if any.</p>\n"
          },
          "line": 195
        },
        {
          "type": "param",
          "string": "{String}        comparisonOperator The operator to use for comparison, defaults to '='.",
          "typeInfo": {
            "defaultValue": "'.",
            "types": [
              "String"
            ],
            "name": "comparisonOperator",
            "description": "<p>The operator to use for comparison, defaults to &#39;=&#39;.</p>\n"
          },
          "line": 195
        },
        {
          "type": "return",
          "string": "{Statement}                        The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 195
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "condition"
          },
          {
            "name": "params"
          },
          {
            "name": "comparisonOperator"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 195,
          "column": 0
        },
        "end": {
          "line": 205,
          "column": 2
        }
      },
      "name": "upsert",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#upsert",
      "line": 195
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23upsert",
      "anchor": "api-Database.Statement%23upsert"
    },
    "uid": "api/Database.Statement#upsert",
    "indices": {
      "#upsert": 1,
      "Statement#upsert": 2,
      "Database.Statement#upsert": 3
    }
  },
  "api/Database.Statement#skip": {
    "id": "#skip",
    "title": "Database.Statement#skip",
    "summary": "Set the offset to start returning results from.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#skip",
      "description": "<p>Set the offset to start returning results from.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} value  The offset.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "value",
            "description": "<p>The offset.</p>\n"
          },
          "line": 281
        },
        {
          "type": "return",
          "string": "{Statement}      The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 281
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 281,
          "column": 0
        },
        "end": {
          "line": 284,
          "column": 2
        }
      },
      "name": "skip",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#skip",
      "line": 281
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23skip",
      "anchor": "api-Database.Statement%23skip"
    },
    "uid": "api/Database.Statement#skip",
    "indices": {
      "#skip": 1,
      "Statement#skip": 2,
      "Database.Statement#skip": 3
    }
  },
  "api/Database.Statement#limit": {
    "id": "#limit",
    "title": "Database.Statement#limit",
    "summary": "Set the maximum number of results to return.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#limit",
      "description": "<p>Set the maximum number of results to return.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} value  The limit.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "value",
            "description": "<p>The limit.</p>\n"
          },
          "line": 302
        },
        {
          "type": "return",
          "string": "{Statement}      The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 302
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 302,
          "column": 0
        },
        "end": {
          "line": 305,
          "column": 2
        }
      },
      "name": "limit",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#limit",
      "line": 302
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23limit",
      "anchor": "api-Database.Statement%23limit"
    },
    "uid": "api/Database.Statement#limit",
    "indices": {
      "#limit": 1,
      "Statement#limit": 2,
      "Database.Statement#limit": 3
    }
  },
  "api/Database.Statement#let": {
    "id": "#let",
    "title": "Database.Statement#let",
    "summary": "Assign a value to a variable within an SQL statement.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#let",
      "description": "<p>Assign a value to a variable within an SQL statement.</p>\n<blockquote>\n<p>Note: The value will <strong>not</strong> be encoded as it may contain arbitrary SQL expressions.\nuse <code>OrientDB.utils.encode()</code> if you need to allow safe values here.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}           name  The name of the variable to assign",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the variable to assign</p>\n"
          },
          "line": 326
        },
        {
          "type": "param",
          "string": "{String|Statement} value The value of the variable, can be an SQL statement.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"\">Database.Statement</a>"
            ],
            "name": "value",
            "description": "<p>The value of the variable, can be an SQL statement.</p>\n"
          },
          "line": 326
        },
        {
          "type": "return",
          "string": "{Statement}              The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 326
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 330,
          "column": 2
        }
      },
      "name": "let",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#let",
      "line": 326
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23let",
      "anchor": "api-Database.Statement%23let"
    },
    "uid": "api/Database.Statement#let",
    "indices": {
      "#let": 1,
      "Statement#let": 2,
      "Database.Statement#let": 3
    }
  },
  "api/Database.Statement#commit": {
    "id": "#commit",
    "title": "Database.Statement#commit",
    "summary": "Commit a transaction.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#commit",
      "description": "<p>Commit a transaction.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} retryLimit The maximum number of times to retry, defaults to 0.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "retryLimit",
            "description": "<p>The maximum number of times to retry, defaults to 0.</p>\n"
          },
          "line": 346
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 346
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "retryLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 346,
          "column": 0
        },
        "end": {
          "line": 349,
          "column": 2
        }
      },
      "name": "commit",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#commit",
      "line": 346
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23commit",
      "anchor": "api-Database.Statement%23commit"
    },
    "uid": "api/Database.Statement#commit",
    "indices": {
      "#commit": 1,
      "Statement#commit": 2,
      "Database.Statement#commit": 3
    }
  },
  "api/Database.Statement#retry": {
    "id": "#retry",
    "title": "Database.Statement#retry",
    "summary": "Specify the number of times to retry a command.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#retry",
      "description": "<p>Specify the number of times to retry a command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} retryLimit The maximum number of times to retry, defaults to 1.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "retryLimit",
            "description": "<p>The maximum number of times to retry, defaults to 1.</p>\n"
          },
          "line": 358
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 358
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "retryLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 358,
          "column": 0
        },
        "end": {
          "line": 361,
          "column": 2
        }
      },
      "name": "retry",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#retry",
      "line": 358
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23retry",
      "anchor": "api-Database.Statement%23retry"
    },
    "uid": "api/Database.Statement#retry",
    "indices": {
      "#retry": 1,
      "Statement#retry": 2,
      "Database.Statement#retry": 3
    }
  },
  "api/Database.Statement#wait": {
    "id": "#wait",
    "title": "Database.Statement#wait",
    "summary": "Specify the number of milliseconds to wait between retrying a command.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#wait",
      "description": "<p>Specify the number of milliseconds to wait between retrying a command.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} waitLimit  The number of ms to wait.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "waitLimit",
            "description": "<p>The number of ms to wait.</p>\n"
          },
          "line": 369
        },
        {
          "type": "return",
          "string": "{Statement}          The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 369
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "waitLimit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 369,
          "column": 0
        },
        "end": {
          "line": 372,
          "column": 2
        }
      },
      "name": "wait",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#wait",
      "line": 369
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23wait",
      "anchor": "api-Database.Statement%23wait"
    },
    "uid": "api/Database.Statement#wait",
    "indices": {
      "#wait": 1,
      "Statement#wait": 2,
      "Database.Statement#wait": 3
    }
  },
  "api/Database.Statement#return": {
    "id": "#return",
    "title": "Database.Statement#return",
    "summary": "Return a certain variable if there is a let clause.\nFor update, insert or delete statements it will add a RETURN clause before\nthe WHERE clause.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#return",
      "description": "<p>Return a certain variable if there is a let clause.\nFor update, insert or delete statements it will add a RETURN clause before\nthe WHERE clause.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} value The name of the variable or what to return.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "value",
            "description": "<p>The name of the variable or what to return.</p>\n"
          },
          "line": 382
        },
        {
          "type": "return",
          "string": "{Statement}   The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 382
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 382,
          "column": 0
        },
        "end": {
          "line": 385,
          "column": 2
        }
      },
      "name": "return",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#return",
      "line": 382
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23return",
      "anchor": "api-Database.Statement%23return"
    },
    "uid": "api/Database.Statement#return",
    "indices": {
      "#return": 1,
      "Statement#return": 2,
      "Database.Statement#return": 3
    }
  },
  "api/Database.Statement#lucene": {
    "id": "#lucene",
    "title": "Database.Statement#lucene",
    "summary": "Specify a lucene full text query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#lucene",
      "description": "<p>Specify a lucene full text query.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} ...property    The names of the properties to include in the query.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "...property",
            "description": "<p>The names of the properties to include in the query.</p>\n"
          },
          "line": 396
        },
        {
          "type": "param",
          "string": "{String}        luceneQuery    The lucene query, using lucene QueryParser syntax.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "luceneQuery",
            "description": "<p>The lucene query, using lucene QueryParser syntax.</p>\n"
          },
          "line": 396
        },
        {
          "type": "return",
          "string": "{Statement}                    The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 396
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "property"
          },
          {
            "name": "luceneQuery"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 396,
          "column": 0
        },
        "end": {
          "line": 424,
          "column": 2
        }
      },
      "name": "lucene",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#lucene",
      "line": 396
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23lucene",
      "anchor": "api-Database.Statement%23lucene"
    },
    "uid": "api/Database.Statement#lucene",
    "indices": {
      "#lucene": 1,
      "Statement#lucene": 2,
      "Database.Statement#lucene": 3
    }
  },
  "api/Database.Statement#near": {
    "id": "#near",
    "title": "Database.Statement#near",
    "summary": "Specify a lucene spatial query, find items near the given longitude / latitude.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#near",
      "description": "<p>Specify a lucene spatial query, find items near the given longitude / latitude.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} latitudeProperty  Either the name of the longitude property,\n                                          or a map of field names to values.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "latitudeProperty",
            "description": "<p>Either the name of the longitude property,                                           or a map of field names to values.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{String|Number} longitudeProperty Either the name of the latitude property,\n                                          or the optional `maxDistanceInKms`.",
          "typeInfo": {
            "types": [
              "String",
              "Number"
            ],
            "name": "longitudeProperty",
            "description": "<p>Either the name of the latitude property,                                           or the optional <code>maxDistanceInKms</code>.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        longitude         The longitude value to compare against.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "longitude",
            "description": "<p>The longitude value to compare against.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        latitude          The latitude value to compare against.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "latitude",
            "description": "<p>The latitude value to compare against.</p>\n"
          },
          "line": 440
        },
        {
          "type": "param",
          "string": "{Number}        maxDistanceInKms  The maximum distance in kilometers.",
          "typeInfo": {
            "types": [
              "Number"
            ],
            "name": "maxDistanceInKms",
            "description": "<p>The maximum distance in kilometers.</p>\n"
          },
          "line": 440
        },
        {
          "type": "return",
          "string": "{Statement}                       The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 440
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "latitudeProperty"
          },
          {
            "name": "longitudeProperty"
          },
          {
            "name": "longitude"
          },
          {
            "name": "latitude"
          },
          {
            "name": "maxDistanceInKms"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 440,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 2
        }
      },
      "name": "near",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#near",
      "line": 440
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23near",
      "anchor": "api-Database.Statement%23near"
    },
    "uid": "api/Database.Statement#near",
    "indices": {
      "#near": 1,
      "Statement#near": 2,
      "Database.Statement#near": 3
    }
  },
  "api/Database.Statement#within": {
    "id": "#within",
    "title": "Database.Statement#within",
    "summary": "Specify a lucene spatial query, find items within the given bounding box.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#within",
      "description": "<p>Specify a lucene spatial query, find items within the given bounding box.</p>\n<blockquote>\n<p>NOTE: You must have installed the lucene query plugin in OrientDB for this to work.</p>\n</blockquote>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Number} latitudeProperty  The name of the latitude property.",
          "typeInfo": {
            "types": [
              "String",
              "Number"
            ],
            "name": "latitudeProperty",
            "description": "<p>The name of the latitude property.</p>\n"
          },
          "line": 478
        },
        {
          "type": "param",
          "string": "{String|Object} longitudeProperty The name of the longitude property.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "longitudeProperty",
            "description": "<p>The name of the longitude property.</p>\n"
          },
          "line": 478
        },
        {
          "type": "param",
          "string": "{Array}         box               An array of coordinates.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "name": "box",
            "description": "<p>An array of coordinates.</p>\n"
          },
          "line": 478
        },
        {
          "type": "return",
          "string": "{Statement}                       The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 478
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "latitudeProperty"
          },
          {
            "name": "longitudeProperty"
          },
          {
            "name": "box"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 478,
          "column": 0
        },
        "end": {
          "line": 482,
          "column": 2
        }
      },
      "name": "within",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#within",
      "line": 478
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23within",
      "anchor": "api-Database.Statement%23within"
    },
    "uid": "api/Database.Statement#within",
    "indices": {
      "#within": 1,
      "Statement#within": 2,
      "Database.Statement#within": 3
    }
  },
  "api/Database.Statement#addParam": {
    "id": "#addParam",
    "title": "Database.Statement#addParam",
    "summary": "Add the given parameter to the query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#addParam",
      "description": "<p>Add the given parameter to the query.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} key    The parameter key.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "key",
            "description": "<p>The parameter key.</p>\n"
          },
          "line": 493
        },
        {
          "type": "param",
          "string": "{Object} params The parameter value.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameter value.</p>\n"
          },
          "line": 493
        },
        {
          "type": "return",
          "string": "{Statement}     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 493
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "key"
          },
          {
            "name": "value"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 493,
          "column": 0
        },
        "end": {
          "line": 496,
          "column": 2
        }
      },
      "name": "addParam",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#addParam",
      "line": 493
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23addParam",
      "anchor": "api-Database.Statement%23addParam"
    },
    "uid": "api/Database.Statement#addParam",
    "indices": {
      "#addParam": 1,
      "Statement#addParam": 2,
      "Database.Statement#addParam": 3
    }
  },
  "api/Database.Statement#addParams": {
    "id": "#addParams",
    "title": "Database.Statement#addParams",
    "summary": "Add the given parameters to the query.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#addParams",
      "description": "<p>Add the given parameters to the query.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} params The parameters to add.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "params",
            "description": "<p>The parameters to add.</p>\n"
          },
          "line": 504
        },
        {
          "type": "return",
          "string": "{Statement}     The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 504
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "params"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 504,
          "column": 0
        },
        "end": {
          "line": 513,
          "column": 2
        }
      },
      "name": "addParams",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#addParams",
      "line": 504
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23addParams",
      "anchor": "api-Database.Statement%23addParams"
    },
    "uid": "api/Database.Statement#addParams",
    "indices": {
      "#addParams": 1,
      "Statement#addParams": 2,
      "Database.Statement#addParams": 3
    }
  },
  "api/Database.Statement#token": {
    "id": "#token",
    "title": "Database.Statement#token",
    "summary": "Use a particular Auth Token for this statement.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#token",
      "description": "<p>Use a particular Auth Token for this statement.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}     token  The token to use",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "token",
            "description": "<p>The token to use</p>\n"
          },
          "line": 522
        },
        {
          "type": "return",
          "string": "{Statement}         The statement object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Statement</a>"
            ],
            "description": "<p>The statement object.</p>\n"
          },
          "line": 522
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 522,
          "column": 0
        },
        "end": {
          "line": 528,
          "column": 2
        }
      },
      "name": "token",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#token",
      "line": 522
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23token",
      "anchor": "api-Database.Statement%23token"
    },
    "uid": "api/Database.Statement#token",
    "indices": {
      "#token": 1,
      "Statement#token": 2,
      "Database.Statement#token": 3
    }
  },
  "api/Database.Statement#buildStatement": {
    "id": "#buildStatement",
    "title": "Database.Statement#buildStatement",
    "summary": "Build the statement.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#buildStatement",
      "description": "<p>Build the statement.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String}             The SQL statement.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The SQL statement.</p>\n"
          },
          "line": 535
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 535,
          "column": 0
        },
        "end": {
          "line": 897,
          "column": 2
        }
      },
      "name": "buildStatement",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#buildStatement",
      "line": 535
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23buildStatement",
      "anchor": "api-Database.Statement%23buildStatement"
    },
    "uid": "api/Database.Statement#buildStatement",
    "indices": {
      "#buildStatement": 1,
      "Statement#buildStatement": 2,
      "Database.Statement#buildStatement": 3
    }
  },
  "api/Database.Statement#toString": {
    "id": "#toString",
    "title": "Database.Statement#toString",
    "summary": "Return a string version of the statement, with parameters prepared and bound.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#toString",
      "description": "<p>Return a string version of the statement, with parameters prepared and bound.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{String} The prepared statement.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The prepared statement.</p>\n"
          },
          "line": 905
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 905,
          "column": 0
        },
        "end": {
          "line": 907,
          "column": 2
        }
      },
      "name": "toString",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#toString",
      "line": 905
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23toString",
      "anchor": "api-Database.Statement%23toString"
    },
    "uid": "api/Database.Statement#toString",
    "indices": {
      "#toString": 1,
      "Statement#toString": 2,
      "Database.Statement#toString": 3
    }
  },
  "api/Database.Statement#buildOptions": {
    "id": "#buildOptions",
    "title": "Database.Statement#buildOptions",
    "summary": "Build the options for the statement.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
    "properties": {
      "id": "Database.Statement#buildOptions",
      "description": "<p>Build the options for the statement.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Object} The SQL statement options.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The SQL statement options.</p>\n"
          },
          "line": 914
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Statement",
      "loc": {
        "start": {
          "line": 914,
          "column": 0
        },
        "end": {
          "line": 945,
          "column": 2
        }
      },
      "name": "buildOptions",
      "filePath": "/lib/db/statement.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/statement.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Statement#buildOptions",
      "line": 914
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Statement",
    "meta": {
      "href": "/api/Database/Statement.html#api-Database.Statement%23buildOptions",
      "anchor": "api-Database.Statement%23buildOptions"
    },
    "uid": "api/Database.Statement#buildOptions",
    "indices": {
      "#buildOptions": 1,
      "Statement#buildOptions": 2,
      "Database.Statement#buildOptions": 3
    }
  },
  "api/Database.Transaction": {
    "id": "Transaction",
    "title": "Database.Transaction",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
    "symbol": "",
    "properties": {
      "id": "Database.Transaction",
      "namespace": "Database",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{Db}      db  The database the transaction is for.",
          "typeInfo": {
            "types": [
              "<a href=\"Db.html\">Database.Db</a>"
            ],
            "name": "db",
            "description": "<p>The database the transaction is for.</p>\n"
          },
          "line": 11
        },
        {
          "type": "param",
          "string": "{Integer} id  The transaction id.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "id",
            "description": "<p>The transaction id.</p>\n"
          },
          "line": 11
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "db"
          },
          {
            "name": "id"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 18,
          "column": 1
        }
      },
      "name": "Transaction",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
      "isModule": true,
      "aliases": [],
      "path": "Database.Transaction",
      "line": 11
    },
    "documents": [],
    "entities": [
      "api/Database.Transaction#commit",
      "api/Database.Transaction#create",
      "api/Database.Transaction#update",
      "api/Database.Transaction#delete"
    ],
    "type": "Document",
    "parentNode": "api/Database",
    "meta": {
      "href": "/api/Database/Transaction.html",
      "anchor": "api-Database.Transaction",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "not.committed.yet": "Not Committed Yet"
        }
      }
    },
    "uid": "api/Database.Transaction",
    "indices": {
      "Transaction": 1,
      "Database.Transaction": 2
    }
  },
  "api/Database.Transaction#commit": {
    "id": "#commit",
    "title": "Database.Transaction#commit",
    "summary": "Commit the transaction.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#commit",
      "description": "<p>Commit the transaction.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Object} The results of the transaction.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 27
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 2
        }
      },
      "name": "commit",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#commit",
      "line": 27
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction%23commit",
      "anchor": "api-Database.Transaction%23commit"
    },
    "uid": "api/Database.Transaction#commit",
    "indices": {
      "#commit": 1,
      "Transaction#commit": 2,
      "Database.Transaction#commit": 3
    }
  },
  "api/Database.Transaction#create": {
    "id": "#create",
    "title": "Database.Transaction#create",
    "summary": "Insert the given record into the database.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#create",
      "description": "<p>Insert the given record into the database.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record  The record to insert.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to insert.</p>\n"
          },
          "line": 105
        },
        {
          "type": "return",
          "string": "{Transaction}    The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 105
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 105,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#create",
      "line": 105
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction%23create",
      "anchor": "api-Database.Transaction%23create"
    },
    "uid": "api/Database.Transaction#create",
    "indices": {
      "#create": 1,
      "Transaction#create": 2,
      "Database.Transaction#create": 3
    }
  },
  "api/Database.Transaction#update": {
    "id": "#update",
    "title": "Database.Transaction#update",
    "summary": "Update the given record.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#update",
      "description": "<p>Update the given record.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} record  The record to update.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "record",
            "description": "<p>The record to update.</p>\n"
          },
          "line": 124
        },
        {
          "type": "return",
          "string": "{Transaction}    The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 124
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 2
        }
      },
      "name": "update",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#update",
      "line": 124
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction%23update",
      "anchor": "api-Database.Transaction%23update"
    },
    "uid": "api/Database.Transaction#update",
    "indices": {
      "#update": 1,
      "Transaction#update": 2,
      "Database.Transaction#update": 3
    }
  },
  "api/Database.Transaction#delete": {
    "id": "#delete",
    "title": "Database.Transaction#delete",
    "summary": "Delete the given record.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
    "properties": {
      "id": "Database.Transaction#delete",
      "description": "<p>Delete the given record.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|RID|Object} record  The record or record id to delete.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"../RecordID.html\">RecordID</a>",
              "Object"
            ],
            "name": "record",
            "description": "<p>The record or record id to delete.</p>\n"
          },
          "line": 147
        },
        {
          "type": "return",
          "string": "{Transaction}               The transaction instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Database.Transaction</a>"
            ],
            "description": "<p>The transaction instance.</p>\n"
          },
          "line": 147
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "record"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Database.Transaction",
      "loc": {
        "start": {
          "line": 147,
          "column": 0
        },
        "end": {
          "line": 162,
          "column": 2
        }
      },
      "name": "delete",
      "filePath": "/lib/db/transaction.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/db/transaction.js",
      "isModule": false,
      "aliases": [],
      "path": "Database.Transaction#delete",
      "line": 147
    },
    "type": "DocumentEntity",
    "parentNode": "api/Database.Transaction",
    "meta": {
      "href": "/api/Database/Transaction.html#api-Database.Transaction%23delete",
      "anchor": "api-Database.Transaction%23delete"
    },
    "uid": "api/Database.Transaction#delete",
    "indices": {
      "#delete": 1,
      "Transaction#delete": 2,
      "Database.Transaction#delete": 3
    }
  },
  "api/OrientDBError": {
    "id": "OrientDBError",
    "title": "OrientDBError",
    "summary": "A custom error class",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
    "symbol": "",
    "properties": {
      "id": "OrientDBError",
      "description": "<p>A custom error class</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "params": []
      },
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 1
        }
      },
      "name": "OrientDBError",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
      "isModule": true,
      "aliases": [],
      "path": "OrientDBError",
      "line": 6
    },
    "documents": [],
    "entities": [
      "api/OrientDBError.prototype",
      "api/OrientDBError@name",
      "api/OrientDBError#init",
      "api/OrientDBError.inherit"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/OrientDBError.html",
      "anchor": "api-OrientDBError",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
        "lastCommittedAt": 1398352594,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/OrientDBError",
    "indices": {
      "OrientDBError": 1
    }
  },
  "api/OrientDBError.prototype": {
    "id": ".prototype",
    "title": "OrientDBError.prototype",
    "summary": "Extend the native error class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError.prototype",
      "description": "<p>Extend the native error class.</p>\n",
      "tags": [
        {
          "type": "type",
          "string": "",
          "explicitType": "Object",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": null,
            "description": null
          },
          "line": 15
        }
      ],
      "ctx": {
        "type": "Object",
        "symbol": "."
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      },
      "name": "prototype",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError.prototype",
      "line": 15
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError.prototype",
      "anchor": "api-OrientDBError.prototype"
    },
    "uid": "api/OrientDBError.prototype",
    "indices": {
      ".prototype": 1,
      "OrientDBError.prototype": 2
    }
  },
  "api/OrientDBError@name": {
    "id": "@name",
    "title": "OrientDBError@name",
    "summary": "The name of the error.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError@name",
      "description": "<p>The name of the error.</p>\n",
      "tags": [
        {
          "type": "type",
          "string": "",
          "explicitType": "String",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": null,
            "description": null
          },
          "line": 25
        }
      ],
      "ctx": {
        "type": "String",
        "scope": "prototype",
        "value": "OrientDBError",
        "symbol": "@"
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 47
        }
      },
      "name": "name",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError@name",
      "line": 25
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError%40name",
      "anchor": "api-OrientDBError%40name"
    },
    "uid": "api/OrientDBError@name",
    "indices": {
      "@name": 1,
      "OrientDBError@name": 2
    }
  },
  "api/OrientDBError#init": {
    "id": "#init",
    "title": "OrientDBError#init",
    "summary": "Initializes the error, child classes can override this.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError#init",
      "description": "<p>Initializes the error, child classes can override this.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} message the error message",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "message",
            "description": "<p>the error message</p>\n"
          },
          "line": 31
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "message"
          }
        ],
        "symbol": "#"
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError#init",
      "line": 31
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError%23init",
      "anchor": "api-OrientDBError%23init"
    },
    "uid": "api/OrientDBError#init",
    "indices": {
      "#init": 1,
      "OrientDBError#init": 2
    }
  },
  "api/OrientDBError.inherit": {
    "id": ".inherit",
    "title": "OrientDBError.inherit",
    "summary": "Inherit from the custom error class.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
    "properties": {
      "id": "OrientDBError.inherit",
      "description": "<p>Inherit from the custom error class.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Function} init The init function, should have a name.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "init",
            "description": "<p>The init function, should have a name.</p>\n"
          },
          "line": 40
        },
        {
          "type": "return",
          "string": "{Function}      The descendant error class.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "description": "<p>The descendant error class.</p>\n"
          },
          "line": 40
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "init"
          }
        ],
        "symbol": "."
      },
      "receiver": "OrientDBError",
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "inherit",
      "filePath": "/lib/errors/base.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/errors/base.js",
      "isModule": false,
      "aliases": [],
      "path": "OrientDBError.inherit",
      "line": 40
    },
    "type": "DocumentEntity",
    "parentNode": "api/OrientDBError",
    "meta": {
      "href": "/api/OrientDBError.html#api-OrientDBError.inherit",
      "anchor": "api-OrientDBError.inherit"
    },
    "uid": "api/OrientDBError.inherit",
    "indices": {
      ".inherit": 1,
      "OrientDBError.inherit": 2
    }
  },
  "api/Migration": {
    "id": "Migration",
    "title": "Migration",
    "summary": "The migration constructor.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
    "symbol": "",
    "properties": {
      "id": "Migration",
      "description": "\n    <h1>\n      Migrations\n    </h1>\n  <p>The migration constructor.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the migration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the migration.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "Migration",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Migration",
      "line": 14
    },
    "documents": [],
    "entities": [
      "api/Migration#configure",
      "api/Migration#up",
      "api/Migration#down"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Migration.html",
      "anchor": "api-Migration",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
        "lastCommittedAt": 1398351382,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/Migration",
    "indices": {
      "Migration": 1
    }
  },
  "api/Migration#configure": {
    "id": "#configure",
    "title": "Migration#configure",
    "summary": "Configure the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#configure",
      "description": "<p>Configure the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}    config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 35
        },
        {
          "type": "return",
          "string": "{Migration}        The migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Migration</a>"
            ],
            "description": "<p>The migration instance.</p>\n"
          },
          "line": 35
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 45,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#configure",
      "line": 35
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration%23configure",
      "anchor": "api-Migration%23configure"
    },
    "uid": "api/Migration#configure",
    "indices": {
      "#configure": 1,
      "Migration#configure": 2
    }
  },
  "api/Migration#up": {
    "id": "#up",
    "title": "Migration#up",
    "summary": "Perform the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#up",
      "description": "<p>Perform the migration.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 53
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 2
        }
      },
      "name": "up",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#up",
      "line": 53
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration%23up",
      "anchor": "api-Migration%23up"
    },
    "uid": "api/Migration#up",
    "indices": {
      "#up": 1,
      "Migration#up": 2
    }
  },
  "api/Migration#down": {
    "id": "#down",
    "title": "Migration#down",
    "summary": "Revert the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
    "properties": {
      "id": "Migration#down",
      "description": "<p>Revert the migration.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 63
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Migration",
      "loc": {
        "start": {
          "line": 63,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 2
        }
      },
      "name": "down",
      "filePath": "/lib/migration/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Migration#down",
      "line": 63
    },
    "type": "DocumentEntity",
    "parentNode": "api/Migration",
    "meta": {
      "href": "/api/Migration.html#api-Migration%23down",
      "anchor": "api-Migration%23down"
    },
    "uid": "api/Migration#down",
    "indices": {
      "#down": 1,
      "Migration#down": 2
    }
  },
  "api/MigrationManager": {
    "id": "MigrationManager",
    "title": "MigrationManager",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "symbol": "",
    "properties": {
      "id": "MigrationManager",
      "description": "\n    <h1>\n      Migration Manager\n    </h1>\n  ",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the migration manager.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the migration manager.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "name": "MigrationManager",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": true,
      "aliases": [],
      "path": "MigrationManager",
      "line": 14
    },
    "documents": [],
    "entities": [
      "api/MigrationManager#configure",
      "api/MigrationManager#create",
      "api/MigrationManager#generateMigration",
      "api/MigrationManager#list",
      "api/MigrationManager#listAvailable",
      "api/MigrationManager#ensureStructure",
      "api/MigrationManager#listApplied",
      "api/MigrationManager#up",
      "api/MigrationManager#down",
      "api/MigrationManager#loadMigration",
      "api/MigrationManager#applyMigration",
      "api/MigrationManager#revertMigration"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/MigrationManager.html",
      "anchor": "api-MigrationManager",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
        "lastCommittedAt": 1417004394,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/MigrationManager",
    "indices": {
      "MigrationManager": 1
    }
  },
  "api/MigrationManager#configure": {
    "id": "#configure",
    "title": "MigrationManager#configure",
    "summary": "Configure the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#configure",
      "description": "<p>Configure the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}    config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 34
        },
        {
          "type": "return",
          "string": "{MigrationManager}        The migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"\">MigrationManager</a>"
            ],
            "description": "<p>The migration instance.</p>\n"
          },
          "line": 34
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#configure",
      "line": 34
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23configure",
      "anchor": "api-MigrationManager%23configure"
    },
    "uid": "api/MigrationManager#configure",
    "indices": {
      "#configure": 1,
      "MigrationManager#configure": 2
    }
  },
  "api/MigrationManager#create": {
    "id": "#create",
    "title": "MigrationManager#create",
    "summary": "Create a new migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#create",
      "description": "<p>Create a new migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config  The name or configuration for the new migration.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The name or configuration for the new migration.</p>\n"
          },
          "line": 52
        },
        {
          "type": "promise",
          "string": "{String} The full path to the created migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 52
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#create",
      "line": 52
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23create",
      "anchor": "api-MigrationManager%23create"
    },
    "uid": "api/MigrationManager#create",
    "indices": {
      "#create": 1,
      "MigrationManager#create": 2
    }
  },
  "api/MigrationManager#generateMigration": {
    "id": "#generateMigration",
    "title": "MigrationManager#generateMigration",
    "summary": "Generate the content for a migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#generateMigration",
      "description": "<p>Generate the content for a migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration object.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration object.</p>\n"
          },
          "line": 83
        },
        {
          "type": "return",
          "string": "{String}        The generated JavaScript source code.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The generated JavaScript source code.</p>\n"
          },
          "line": 83
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 88,
          "column": 2
        }
      },
      "name": "generateMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#generateMigration",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23generateMigration",
      "anchor": "api-MigrationManager%23generateMigration"
    },
    "uid": "api/MigrationManager#generateMigration",
    "indices": {
      "#generateMigration": 1,
      "MigrationManager#generateMigration": 2
    }
  },
  "api/MigrationManager#list": {
    "id": "#list",
    "title": "MigrationManager#list",
    "summary": "List the migrations that have not yet been applied.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#list",
      "description": "<p>List the migrations that have not yet been applied.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{String[]} An array of migration names",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 96
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#list",
      "line": 96
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23list",
      "anchor": "api-MigrationManager%23list"
    },
    "uid": "api/MigrationManager#list",
    "indices": {
      "#list": 1,
      "MigrationManager#list": 2
    }
  },
  "api/MigrationManager#listAvailable": {
    "id": "#listAvailable",
    "title": "MigrationManager#listAvailable",
    "summary": "List all the available migrations.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#listAvailable",
      "description": "<p>List all the available migrations.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{String[]} The names of the available migrations.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 138
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 147,
          "column": 2
        }
      },
      "name": "listAvailable",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#listAvailable",
      "line": 138
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23listAvailable",
      "anchor": "api-MigrationManager%23listAvailable"
    },
    "uid": "api/MigrationManager#listAvailable",
    "indices": {
      "#listAvailable": 1,
      "MigrationManager#listAvailable": 2
    }
  },
  "api/MigrationManager#ensureStructure": {
    "id": "#ensureStructure",
    "title": "MigrationManager#ensureStructure",
    "summary": "Ensure the migration class exists.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#ensureStructure",
      "description": "<p>Ensure the migration class exists.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{MigrationManager} The manager instance with intact structure.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 154
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 154,
          "column": 0
        },
        "end": {
          "line": 174,
          "column": 2
        }
      },
      "name": "ensureStructure",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#ensureStructure",
      "line": 154
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23ensureStructure",
      "anchor": "api-MigrationManager%23ensureStructure"
    },
    "uid": "api/MigrationManager#ensureStructure",
    "indices": {
      "#ensureStructure": 1,
      "MigrationManager#ensureStructure": 2
    }
  },
  "api/MigrationManager#listApplied": {
    "id": "#listApplied",
    "title": "MigrationManager#listApplied",
    "summary": "Retrieve a list of applied migrations.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#listApplied",
      "description": "<p>Retrieve a list of applied migrations.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{Object[]} The applied migrations.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 181
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 181,
          "column": 0
        },
        "end": {
          "line": 187,
          "column": 2
        }
      },
      "name": "listApplied",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#listApplied",
      "line": 181
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23listApplied",
      "anchor": "api-MigrationManager%23listApplied"
    },
    "uid": "api/MigrationManager#listApplied",
    "indices": {
      "#listApplied": 1,
      "MigrationManager#listApplied": 2
    }
  },
  "api/MigrationManager#up": {
    "id": "#up",
    "title": "MigrationManager#up",
    "summary": "Perform the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#up",
      "description": "<p>Perform the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} limit The maximum number of migrations to apply, if any.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of migrations to apply, if any.</p>\n"
          },
          "line": 196
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 196
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 196,
          "column": 0
        },
        "end": {
          "line": 214,
          "column": 2
        }
      },
      "name": "up",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#up",
      "line": 196
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23up",
      "anchor": "api-MigrationManager%23up"
    },
    "uid": "api/MigrationManager#up",
    "indices": {
      "#up": 1,
      "MigrationManager#up": 2
    }
  },
  "api/MigrationManager#down": {
    "id": "#down",
    "title": "MigrationManager#down",
    "summary": "Revert the migration.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#down",
      "description": "<p>Revert the migration.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} limit The maximum number of migrations to revert, if any.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "limit",
            "description": "<p>The maximum number of migrations to revert, if any.</p>\n"
          },
          "line": 223
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 223
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "limit"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 223,
          "column": 0
        },
        "end": {
          "line": 248,
          "column": 2
        }
      },
      "name": "down",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#down",
      "line": 223
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23down",
      "anchor": "api-MigrationManager%23down"
    },
    "uid": "api/MigrationManager#down",
    "indices": {
      "#down": 1,
      "MigrationManager#down": 2
    }
  },
  "api/MigrationManager#loadMigration": {
    "id": "#loadMigration",
    "title": "MigrationManager#loadMigration",
    "summary": "Load the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#loadMigration",
      "description": "<p>Load the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}    name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 257
        },
        {
          "type": "return",
          "string": "{Migration}      The loaded migration instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Migration.html\">Migration</a>"
            ],
            "description": "<p>The loaded migration instance.</p>\n"
          },
          "line": 257
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 257,
          "column": 0
        },
        "end": {
          "line": 260,
          "column": 2
        }
      },
      "name": "loadMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#loadMigration",
      "line": 257
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23loadMigration",
      "anchor": "api-MigrationManager%23loadMigration"
    },
    "uid": "api/MigrationManager#loadMigration",
    "indices": {
      "#loadMigration": 1,
      "MigrationManager#loadMigration": 2
    }
  },
  "api/MigrationManager#applyMigration": {
    "id": "#applyMigration",
    "title": "MigrationManager#applyMigration",
    "summary": "Apply the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#applyMigration",
      "description": "<p>Apply the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 268
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 268
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 268,
          "column": 0
        },
        "end": {
          "line": 282,
          "column": 2
        }
      },
      "name": "applyMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#applyMigration",
      "line": 268
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23applyMigration",
      "anchor": "api-MigrationManager%23applyMigration"
    },
    "uid": "api/MigrationManager#applyMigration",
    "indices": {
      "#applyMigration": 1,
      "MigrationManager#applyMigration": 2
    }
  },
  "api/MigrationManager#revertMigration": {
    "id": "#revertMigration",
    "title": "MigrationManager#revertMigration",
    "summary": "Revert the migration with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
    "properties": {
      "id": "MigrationManager#revertMigration",
      "description": "<p>Revert the migration with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name The name of the migation.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The name of the migation.</p>\n"
          },
          "line": 291
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the migration.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 291
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          }
        ],
        "symbol": "#"
      },
      "receiver": "MigrationManager",
      "loc": {
        "start": {
          "line": 291,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 2
        }
      },
      "name": "revertMigration",
      "filePath": "/lib/migration/manager.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/migration/manager.js",
      "isModule": false,
      "aliases": [],
      "path": "MigrationManager#revertMigration",
      "line": 291
    },
    "type": "DocumentEntity",
    "parentNode": "api/MigrationManager",
    "meta": {
      "href": "/api/MigrationManager.html#api-MigrationManager%23revertMigration",
      "anchor": "api-MigrationManager%23revertMigration"
    },
    "uid": "api/MigrationManager#revertMigration",
    "indices": {
      "#revertMigration": 1,
      "MigrationManager#revertMigration": 2
    }
  },
  "api/Pool": {
    "id": "Pool",
    "title": "Pool",
    "summary": "Pool Constructor",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "symbol": "",
    "properties": {
      "id": "Pool",
      "description": "<p>Pool Constructor</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "config",
          "typeInfo": {
            "types": [],
            "name": "config",
            "description": null
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "name": "Pool",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Pool",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Pool#acquire",
      "api/Pool#getPoolSize",
      "api/Pool#getMaxPoolSize",
      "api/Pool#getAvailableResources",
      "api/Pool#release"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Pool.html",
      "anchor": "api-Pool",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "maggiolo00@gmail.com": "maggiolo00",
          "not.committed.yet": "Not Committed Yet"
        }
      }
    },
    "uid": "api/Pool",
    "indices": {
      "Pool": 1
    }
  },
  "api/Pool#acquire": {
    "id": "#acquire",
    "title": "Pool#acquire",
    "summary": "Request a new db.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#acquire",
      "description": "<p>Request a new db.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Promise} A promise that returns the db if acquired or An arror if rejected",
          "typeInfo": {
            "types": [
              "Promise"
            ],
            "description": "<p>A promise that returns the db if acquired or An arror if rejected</p>\n"
          },
          "line": 56
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 2
        }
      },
      "name": "acquire",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#acquire",
      "line": 56
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool%23acquire",
      "anchor": "api-Pool%23acquire"
    },
    "uid": "api/Pool#acquire",
    "indices": {
      "#acquire": 1,
      "Pool#acquire": 2
    }
  },
  "api/Pool#getPoolSize": {
    "id": "#getPoolSize",
    "title": "Pool#getPoolSize",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getPoolSize",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{number}",
          "typeInfo": {
            "types": [
              "number"
            ],
            "name": null,
            "description": null
          },
          "line": 113
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 2
        }
      },
      "name": "getPoolSize",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getPoolSize",
      "line": 113
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool%23getPoolSize",
      "anchor": "api-Pool%23getPoolSize"
    },
    "uid": "api/Pool#getPoolSize",
    "indices": {
      "#getPoolSize": 1,
      "Pool#getPoolSize": 2
    }
  },
  "api/Pool#getMaxPoolSize": {
    "id": "#getMaxPoolSize",
    "title": "Pool#getMaxPoolSize",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getMaxPoolSize",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{number|*}",
          "typeInfo": {
            "types": [
              "number",
              "*"
            ],
            "name": null,
            "description": null
          },
          "line": 121
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 2
        }
      },
      "name": "getMaxPoolSize",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getMaxPoolSize",
      "line": 121
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool%23getMaxPoolSize",
      "anchor": "api-Pool%23getMaxPoolSize"
    },
    "uid": "api/Pool#getMaxPoolSize",
    "indices": {
      "#getMaxPoolSize": 1,
      "Pool#getMaxPoolSize": 2
    }
  },
  "api/Pool#getAvailableResources": {
    "id": "#getAvailableResources",
    "title": "Pool#getAvailableResources",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#getAvailableResources",
      "description": "",
      "tags": [
        {
          "type": "return",
          "string": "{*|Function|o}",
          "typeInfo": {
            "types": [
              "*",
              "Function",
              "o"
            ],
            "name": null,
            "description": null
          },
          "line": 129
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 129,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 2
        }
      },
      "name": "getAvailableResources",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#getAvailableResources",
      "line": 129
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool%23getAvailableResources",
      "anchor": "api-Pool%23getAvailableResources"
    },
    "uid": "api/Pool#getAvailableResources",
    "indices": {
      "#getAvailableResources": 1,
      "Pool#getAvailableResources": 2
    }
  },
  "api/Pool#release": {
    "id": "#release",
    "title": "Pool#release",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
    "properties": {
      "id": "Pool#release",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{ODatabase} db",
          "typeInfo": {
            "types": [
              "<a href=\"Database/ODatabase.html\">ODatabase</a>"
            ],
            "name": "db",
            "description": null
          },
          "line": 136
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "db"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Pool",
      "loc": {
        "start": {
          "line": 136,
          "column": 0
        },
        "end": {
          "line": 152,
          "column": 2
        }
      },
      "name": "release",
      "filePath": "/lib/pool/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/pool/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Pool#release",
      "line": 136
    },
    "type": "DocumentEntity",
    "parentNode": "api/Pool",
    "meta": {
      "href": "/api/Pool.html#api-Pool%23release",
      "anchor": "api-Pool%23release"
    },
    "uid": "api/Pool#release",
    "indices": {
      "#release": 1,
      "Pool#release": 2
    }
  },
  "api/RecordID": {
    "id": "RecordID",
    "title": "RecordID",
    "summary": "Represents a Record ID in a document.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "symbol": "",
    "properties": {
      "id": "RecordID",
      "description": "<p>Represents a Record ID in a document.</p>\n<p>Used to differentiate between actual record ids and strings that merely look like them.\nWithout this, it is impossible to differentiate between <code>&#39;#1:12&#39;</code> the string and <code>#1:12</code> the record id.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object} input The input to parse.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object"
            ],
            "name": "input",
            "description": "<p>The input to parse.</p>\n"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>convert a string to a RecordID instance \n    var rid = RecordID(&#39;#1:1&#39;);\n    console.log(rid); // =&gt; {cluster: 1, position: 1}\n    console.log(&#39;ID:&#39; + rid); // =&gt; &quot;ID:#1:1&quot;</p>\n",
          "typeInfo": {
            "types": [],
            "name": "convert a string to a RecordID instance",
            "description": "<pre><code>var rid = RecordID(&#39;#1:1&#39;);\nconsole.log(rid); // =&gt; {cluster: 1, position: 1}\nconsole.log(&#39;ID:&#39; + rid); // =&gt; &quot;ID:#1:1&quot;\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>convert an array of strings to an an array of record ids \n    var rids = RecordID([&#39;#1:1&#39;, &#39;#1:2&#39;, &#39;#1:3&#39;]);\n    console.log(rids); // =&gt; [{cluster: 1, position: 1}, {cluster: 1, position: 2, {cluster: 1, position: 3}]\n    console.log(rids.join(&#39;, &#39;)); // &quot;#1:1, #1:2, #1:3&quot;</p>\n",
          "typeInfo": {
            "types": [],
            "name": "convert an array of strings to an an array of record ids",
            "description": "<pre><code>var rids = RecordID([&#39;#1:1&#39;, &#39;#1:2&#39;, &#39;#1:3&#39;]);\nconsole.log(rids); // =&gt; [{cluster: 1, position: 1}, {cluster: 1, position: 2, {cluster: 1, position: 3}]\nconsole.log(rids.join(&#39;, &#39;)); // &quot;#1:1, #1:2, #1:3&quot;\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "example",
          "string": "<p>check that a RID is valid \n    RecordID.isValid(&#39;#1:12&#39;); // =&gt; true\n    RecordID.isValid(&#39;not a record id&#39;); // =&gt; false</p>\n",
          "typeInfo": {
            "types": [],
            "name": "check that a RID is valid",
            "description": "<pre><code>RecordID.isValid(&#39;#1:12&#39;); // =&gt; true\nRecordID.isValid(&#39;not a record id&#39;); // =&gt; false\n</code></pre>"
          },
          "line": 30
        },
        {
          "type": "alias",
          "string": "",
          "alias": "RID",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 30
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "name": "RecordID",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": true,
      "aliases": [
        "RID"
      ],
      "path": "RecordID",
      "line": 30
    },
    "documents": [],
    "entities": [
      "api/RecordID#isValid",
      "api/RecordID#equals",
      "api/RecordID.parse",
      "api/RecordID.isValid",
      "api/RecordID.toRid"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/RecordID.html",
      "anchor": "api-RecordID",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "not.committed.yet": "Not Committed Yet"
        }
      }
    },
    "uid": "api/RecordID",
    "indices": {
      "RecordID": 1,
      "RID": 1
    }
  },
  "api/RecordID#isValid": {
    "id": "#isValid",
    "title": "RecordID#isValid",
    "summary": "Determine whether the record id is valid.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID#isValid",
      "description": "<p>Determine whether the record id is valid.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Boolean} true if the record id is valid.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>true if the record id is valid.</p>\n"
          },
          "line": 73
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 73,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 2
        }
      },
      "name": "isValid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID#isValid",
      "line": 73
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID%23isValid",
      "anchor": "api-RecordID%23isValid"
    },
    "uid": "api/RecordID#isValid",
    "indices": {
      "#isValid": 1,
      "RecordID#isValid": 2
    }
  },
  "api/RecordID#equals": {
    "id": "#equals",
    "title": "RecordID#equals",
    "summary": "Determine whether the record id is equal to another.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID#equals",
      "description": "<p>Determine whether the record id is equal to another.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|RID} rid  The RID to compare with.",
          "typeInfo": {
            "types": [
              "String",
              "<a href=\"\">RecordID</a>"
            ],
            "name": "rid",
            "description": "<p>The RID to compare with.</p>\n"
          },
          "line": 83
        },
        {
          "type": "return",
          "string": "{Boolean}         If the RID matches, then true.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>If the RID matches, then true.</p>\n"
          },
          "line": 83
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "rid"
          }
        ],
        "symbol": "#"
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 2
        }
      },
      "name": "equals",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID#equals",
      "line": 83
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID%23equals",
      "anchor": "api-RecordID%23equals"
    },
    "uid": "api/RecordID#equals",
    "indices": {
      "#equals": 1,
      "RecordID#equals": 2
    }
  },
  "api/RecordID.parse": {
    "id": ".parse",
    "title": "RecordID.parse",
    "summary": "Parse a record id into a RecordID object.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.parse",
      "description": "<p>Parse a record id into a RecordID object.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object}          input The input to parse.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object"
            ],
            "name": "input",
            "description": "<p>The input to parse.</p>\n"
          },
          "line": 111
        },
        {
          "type": "return",
          "string": "{RecordID|RecordID[]|Boolean}        The parsed RecordID instance(s)\n                                             or false if the record id could not be parsed",
          "typeInfo": {
            "types": [
              "<a href=\"\">RecordID</a>",
              "Array&lt;<a href=\"\">RecordID</a>&gt;",
              "Boolean"
            ],
            "description": "<p>The parsed RecordID instance(s)                                              or false if the record id could not be parsed</p>\n"
          },
          "line": 111
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 2
        }
      },
      "name": "parse",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.parse",
      "line": 111
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.parse",
      "anchor": "api-RecordID.parse"
    },
    "uid": "api/RecordID.parse",
    "indices": {
      ".parse": 1,
      "RecordID.parse": 2
    }
  },
  "api/RecordID.isValid": {
    "id": ".isValid",
    "title": "RecordID.isValid",
    "summary": "Determine whether the given input is a valid record id.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.isValid",
      "description": "<p>Determine whether the given input is a valid record id.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Array|Object|RecordID}  input The record id to check.",
          "typeInfo": {
            "types": [
              "String",
              "Array",
              "Object",
              "<a href=\"\">RecordID</a>"
            ],
            "name": "input",
            "description": "<p>The record id to check.</p>\n"
          },
          "line": 143
        },
        {
          "type": "return",
          "string": "{Boolean}",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "name": null,
            "description": null
          },
          "line": 143
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "input"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 166,
          "column": 2
        }
      },
      "name": "isValid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.isValid",
      "line": 143
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.isValid",
      "anchor": "api-RecordID.isValid"
    },
    "uid": "api/RecordID.isValid",
    "indices": {
      ".isValid": 1,
      "RecordID.isValid": 2
    }
  },
  "api/RecordID.toRid": {
    "id": ".toRid",
    "title": "RecordID.toRid",
    "summary": "Return a record id for a given cluster and position.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
    "properties": {
      "id": "RecordID.toRid",
      "description": "<p>Return a record id for a given cluster and position.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} cluster  The cluster ID.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "cluster",
            "description": "<p>The cluster ID.</p>\n"
          },
          "line": 175
        },
        {
          "type": "param",
          "string": "{Integer} position The position.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "position",
            "description": "<p>The position.</p>\n"
          },
          "line": 175
        },
        {
          "type": "return",
          "string": "{String}           The record id.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "description": "<p>The record id.</p>\n"
          },
          "line": 175
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "cluster"
          },
          {
            "name": "position"
          }
        ],
        "symbol": "."
      },
      "receiver": "RecordID",
      "loc": {
        "start": {
          "line": 175,
          "column": 0
        },
        "end": {
          "line": 177,
          "column": 2
        }
      },
      "name": "toRid",
      "filePath": "/lib/recordid.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/recordid.js",
      "isModule": false,
      "aliases": [],
      "path": "RecordID.toRid",
      "line": 175
    },
    "type": "DocumentEntity",
    "parentNode": "api/RecordID",
    "meta": {
      "href": "/api/RecordID.html#api-RecordID.toRid",
      "anchor": "api-RecordID.toRid"
    },
    "uid": "api/RecordID.toRid",
    "indices": {
      ".toRid": 1,
      "RecordID.toRid": 2
    }
  },
  "api/Server": {
    "id": "Server",
    "title": "Server",
    "summary": "Represents a connection to an orientdb server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "symbol": "",
    "properties": {
      "id": "Server",
      "description": "<p>Represents a connection to an orientdb server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} options The server URL, or configuration object",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "options",
            "description": "<p>The server URL, or configuration object</p>\n"
          },
          "line": 20
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "options"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 1
        }
      },
      "name": "Server",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Server",
      "line": 20
    },
    "documents": [],
    "entities": [
      "api/Server#configure",
      "api/Server#configureTransport",
      "api/Server#configureLogger",
      "api/Server#init",
      "api/Server#send",
      "api/Server#close",
      "api/Server#use",
      "api/Server#create",
      "api/Server#drop",
      "api/Server#list",
      "api/Server#exists",
      "api/Server#freeze",
      "api/Server#release"
    ],
    "type": "Document",
    "parentNode": "api",
    "meta": {
      "href": "/api/Server.html",
      "anchor": "api-Server",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
        "lastCommittedAt": 1462972913,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "maggiolo00@gmail.com": "maggiolo00",
          "not.committed.yet": "Not Committed Yet",
          "rschmukler@gmail.com": "Ryan Schmukler",
          "radusamson@ymail.com": "Samson Radu"
        }
      }
    },
    "uid": "api/Server",
    "indices": {
      "Server": 1
    }
  },
  "api/Server#configure": {
    "id": "#configure",
    "title": "Server#configure",
    "summary": "Configure the server instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configure",
      "description": "<p>Configure the server instance.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the server.</p>\n"
          },
          "line": 54
        },
        {
          "type": "return",
          "string": "{Server}            The configured server object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The configured server object.</p>\n"
          },
          "line": 54
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configure",
      "line": 54
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23configure",
      "anchor": "api-Server%23configure"
    },
    "uid": "api/Server#configure",
    "indices": {
      "#configure": 1,
      "Server#configure": 2
    }
  },
  "api/Server#configureTransport": {
    "id": "#configureTransport",
    "title": "Server#configureTransport",
    "summary": "Configure the transport for the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configureTransport",
      "description": "<p>Configure the transport for the server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The server config.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The server config.</p>\n"
          },
          "line": 67
        },
        {
          "type": "return",
          "string": "{Server}        The configured server object.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The configured server object.</p>\n"
          },
          "line": 67
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 2
        }
      },
      "name": "configureTransport",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configureTransport",
      "line": 67
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23configureTransport",
      "anchor": "api-Server%23configureTransport"
    },
    "uid": "api/Server#configureTransport",
    "indices": {
      "#configureTransport": 1,
      "Server#configureTransport": 2
    }
  },
  "api/Server#configureLogger": {
    "id": "#configureLogger",
    "title": "Server#configureLogger",
    "summary": "Configure the logger for the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#configureLogger",
      "description": "<p>Configure the logger for the server.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 86
        },
        {
          "type": "return",
          "string": "{Server}        The server instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>The server instance with the configured logger.</p>\n"
          },
          "line": 86
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 86,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#configureLogger",
      "line": 86
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23configureLogger",
      "anchor": "api-Server%23configureLogger"
    },
    "uid": "api/Server#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "Server#configureLogger": 2
    }
  },
  "api/Server#init": {
    "id": "#init",
    "title": "Server#init",
    "summary": "Initialize the server instance.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#init",
      "description": "<p>Initialize the server instance.</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 100,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 2
        }
      },
      "name": "init",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#init",
      "line": 100
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23init",
      "anchor": "api-Server%23init"
    },
    "uid": "api/Server#init",
    "indices": {
      "#init": 1,
      "Server#init": 2
    }
  },
  "api/Server#send": {
    "id": "#send",
    "title": "Server#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 111
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 111
        },
        {
          "type": "return",
          "string": "{Promise.<Mixed>}   The result of the operation.",
          "typeInfo": {
            "types": [
              "Promise.&lt;Mixed&gt;"
            ],
            "description": "<p>The result of the operation.</p>\n"
          },
          "line": 111
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#send",
      "line": 111
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23send",
      "anchor": "api-Server%23send"
    },
    "uid": "api/Server#send",
    "indices": {
      "#send": 1,
      "Server#send": 2
    }
  },
  "api/Server#close": {
    "id": "#close",
    "title": "Server#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Server} the disconnected server instance",
          "typeInfo": {
            "types": [
              "<a href=\"\">Server</a>"
            ],
            "description": "<p>the disconnected server instance</p>\n"
          },
          "line": 120
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 120,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#close",
      "line": 120
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23close",
      "anchor": "api-Server%23close"
    },
    "uid": "api/Server#close",
    "indices": {
      "#close": 1,
      "Server#close": 2
    }
  },
  "api/Server#use": {
    "id": "#use",
    "title": "Server#use",
    "summary": "Use the database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#use",
      "description": "<p>Use the database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name, or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name, or configuration object.</p>\n"
          },
          "line": 133
        },
        {
          "type": "return",
          "string": "{Db}                   The database instance.",
          "typeInfo": {
            "types": [
              "<a href=\"Database/Db.html\">Database.Db</a>"
            ],
            "description": "<p>The database instance.</p>\n"
          },
          "line": 133
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 133,
          "column": 0
        },
        "end": {
          "line": 165,
          "column": 2
        }
      },
      "name": "use",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#use",
      "line": 133
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23use",
      "anchor": "api-Server%23use"
    },
    "uid": "api/Server#use",
    "indices": {
      "#use": 1,
      "Server#use": 2
    }
  },
  "api/Server#create": {
    "id": "#create",
    "title": "Server#create",
    "summary": "Create a database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#create",
      "description": "<p>Create a database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name or configuration object.</p>\n"
          },
          "line": 173
        },
        {
          "type": "promise",
          "string": "{Db} The database instance",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 173
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 173,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 2
        }
      },
      "name": "create",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#create",
      "line": 173
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23create",
      "anchor": "api-Server%23create"
    },
    "uid": "api/Server#create",
    "indices": {
      "#create": 1,
      "Server#create": 2
    }
  },
  "api/Server#drop": {
    "id": "#drop",
    "title": "Server#drop",
    "summary": "Destroy a database with the given name / config.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#drop",
      "description": "<p>Destroy a database with the given name / config.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String|Object} config The database name or configuration object.",
          "typeInfo": {
            "types": [
              "String",
              "Object"
            ],
            "name": "config",
            "description": "<p>The database name or configuration object.</p>\n"
          },
          "line": 218
        },
        {
          "type": "promise",
          "string": "{Mixed} The server response.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 218
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 240,
          "column": 2
        }
      },
      "name": "drop",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#drop",
      "line": 218
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23drop",
      "anchor": "api-Server%23drop"
    },
    "uid": "api/Server#drop",
    "indices": {
      "#drop": 1,
      "Server#drop": 2
    }
  },
  "api/Server#list": {
    "id": "#list",
    "title": "Server#list",
    "summary": "List all the databases on the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#list",
      "description": "<p>List all the databases on the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Db[]}\n        An array of databases.",
          "typeInfo": {
            "types": [
              "Array&lt;<a href=\"Database/Db.html\">Database.Db</a>&gt;"
            ],
            "name": null,
            "description": "<p>An array of databases.</p>\n"
          },
          "line": 248
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 248,
          "column": 0
        },
        "end": {
          "line": 269,
          "column": 2
        }
      },
      "name": "list",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#list",
      "line": 248
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23list",
      "anchor": "api-Server%23list"
    },
    "uid": "api/Server#list",
    "indices": {
      "#list": 1,
      "Server#list": 2
    }
  },
  "api/Server#exists": {
    "id": "#exists",
    "title": "Server#exists",
    "summary": "Determine whether a database exists with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#exists",
      "description": "<p>Determine whether a database exists with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 278
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 278
        },
        {
          "type": "promise",
          "string": "{Boolean} true if the database exists.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 278
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 278,
          "column": 0
        },
        "end": {
          "line": 293,
          "column": 2
        }
      },
      "name": "exists",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#exists",
      "line": 278
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23exists",
      "anchor": "api-Server%23exists"
    },
    "uid": "api/Server#exists",
    "indices": {
      "#exists": 1,
      "Server#exists": 2
    }
  },
  "api/Server#freeze": {
    "id": "#freeze",
    "title": "Server#freeze",
    "summary": "Freeze the database with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#freeze",
      "description": "<p>Freeze the database with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 305
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 305
        },
        {
          "type": "return",
          "string": "{Object}              The response from the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The response from the server.</p>\n"
          },
          "line": 305
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 305,
          "column": 0
        },
        "end": {
          "line": 321,
          "column": 2
        }
      },
      "name": "freeze",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#freeze",
      "line": 305
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23freeze",
      "anchor": "api-Server%23freeze"
    },
    "uid": "api/Server#freeze",
    "indices": {
      "#freeze": 1,
      "Server#freeze": 2
    }
  },
  "api/Server#release": {
    "id": "#release",
    "title": "Server#release",
    "summary": "Release the database with the given name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
    "properties": {
      "id": "Server#release",
      "description": "<p>Release the database with the given name.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} name        The database name.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "name",
            "description": "<p>The database name.</p>\n"
          },
          "line": 331
        },
        {
          "type": "param",
          "string": "{String} storageType The storage type, defaults to `plocal`.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "storageType",
            "description": "<p>The storage type, defaults to <code>plocal</code>.</p>\n"
          },
          "line": 331
        },
        {
          "type": "return",
          "string": "{Object}              The response from the server.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "description": "<p>The response from the server.</p>\n"
          },
          "line": 331
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "name"
          },
          {
            "name": "storageType"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Server",
      "loc": {
        "start": {
          "line": 331,
          "column": 0
        },
        "end": {
          "line": 348,
          "column": 2
        }
      },
      "name": "release",
      "filePath": "/lib/server/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/server/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Server#release",
      "line": 331
    },
    "type": "DocumentEntity",
    "parentNode": "api/Server",
    "meta": {
      "href": "/api/Server.html#api-Server%23release",
      "anchor": "api-Server%23release"
    },
    "uid": "api/Server#release",
    "indices": {
      "#release": 1,
      "Server#release": 2
    }
  },
  "api/Transports.Binary": {
    "id": "Transports.Binary",
    "title": "Transports.Binary",
    "symbol": ".",
    "documents": [
      "api/Transports.Binary.BinaryTransport",
      "api/Transports.Binary.Operation",
      "api/Transports.Binary.Operation",
      "api/Transports.Binary.Operation"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Transports.Binary.html",
      "anchor": "api-Transports.Binary"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Transports.Binary",
    "indices": {
      "Transports.Binary": 1
    }
  },
  "api/Transports.Binary.BinaryTransport": {
    "id": "BinaryTransport",
    "title": "Transports.Binary.BinaryTransport",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Binary.BinaryTransport",
      "namespace": "Transports.Binary",
      "description": "",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the transport.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the transport.</p>\n"
          },
          "line": 16
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "name": "BinaryTransport",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport",
      "line": 16
    },
    "documents": [],
    "entities": [
      "api/Transports.Binary.BinaryTransport#configure",
      "api/Transports.Binary.BinaryTransport#configureLogger",
      "api/Transports.Binary.BinaryTransport#configureConnection",
      "api/Transports.Binary.BinaryTransport#configurePool",
      "api/Transports.Binary.BinaryTransport#connect",
      "api/Transports.Binary.BinaryTransport#shiftServer",
      "api/Transports.Binary.BinaryTransport#send",
      "api/Transports.Binary.BinaryTransport#close"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Binary",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html",
      "anchor": "api-Transports.Binary.BinaryTransport",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
        "lastCommittedAt": 1454333867,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "maggiolo00@gmail.com": "maggiolo00",
          "rschmukler@gmail.com": "Ryan Schmukler"
        }
      }
    },
    "uid": "api/Transports.Binary.BinaryTransport",
    "indices": {
      "BinaryTransport": 1,
      "Transports.Binary.BinaryTransport": 2
    }
  },
  "api/Transports.Binary.BinaryTransport#configure": {
    "id": "#configure",
    "title": "Transports.Binary.BinaryTransport#configure",
    "summary": "Configure the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configure",
      "description": "<p>Configure the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The transport configuration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The transport configuration.</p>\n"
          },
          "line": 36
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configure",
      "line": 36
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23configure",
      "anchor": "api-Transports.Binary.BinaryTransport%23configure"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configure",
    "indices": {
      "#configure": 1,
      "BinaryTransport#configure": 2,
      "Transports.Binary.BinaryTransport#configure": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configureLogger": {
    "id": "#configureLogger",
    "title": "Transports.Binary.BinaryTransport#configureLogger",
    "summary": "Configure the logger for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configureLogger",
      "description": "<p>Configure the logger for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config  The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 74
        },
        {
          "type": "return",
          "string": "{BinaryTransport}         The transport instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured logger.</p>\n"
          },
          "line": 74
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 74,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configureLogger",
      "line": 74
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23configureLogger",
      "anchor": "api-Transports.Binary.BinaryTransport%23configureLogger"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "BinaryTransport#configureLogger": 2,
      "Transports.Binary.BinaryTransport#configureLogger": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configureConnection": {
    "id": "#configureConnection",
    "title": "Transports.Binary.BinaryTransport#configureConnection",
    "summary": "Configure a connection for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configureConnection",
      "description": "<p>Configure a connection for the transport.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{BinaryTransport} The transport instance with the configured connection.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured connection.</p>\n"
          },
          "line": 114
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 114,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 2
        }
      },
      "name": "configureConnection",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configureConnection",
      "line": 114
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23configureConnection",
      "anchor": "api-Transports.Binary.BinaryTransport%23configureConnection"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configureConnection",
    "indices": {
      "#configureConnection": 1,
      "BinaryTransport#configureConnection": 2,
      "Transports.Binary.BinaryTransport#configureConnection": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#configurePool": {
    "id": "#configurePool",
    "title": "Transports.Binary.BinaryTransport#configurePool",
    "summary": "Configure a connection pool for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#configurePool",
      "description": "<p>Configure a connection pool for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config The connection pool config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The connection pool config</p>\n"
          },
          "line": 148
        },
        {
          "type": "return",
          "string": "{BinaryTransport}        The transport instance with the configured connection pool.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>The transport instance with the configured connection pool.</p>\n"
          },
          "line": 148
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 148,
          "column": 0
        },
        "end": {
          "line": 161,
          "column": 2
        }
      },
      "name": "configurePool",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#configurePool",
      "line": 148
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23configurePool",
      "anchor": "api-Transports.Binary.BinaryTransport%23configurePool"
    },
    "uid": "api/Transports.Binary.BinaryTransport#configurePool",
    "indices": {
      "#configurePool": 1,
      "BinaryTransport#configurePool": 2,
      "Transports.Binary.BinaryTransport#configurePool": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#connect": {
    "id": "#connect",
    "title": "Transports.Binary.BinaryTransport#connect",
    "summary": "Connect to the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#connect",
      "description": "<p>Connect to the server.</p>\n",
      "tags": [
        {
          "type": "promise",
          "string": "{BinaryTransport} The connected transport instance.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 169
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 169,
          "column": 0
        },
        "end": {
          "line": 229,
          "column": 2
        }
      },
      "name": "connect",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#connect",
      "line": 169
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23connect",
      "anchor": "api-Transports.Binary.BinaryTransport%23connect"
    },
    "uid": "api/Transports.Binary.BinaryTransport#connect",
    "indices": {
      "#connect": 1,
      "BinaryTransport#connect": 2,
      "Transports.Binary.BinaryTransport#connect": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#shiftServer": {
    "id": "#shiftServer",
    "title": "Transports.Binary.BinaryTransport#shiftServer",
    "summary": "Fetch the next available server",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#shiftServer",
      "description": "<p>Fetch the next available server</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 233,
          "column": 0
        },
        "end": {
          "line": 245,
          "column": 2
        }
      },
      "name": "shiftServer",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#shiftServer",
      "line": 233
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23shiftServer",
      "anchor": "api-Transports.Binary.BinaryTransport%23shiftServer"
    },
    "uid": "api/Transports.Binary.BinaryTransport#shiftServer",
    "indices": {
      "#shiftServer": 1,
      "BinaryTransport#shiftServer": 2,
      "Transports.Binary.BinaryTransport#shiftServer": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#send": {
    "id": "#send",
    "title": "Transports.Binary.BinaryTransport#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 275
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 275
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 275
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 275,
          "column": 0
        },
        "end": {
          "line": 306,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#send",
      "line": 275
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23send",
      "anchor": "api-Transports.Binary.BinaryTransport%23send"
    },
    "uid": "api/Transports.Binary.BinaryTransport#send",
    "indices": {
      "#send": 1,
      "BinaryTransport#send": 2,
      "Transports.Binary.BinaryTransport#send": 3
    }
  },
  "api/Transports.Binary.BinaryTransport#close": {
    "id": "#close",
    "title": "Transports.Binary.BinaryTransport#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
    "properties": {
      "id": "Transports.Binary.BinaryTransport#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{BinaryTransport} the disconnected transport instance",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Binary.BinaryTransport</a>"
            ],
            "description": "<p>the disconnected transport instance</p>\n"
          },
          "line": 314
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.BinaryTransport",
      "loc": {
        "start": {
          "line": 314,
          "column": 0
        },
        "end": {
          "line": 318,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/transport/binary/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.BinaryTransport#close",
      "line": 314
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.BinaryTransport",
    "meta": {
      "href": "/api/Transports.Binary/BinaryTransport.html#api-Transports.Binary.BinaryTransport%23close",
      "anchor": "api-Transports.Binary.BinaryTransport%23close"
    },
    "uid": "api/Transports.Binary.BinaryTransport#close",
    "indices": {
      "#close": 1,
      "BinaryTransport#close": 2,
      "Transports.Binary.BinaryTransport#close": 3
    }
  },
  "api/Transports.Binary.Operation": {
    "id": "Operation",
    "title": "Transports.Binary.Operation",
    "summary": "The base class for operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Binary.Operation",
      "namespace": "Transports.Binary",
      "description": "\n    <h1>\n      Operations\n    </h1>\n  <p>The base class for operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.</p>\n<p>Each operation should implement the <code>writer()</code> and <code>reader()</code> methods.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} data The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 21
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "data"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 1
        }
      },
      "name": "Operation",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Binary.Operation",
      "line": 21
    },
    "documents": [],
    "entities": [
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData",
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData",
      "api/Transports.Binary.Operation#writer",
      "api/Transports.Binary.Operation#reader",
      "api/Transports.Binary.Operation#buffer",
      "api/Transports.Binary.Operation#writeHeader",
      "api/Transports.Binary.Operation#writeByte",
      "api/Transports.Binary.Operation#writeBoolean",
      "api/Transports.Binary.Operation#writeChar",
      "api/Transports.Binary.Operation#writeInt",
      "api/Transports.Binary.Operation#writeLong",
      "api/Transports.Binary.Operation#writeShort",
      "api/Transports.Binary.Operation#writeBytes",
      "api/Transports.Binary.Operation#writeString",
      "api/Transports.Binary.Operation#readStatus",
      "api/Transports.Binary.Operation#readError",
      "api/Transports.Binary.Operation#readObject",
      "api/Transports.Binary.Operation#consume",
      "api/Transports.Binary.Operation#canRead",
      "api/Transports.Binary.Operation#parseByte",
      "api/Transports.Binary.Operation#parseChar",
      "api/Transports.Binary.Operation#parseBoolean",
      "api/Transports.Binary.Operation#parseShort",
      "api/Transports.Binary.Operation#parseInt",
      "api/Transports.Binary.Operation#parseLong",
      "api/Transports.Binary.Operation#parseBytes",
      "api/Transports.Binary.Operation#parseString",
      "api/Transports.Binary.Operation#parseRecord",
      "api/Transports.Binary.Operation#parseCollection",
      "api/Transports.Binary.Operation#parseArray",
      "api/Transports.Binary.Operation#parseError",
      "api/Transports.Binary.Operation#parsePushedData"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Binary",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html",
      "anchor": "api-Transports.Binary.Operation",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
        "lastCommittedAt": 1452870847,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick",
          "maggiolo00@gmail.com": "maggiolo00",
          "luigi.dellaquila@gmail.com": "Luigi Dell'Aquila"
        }
      }
    },
    "uid": "api/Transports.Binary.Operation",
    "indices": {
      "Operation": 1,
      "Transports.Binary.Operation": 2
    }
  },
  "api/Transports.Binary.Operation#writer": {
    "id": "#writer",
    "title": "Transports.Binary.Operation#writer",
    "summary": "Declares the commands to send to the server.\nChild classes should implement this function.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writer",
      "description": "<p>&lt;p&gt;&lt;p&gt;Declares the commands to send to the server.\nChild classes should implement this function.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 2
        }
      },
      "name": "writer",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writer",
      "line": 51
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writer",
      "anchor": "api-Transports.Binary.Operation%23writer"
    },
    "uid": "api/Transports.Binary.Operation#writer",
    "indices": {
      "#writer": 1,
      "Operation#writer": 2,
      "Transports.Binary.Operation#writer": 3
    }
  },
  "api/Transports.Binary.Operation#reader": {
    "id": "#reader",
    "title": "Transports.Binary.Operation#reader",
    "summary": "Declares the steps required to recieve data for the operation.\nChild classes should implement this function.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#reader",
      "description": "<p>&lt;p&gt;&lt;p&gt;Declares the steps required to recieve data for the operation.\nChild classes should implement this function.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 2
        }
      },
      "name": "reader",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#reader",
      "line": 59
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23reader",
      "anchor": "api-Transports.Binary.Operation%23reader"
    },
    "uid": "api/Transports.Binary.Operation#reader",
    "indices": {
      "#reader": 1,
      "Operation#reader": 2,
      "Transports.Binary.Operation#reader": 3
    }
  },
  "api/Transports.Binary.Operation#buffer": {
    "id": "#buffer",
    "title": "Transports.Binary.Operation#buffer",
    "summary": "Prepare the buffer for the operation.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#buffer",
      "description": "<p>&lt;p&gt;&lt;p&gt;Prepare the buffer for the operation.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Buffer} The buffer containing the commands to send to the server.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the commands to send to the server.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 68
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 68,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 2
        }
      },
      "name": "buffer",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#buffer",
      "line": 68
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23buffer",
      "anchor": "api-Transports.Binary.Operation%23buffer"
    },
    "uid": "api/Transports.Binary.Operation#buffer",
    "indices": {
      "#buffer": 1,
      "Operation#buffer": 2,
      "Transports.Binary.Operation#buffer": 3
    }
  },
  "api/Transports.Binary.Operation#writeByte": {
    "id": "#writeByte",
    "title": "Transports.Binary.Operation#writeByte",
    "summary": "Write a byte.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeByte",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a byte.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 122
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 122
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 122,
          "column": 0
        },
        "end": {
          "line": 127,
          "column": 2
        }
      },
      "name": "writeByte",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeByte",
      "line": 122
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeByte",
      "anchor": "api-Transports.Binary.Operation%23writeByte"
    },
    "uid": "api/Transports.Binary.Operation#writeByte",
    "indices": {
      "#writeByte": 1,
      "Operation#writeByte": 2,
      "Transports.Binary.Operation#writeByte": 3
    }
  },
  "api/Transports.Binary.Operation#writeBoolean": {
    "id": "#writeBoolean",
    "title": "Transports.Binary.Operation#writeBoolean",
    "summary": "Write a boolean.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeBoolean",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a boolean.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 135
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 135
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 2
        }
      },
      "name": "writeBoolean",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeBoolean",
      "line": 135
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeBoolean",
      "anchor": "api-Transports.Binary.Operation%23writeBoolean"
    },
    "uid": "api/Transports.Binary.Operation#writeBoolean",
    "indices": {
      "#writeBoolean": 1,
      "Operation#writeBoolean": 2,
      "Transports.Binary.Operation#writeBoolean": 3
    }
  },
  "api/Transports.Binary.Operation#writeChar": {
    "id": "#writeChar",
    "title": "Transports.Binary.Operation#writeChar",
    "summary": "Write a single character.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeChar",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a single character.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 149
        },
        {
          "type": "return",
          "string": "{Operation}   The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 149
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 149,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 2
        }
      },
      "name": "writeChar",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeChar",
      "line": 149
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeChar",
      "anchor": "api-Transports.Binary.Operation%23writeChar"
    },
    "uid": "api/Transports.Binary.Operation#writeChar",
    "indices": {
      "#writeChar": 1,
      "Operation#writeChar": 2,
      "Transports.Binary.Operation#writeChar": 3
    }
  },
  "api/Transports.Binary.Operation#writeInt": {
    "id": "#writeInt",
    "title": "Transports.Binary.Operation#writeInt",
    "summary": "Parse data to 4 bytes which represents integer value.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeInt",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 4 bytes which represents integer value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 162
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 162
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 162,
          "column": 0
        },
        "end": {
          "line": 168,
          "column": 2
        }
      },
      "name": "writeInt",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeInt",
      "line": 162
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeInt",
      "anchor": "api-Transports.Binary.Operation%23writeInt"
    },
    "uid": "api/Transports.Binary.Operation#writeInt",
    "indices": {
      "#writeInt": 1,
      "Operation#writeInt": 2,
      "Transports.Binary.Operation#writeInt": 3
    }
  },
  "api/Transports.Binary.Operation#writeLong": {
    "id": "#writeLong",
    "title": "Transports.Binary.Operation#writeLong",
    "summary": "Parse data to 8 bytes which represents a long value.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeLong",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 8 bytes which represents a long value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 176
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 176
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 176,
          "column": 0
        },
        "end": {
          "line": 185,
          "column": 2
        }
      },
      "name": "writeLong",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeLong",
      "line": 176
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeLong",
      "anchor": "api-Transports.Binary.Operation%23writeLong"
    },
    "uid": "api/Transports.Binary.Operation#writeLong",
    "indices": {
      "#writeLong": 1,
      "Operation#writeLong": 2,
      "Transports.Binary.Operation#writeLong": 3
    }
  },
  "api/Transports.Binary.Operation#writeShort": {
    "id": "#writeShort",
    "title": "Transports.Binary.Operation#writeShort",
    "summary": "Parse data to 2 bytes which represents short value.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeShort",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse data to 2 bytes which represents short value.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 193
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 193
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 193,
          "column": 0
        },
        "end": {
          "line": 199,
          "column": 2
        }
      },
      "name": "writeShort",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeShort",
      "line": 193
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeShort",
      "anchor": "api-Transports.Binary.Operation%23writeShort"
    },
    "uid": "api/Transports.Binary.Operation#writeShort",
    "indices": {
      "#writeShort": 1,
      "Operation#writeShort": 2,
      "Transports.Binary.Operation#writeShort": 3
    }
  },
  "api/Transports.Binary.Operation#writeBytes": {
    "id": "#writeBytes",
    "title": "Transports.Binary.Operation#writeBytes",
    "summary": "Write bytes to a buffer",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeBytes",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write bytes to a buffer&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} data  The data to write.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 206
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 206
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 206,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 2
        }
      },
      "name": "writeBytes",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeBytes",
      "line": 206
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeBytes",
      "anchor": "api-Transports.Binary.Operation%23writeBytes"
    },
    "uid": "api/Transports.Binary.Operation#writeBytes",
    "indices": {
      "#writeBytes": 1,
      "Operation#writeBytes": 2,
      "Transports.Binary.Operation#writeBytes": 3
    }
  },
  "api/Transports.Binary.Operation#writeString": {
    "id": "#writeString",
    "title": "Transports.Binary.Operation#writeString",
    "summary": "Parse string data to buffer with UTF-8 encoding.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeString",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse string data to buffer with UTF-8 encoding.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Mixed} data  The data to write.",
          "typeInfo": {
            "types": [
              "Mixed"
            ],
            "name": "data",
            "description": "<p>&lt;p&gt;&lt;p&gt;The data to write.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 220
        },
        {
          "type": "return",
          "string": "{Buffer}      The buffer containing the data.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer containing the data.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 220
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "data"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 220,
          "column": 0
        },
        "end": {
          "line": 231,
          "column": 2
        }
      },
      "name": "writeString",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeString",
      "line": 220
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeString",
      "anchor": "api-Transports.Binary.Operation%23writeString"
    },
    "uid": "api/Transports.Binary.Operation#writeString",
    "indices": {
      "#writeString": 1,
      "Operation#writeString": 2,
      "Transports.Binary.Operation#writeString": 3
    }
  },
  "api/Transports.Binary.Operation#readStatus": {
    "id": "#readStatus",
    "title": "Transports.Binary.Operation#readStatus",
    "summary": "Read a status from the server response.\nIf the status contains an error, that error\nwill be read instead of any subsequently queued commands.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readStatus",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read a status from the server response.\nIf the status contains an error, that error\nwill be read instead of any subsequently queued commands.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 249
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 249,
          "column": 0
        },
        "end": {
          "line": 284,
          "column": 2
        }
      },
      "name": "readStatus",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readStatus",
      "line": 249
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23readStatus",
      "anchor": "api-Transports.Binary.Operation%23readStatus"
    },
    "uid": "api/Transports.Binary.Operation#readStatus",
    "indices": {
      "#readStatus": 1,
      "Operation#readStatus": 2,
      "Transports.Binary.Operation#readStatus": 3
    }
  },
  "api/Transports.Binary.Operation#readError": {
    "id": "#readError",
    "title": "Transports.Binary.Operation#readError",
    "summary": "Read an error from the server response.\nAny subsequently queued commands will not run.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readError",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read an error from the server response.\nAny subsequently queued commands will not run.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 294
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 294,
          "column": 0
        },
        "end": {
          "line": 297,
          "column": 2
        }
      },
      "name": "readError",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readError",
      "line": 294
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23readError",
      "anchor": "api-Transports.Binary.Operation%23readError"
    },
    "uid": "api/Transports.Binary.Operation#readError",
    "indices": {
      "#readError": 1,
      "Operation#readError": 2,
      "Transports.Binary.Operation#readError": 3
    }
  },
  "api/Transports.Binary.Operation#readObject": {
    "id": "#readObject",
    "title": "Transports.Binary.Operation#readObject",
    "summary": "Read an object from the server response.\nThis is the same as readString but deserializes the returned string\ninto an object.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#readObject",
      "description": "<p>&lt;p&gt;&lt;p&gt;Read an object from the server response.\nThis is the same as &lt;code&gt;readString&lt;/code&gt; but deserializes the returned string\ninto an object.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String}   fieldName  The name of the data field to populate.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the data field to populate.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        },
        {
          "type": "param",
          "string": "{Function} reader     The function that should be invoked after this value is read. if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after this value is read. if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        },
        {
          "type": "return",
          "string": "{Operation}           The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 308
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 308,
          "column": 0
        },
        "end": {
          "line": 316,
          "column": 2
        }
      },
      "name": "readObject",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#readObject",
      "line": 308
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23readObject",
      "anchor": "api-Transports.Binary.Operation%23readObject"
    },
    "uid": "api/Transports.Binary.Operation#readObject",
    "indices": {
      "#readObject": 1,
      "Operation#readObject": 2,
      "Transports.Binary.Operation#readObject": 3
    }
  },
  "api/Transports.Binary.Operation#consume": {
    "id": "#consume",
    "title": "Transports.Binary.Operation#consume",
    "summary": "Consume the buffer starting from the given offset.\nReturns an array containing the operation status, the\nnew offset and any collected result.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#consume",
      "description": "<p>&lt;p&gt;&lt;p&gt;Consume the buffer starting from the given offset.\nReturns an array containing the operation status, the\nnew offset and any collected result.&lt;/p&gt;\n&lt;p&gt;If the buffer doesn&#39;t contain enough data for the operation\nto complete, it will process as much as possible and return\na partial result with a status code of &lt;code&gt;Operation.READING&lt;/code&gt; meaning\nthat the operation is still in the reading state.&lt;/p&gt;\n&lt;p&gt;If the operation completes successfully, the status code will be\n&lt;code&gt;Operation.COMPLETE&lt;/code&gt;.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer  The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        },
        {
          "type": "return",
          "string": "{Array}          The array containing the status, new offset and result.",
          "typeInfo": {
            "types": [
              "Array"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The array containing the status, new offset and result.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 361
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 361,
          "column": 0
        },
        "end": {
          "line": 454,
          "column": 2
        }
      },
      "name": "consume",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#consume",
      "line": 361
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23consume",
      "anchor": "api-Transports.Binary.Operation%23consume"
    },
    "uid": "api/Transports.Binary.Operation#consume",
    "indices": {
      "#consume": 1,
      "Operation#consume": 2,
      "Transports.Binary.Operation#consume": 3
    }
  },
  "api/Transports.Binary.Operation#canRead": {
    "id": "#canRead",
    "title": "Transports.Binary.Operation#canRead",
    "summary": "Defetermine whether the operation can read a value of the given\ntype from the buffer at the given offset.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#canRead",
      "description": "<p>&lt;p&gt;&lt;p&gt;Defetermine whether the operation can read a value of the given\ntype from the buffer at the given offset.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{String} type    The value type.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "type",
            "description": "<p>&lt;p&gt;&lt;p&gt;The value type.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "param",
          "string": "{Buffer} buffer  The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "param",
          "string": "{Integer} offset The offset to start reading at.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading at.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        },
        {
          "type": "return",
          "string": "{Boolean}        true if the value can be read.",
          "typeInfo": {
            "types": [
              "Boolean"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;true if the value can be read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 465
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "type"
          },
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 465,
          "column": 0
        },
        "end": {
          "line": 498,
          "column": 2
        }
      },
      "name": "canRead",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#canRead",
      "line": 465
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23canRead",
      "anchor": "api-Transports.Binary.Operation%23canRead"
    },
    "uid": "api/Transports.Binary.Operation#canRead",
    "indices": {
      "#canRead": 1,
      "Operation#canRead": 2,
      "Transports.Binary.Operation#canRead": 3
    }
  },
  "api/Transports.Binary.Operation#parseByte": {
    "id": "#parseByte",
    "title": "Transports.Binary.Operation#parseByte",
    "summary": "Parse a byte from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseByte",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a byte from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 512
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 512,
          "column": 0
        },
        "end": {
          "line": 518,
          "column": 2
        }
      },
      "name": "parseByte",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseByte",
      "line": 512
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseByte",
      "anchor": "api-Transports.Binary.Operation%23parseByte"
    },
    "uid": "api/Transports.Binary.Operation#parseByte",
    "indices": {
      "#parseByte": 1,
      "Operation#parseByte": 2,
      "Transports.Binary.Operation#parseByte": 3
    }
  },
  "api/Transports.Binary.Operation#parseChar": {
    "id": "#parseChar",
    "title": "Transports.Binary.Operation#parseChar",
    "summary": "Parse a character from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseChar",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a character from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 531
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 531,
          "column": 0
        },
        "end": {
          "line": 537,
          "column": 2
        }
      },
      "name": "parseChar",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseChar",
      "line": 531
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseChar",
      "anchor": "api-Transports.Binary.Operation%23parseChar"
    },
    "uid": "api/Transports.Binary.Operation#parseChar",
    "indices": {
      "#parseChar": 1,
      "Operation#parseChar": 2,
      "Transports.Binary.Operation#parseChar": 3
    }
  },
  "api/Transports.Binary.Operation#parseBoolean": {
    "id": "#parseBoolean",
    "title": "Transports.Binary.Operation#parseBoolean",
    "summary": "Parse a boolean from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseBoolean",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a boolean from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 550
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 550,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 2
        }
      },
      "name": "parseBoolean",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseBoolean",
      "line": 550
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseBoolean",
      "anchor": "api-Transports.Binary.Operation%23parseBoolean"
    },
    "uid": "api/Transports.Binary.Operation#parseBoolean",
    "indices": {
      "#parseBoolean": 1,
      "Operation#parseBoolean": 2,
      "Transports.Binary.Operation#parseBoolean": 3
    }
  },
  "api/Transports.Binary.Operation#parseShort": {
    "id": "#parseShort",
    "title": "Transports.Binary.Operation#parseShort",
    "summary": "Parse a short from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseShort",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a short from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 570
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 570,
          "column": 0
        },
        "end": {
          "line": 577,
          "column": 2
        }
      },
      "name": "parseShort",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseShort",
      "line": 570
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseShort",
      "anchor": "api-Transports.Binary.Operation%23parseShort"
    },
    "uid": "api/Transports.Binary.Operation#parseShort",
    "indices": {
      "#parseShort": 1,
      "Operation#parseShort": 2,
      "Transports.Binary.Operation#parseShort": 3
    }
  },
  "api/Transports.Binary.Operation#parseInt": {
    "id": "#parseInt",
    "title": "Transports.Binary.Operation#parseInt",
    "summary": "Parse an integer from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseInt",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an integer from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 590
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 590,
          "column": 0
        },
        "end": {
          "line": 596,
          "column": 2
        }
      },
      "name": "parseInt",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseInt",
      "line": 590
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseInt",
      "anchor": "api-Transports.Binary.Operation%23parseInt"
    },
    "uid": "api/Transports.Binary.Operation#parseInt",
    "indices": {
      "#parseInt": 1,
      "Operation#parseInt": 2,
      "Transports.Binary.Operation#parseInt": 3
    }
  },
  "api/Transports.Binary.Operation#parseLong": {
    "id": "#parseLong",
    "title": "Transports.Binary.Operation#parseLong",
    "summary": "Parse a long from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseLong",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a long from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 609
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 609,
          "column": 0
        },
        "end": {
          "line": 621,
          "column": 2
        }
      },
      "name": "parseLong",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseLong",
      "line": 609
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseLong",
      "anchor": "api-Transports.Binary.Operation%23parseLong"
    },
    "uid": "api/Transports.Binary.Operation#parseLong",
    "indices": {
      "#parseLong": 1,
      "Operation#parseLong": 2,
      "Transports.Binary.Operation#parseLong": 3
    }
  },
  "api/Transports.Binary.Operation#parseBytes": {
    "id": "#parseBytes",
    "title": "Transports.Binary.Operation#parseBytes",
    "summary": "Parse some bytes from the given buffer at the given offset and\ninsert them into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseBytes",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse some bytes from the given buffer at the given offset and\ninsert them into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 634
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 634,
          "column": 0
        },
        "end": {
          "line": 647,
          "column": 2
        }
      },
      "name": "parseBytes",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseBytes",
      "line": 634
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseBytes",
      "anchor": "api-Transports.Binary.Operation%23parseBytes"
    },
    "uid": "api/Transports.Binary.Operation#parseBytes",
    "indices": {
      "#parseBytes": 1,
      "Operation#parseBytes": 2,
      "Transports.Binary.Operation#parseBytes": 3
    }
  },
  "api/Transports.Binary.Operation#parseString": {
    "id": "#parseString",
    "title": "Transports.Binary.Operation#parseString",
    "summary": "Parse a string from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseString",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a string from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 661
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 661,
          "column": 0
        },
        "end": {
          "line": 674,
          "column": 2
        }
      },
      "name": "parseString",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseString",
      "line": 661
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseString",
      "anchor": "api-Transports.Binary.Operation%23parseString"
    },
    "uid": "api/Transports.Binary.Operation#parseString",
    "indices": {
      "#parseString": 1,
      "Operation#parseString": 2,
      "Transports.Binary.Operation#parseString": 3
    }
  },
  "api/Transports.Binary.Operation#parseRecord": {
    "id": "#parseRecord",
    "title": "Transports.Binary.Operation#parseRecord",
    "summary": "Parse a record from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseRecord",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a record from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 687
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 687,
          "column": 0
        },
        "end": {
          "line": 757,
          "column": 2
        }
      },
      "name": "parseRecord",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseRecord",
      "line": 687
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseRecord",
      "anchor": "api-Transports.Binary.Operation%23parseRecord"
    },
    "uid": "api/Transports.Binary.Operation#parseRecord",
    "indices": {
      "#parseRecord": 1,
      "Operation#parseRecord": 2,
      "Transports.Binary.Operation#parseRecord": 3
    }
  },
  "api/Transports.Binary.Operation#parseCollection": {
    "id": "#parseCollection",
    "title": "Transports.Binary.Operation#parseCollection",
    "summary": "Parse a collection from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseCollection",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse a collection from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 771
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 771,
          "column": 0
        },
        "end": {
          "line": 789,
          "column": 2
        }
      },
      "name": "parseCollection",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseCollection",
      "line": 771
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseCollection",
      "anchor": "api-Transports.Binary.Operation%23parseCollection"
    },
    "uid": "api/Transports.Binary.Operation#parseCollection",
    "indices": {
      "#parseCollection": 1,
      "Operation#parseCollection": 2,
      "Transports.Binary.Operation#parseCollection": 3
    }
  },
  "api/Transports.Binary.Operation#parseArray": {
    "id": "#parseArray",
    "title": "Transports.Binary.Operation#parseArray",
    "summary": "Parse an array from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseArray",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an array from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;blockquote&gt;\n&lt;p&gt;Note. this differs from the other &lt;code&gt;parseXYZ&lt;/code&gt; methods in that &lt;code&gt;reader&lt;/code&gt;\nis required, and MUST return an array of functions. Each function in the\narray represents a &#39;scope&#39; for an item in the array and will be invoked in order.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 807
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 807,
          "column": 0
        },
        "end": {
          "line": 837,
          "column": 2
        }
      },
      "name": "parseArray",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseArray",
      "line": 807
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseArray",
      "anchor": "api-Transports.Binary.Operation%23parseArray"
    },
    "uid": "api/Transports.Binary.Operation#parseArray",
    "indices": {
      "#parseArray": 1,
      "Operation#parseArray": 2,
      "Transports.Binary.Operation#parseArray": 3
    }
  },
  "api/Transports.Binary.Operation#parseError": {
    "id": "#parseError",
    "title": "Transports.Binary.Operation#parseError",
    "summary": "Parse an error from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parseError",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse an error from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;blockquote&gt;\n&lt;p&gt;Note: this implementation differs from the others in that\nwhen an error is encountered, any subsequent &lt;code&gt;readXYZ()&lt;/code&gt; commands\nthat were due to be run will be skipped.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 854
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 854,
          "column": 0
        },
        "end": {
          "line": 901,
          "column": 2
        }
      },
      "name": "parseError",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parseError",
      "line": 854
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parseError",
      "anchor": "api-Transports.Binary.Operation%23parseError"
    },
    "uid": "api/Transports.Binary.Operation#parseError",
    "indices": {
      "#parseError": 1,
      "Operation#parseError": 2,
      "Transports.Binary.Operation#parseError": 3
    }
  },
  "api/Transports.Binary.Operation#parsePushedData": {
    "id": "#parsePushedData",
    "title": "Transports.Binary.Operation#parsePushedData",
    "summary": "Parse any pushed data from the given buffer at the given offset and\ninsert it into the context under the given field name.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#parsePushedData",
      "description": "<p>&lt;p&gt;&lt;p&gt;Parse any pushed data from the given buffer at the given offset and\ninsert it into the context under the given field name.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Buffer} buffer     The buffer to read from.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "buffer",
            "description": "<p>&lt;p&gt;&lt;p&gt;The buffer to read from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Integer} offset    The offset to start reading from.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "offset",
            "description": "<p>&lt;p&gt;&lt;p&gt;The offset to start reading from.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Object} context    The context to add the value to.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "context",
            "description": "<p>&lt;p&gt;&lt;p&gt;The context to add the value to.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{String} fieldName  The name of the field in the context.",
          "typeInfo": {
            "types": [
              "String"
            ],
            "name": "fieldName",
            "description": "<p>&lt;p&gt;&lt;p&gt;The name of the field in the context.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "param",
          "string": "{Function} reader   The function that should be invoked after the value is read, if any.",
          "typeInfo": {
            "types": [
              "Function"
            ],
            "name": "reader",
            "description": "<p>&lt;p&gt;&lt;p&gt;The function that should be invoked after the value is read, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        },
        {
          "type": "return",
          "string": "{Integer}           The number of bytes read.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The number of bytes read.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 916
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "buffer"
          },
          {
            "name": "offset"
          },
          {
            "name": "context"
          },
          {
            "name": "fieldName"
          },
          {
            "name": "reader"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 916,
          "column": 0
        },
        "end": {
          "line": 928,
          "column": 2
        }
      },
      "name": "parsePushedData",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#parsePushedData",
      "line": 916
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23parsePushedData",
      "anchor": "api-Transports.Binary.Operation%23parsePushedData"
    },
    "uid": "api/Transports.Binary.Operation#parsePushedData",
    "indices": {
      "#parsePushedData": 1,
      "Operation#parsePushedData": 2,
      "Transports.Binary.Operation#parsePushedData": 3
    }
  },
  "api/Transports.Binary.Operation#writeHeader": {
    "id": "#writeHeader",
    "title": "Transports.Binary.Operation#writeHeader",
    "summary": "Write a request header.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
    "properties": {
      "id": "Transports.Binary.Operation#writeHeader",
      "description": "<p>&lt;p&gt;&lt;p&gt;Write a request header.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer}    opCode     The operation code.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "opCode",
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation code.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "param",
          "string": "{Integer}    sessionId  The session ID.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "sessionId",
            "description": "<p>&lt;p&gt;&lt;p&gt;The session ID.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "param",
          "string": "{Buffer}     token      The token, if any.",
          "typeInfo": {
            "types": [
              "Buffer"
            ],
            "name": "token",
            "description": "<p>&lt;p&gt;&lt;p&gt;The token, if any.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        },
        {
          "type": "return",
          "string": "{Operation}             The operation instance.",
          "typeInfo": {
            "types": [
              "&lt;a"
            ],
            "description": "<p>&lt;p&gt;&lt;p&gt;The operation instance.&lt;/p&gt;\n&lt;/p&gt;\n</p>\n"
          },
          "line": 106
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "opCode"
          },
          {
            "name": "sessionId"
          },
          {
            "name": "token"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Binary.Operation",
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 114,
          "column": 2
        }
      },
      "name": "writeHeader",
      "filePath": "/lib/transport/binary/protocol28/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/binary/protocol28/operation.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Binary.Operation#writeHeader",
      "line": 106
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Binary.Operation",
    "meta": {
      "href": "/api/Transports.Binary/Operation.html#api-Transports.Binary.Operation%23writeHeader",
      "anchor": "api-Transports.Binary.Operation%23writeHeader"
    },
    "uid": "api/Transports.Binary.Operation#writeHeader",
    "indices": {
      "#writeHeader": 1,
      "Operation#writeHeader": 2,
      "Transports.Binary.Operation#writeHeader": 3
    }
  },
  "api/Transports.Rest": {
    "id": "Transports.Rest",
    "title": "Transports.Rest",
    "symbol": ".",
    "documents": [
      "api/Transports.Rest.RestTransport",
      "api/Transports.Rest.Operation"
    ],
    "entities": [],
    "meta": {
      "href": "/api/Transports.Rest.html",
      "anchor": "api-Transports.Rest"
    },
    "type": "Document",
    "parentNode": "api",
    "uid": "api/Transports.Rest",
    "indices": {
      "Transports.Rest": 1
    }
  },
  "api/Transports.Rest.RestTransport": {
    "id": "RestTransport",
    "title": "Transports.Rest.RestTransport",
    "summary": "",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Rest.RestTransport",
      "namespace": "Transports.Rest",
      "description": "\n    <h1>\n      Binary Transport\n    </h1>\n  ",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The configuration for the transport.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The configuration for the transport.</p>\n"
          },
          "line": 21
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "config"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "name": "RestTransport",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Rest.RestTransport",
      "line": 21
    },
    "documents": [],
    "entities": [
      "api/Transports.Rest.RestTransport#configure",
      "api/Transports.Rest.RestTransport#configureLogger",
      "api/Transports.Rest.RestTransport#send",
      "api/Transports.Rest.RestTransport#close"
    ],
    "type": "Document",
    "parentNode": "api/Transports.Rest",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html",
      "anchor": "api-Transports.Rest.RestTransport",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
        "lastCommittedAt": 1398351382,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/Transports.Rest.RestTransport",
    "indices": {
      "RestTransport": 1,
      "Transports.Rest.RestTransport": 2
    }
  },
  "api/Transports.Rest.RestTransport#configure": {
    "id": "#configure",
    "title": "Transports.Rest.RestTransport#configure",
    "summary": "Configure the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#configure",
      "description": "<p>Configure the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} config The transport configuration.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The transport configuration.</p>\n"
          },
          "line": 43
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 2
        }
      },
      "name": "configure",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#configure",
      "line": 43
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport%23configure",
      "anchor": "api-Transports.Rest.RestTransport%23configure"
    },
    "uid": "api/Transports.Rest.RestTransport#configure",
    "indices": {
      "#configure": 1,
      "RestTransport#configure": 2,
      "Transports.Rest.RestTransport#configure": 3
    }
  },
  "api/Transports.Rest.RestTransport#configureLogger": {
    "id": "#configureLogger",
    "title": "Transports.Rest.RestTransport#configureLogger",
    "summary": "Configure the logger for the transport.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#configureLogger",
      "description": "<p>Configure the logger for the transport.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object}          config  The logger config",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "config",
            "description": "<p>The logger config</p>\n"
          },
          "line": 62
        },
        {
          "type": "return",
          "string": "{RestTransport}           The transport instance with the configured logger.",
          "typeInfo": {
            "types": [
              "<a href=\"\">Transports.Rest.RestTransport</a>"
            ],
            "description": "<p>The transport instance with the configured logger.</p>\n"
          },
          "line": 62
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "config"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 2
        }
      },
      "name": "configureLogger",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#configureLogger",
      "line": 62
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport%23configureLogger",
      "anchor": "api-Transports.Rest.RestTransport%23configureLogger"
    },
    "uid": "api/Transports.Rest.RestTransport#configureLogger",
    "indices": {
      "#configureLogger": 1,
      "RestTransport#configureLogger": 2,
      "Transports.Rest.RestTransport#configureLogger": 3
    }
  },
  "api/Transports.Rest.RestTransport#send": {
    "id": "#send",
    "title": "Transports.Rest.RestTransport#send",
    "summary": "Send an operation to the server,",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#send",
      "description": "<p>Send an operation to the server,</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Integer} operation The id of the operation to send.",
          "typeInfo": {
            "types": [
              "Integer"
            ],
            "name": "operation",
            "description": "<p>The id of the operation to send.</p>\n"
          },
          "line": 79
        },
        {
          "type": "param",
          "string": "{Object} options    The options for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "options",
            "description": "<p>The options for the operation.</p>\n"
          },
          "line": 79
        },
        {
          "type": "promise",
          "string": "{Mixed} The result of the operation.",
          "typeInfo": {
            "name": null,
            "description": null,
            "isOptional": null,
            "defaultValue": null,
            "types": []
          },
          "line": 79
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [
          {
            "name": "operation"
          },
          {
            "name": "options"
          }
        ],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 2
        }
      },
      "name": "send",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#send",
      "line": 79
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport%23send",
      "anchor": "api-Transports.Rest.RestTransport%23send"
    },
    "uid": "api/Transports.Rest.RestTransport#send",
    "indices": {
      "#send": 1,
      "RestTransport#send": 2,
      "Transports.Rest.RestTransport#send": 3
    }
  },
  "api/Transports.Rest.RestTransport#close": {
    "id": "#close",
    "title": "Transports.Rest.RestTransport#close",
    "summary": "Close the connection to the server.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
    "properties": {
      "id": "Transports.Rest.RestTransport#close",
      "description": "<p>Close the connection to the server.</p>\n",
      "tags": [
        {
          "type": "return",
          "string": "{Server} the disconnected server instance",
          "typeInfo": {
            "types": [
              "<a href=\"../Server.html\">Server</a>"
            ],
            "description": "<p>the disconnected server instance</p>\n"
          },
          "line": 90
        }
      ],
      "ctx": {
        "type": "function",
        "scope": "prototype",
        "params": [],
        "symbol": "#"
      },
      "receiver": "Transports.Rest.RestTransport",
      "loc": {
        "start": {
          "line": 90,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 2
        }
      },
      "name": "close",
      "filePath": "/lib/transport/rest/index.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/index.js",
      "isModule": false,
      "aliases": [],
      "path": "Transports.Rest.RestTransport#close",
      "line": 90
    },
    "type": "DocumentEntity",
    "parentNode": "api/Transports.Rest.RestTransport",
    "meta": {
      "href": "/api/Transports.Rest/RestTransport.html#api-Transports.Rest.RestTransport%23close",
      "anchor": "api-Transports.Rest.RestTransport%23close"
    },
    "uid": "api/Transports.Rest.RestTransport#close",
    "indices": {
      "#close": 1,
      "RestTransport#close": 2,
      "Transports.Rest.RestTransport#close": 3
    }
  },
  "api/Transports.Rest.Operation": {
    "id": "Operation",
    "title": "Transports.Rest.Operation",
    "summary": "The base class for REST operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.",
    "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/protocol/operation.js",
    "symbol": "",
    "properties": {
      "id": "Transports.Rest.Operation",
      "namespace": "Transports.Rest",
      "description": "<p>The base class for REST operations, provides a simple DSL for defining\nthe steps required to send a command to the server, and then read\nthe response.</p>\n<p>Each operation should implement the <code>write()</code> and <code>read()</code> methods.</p>\n",
      "tags": [
        {
          "type": "param",
          "string": "{Object} data The data for the operation.",
          "typeInfo": {
            "types": [
              "Object"
            ],
            "name": "data",
            "description": "<p>The data for the operation.</p>\n"
          },
          "line": 14
        }
      ],
      "ctx": {
        "type": "function",
        "params": [
          {
            "name": "data"
          }
        ]
      },
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 1
        }
      },
      "name": "Operation",
      "filePath": "/lib/transport/rest/protocol/operation.js",
      "absoluteFilePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/protocol/operation.js",
      "isModule": true,
      "aliases": [],
      "path": "Transports.Rest.Operation",
      "line": 14
    },
    "documents": [],
    "entities": [],
    "type": "Document",
    "parentNode": "api/Transports.Rest",
    "meta": {
      "href": "/api/Transports.Rest/Operation.html",
      "anchor": "api-Transports.Rest.Operation",
      "gitStats": {
        "filePath": "/home/kandie/Workspace/Projects/orientjs/lib/transport/rest/protocol/operation.js",
        "lastCommittedAt": 1398351382,
        "committers": {
          "charles.pick@gmail.com": "Charles Pick"
        }
      }
    },
    "uid": "api/Transports.Rest.Operation",
    "indices": {
      "Operation": 1,
      "Transports.Rest.Operation": 2
    }
  },
  "docs": {
    "id": "docs",
    "name": "tinydoc-plugin-markdown",
    "title": "Articles",
    "documents": [
      "docs/readme-md"
    ],
    "type": "Namespace",
    "symbol": "/",
    "meta": {
      "href": "/docs.html",
      "anchor": "docs"
    },
    "uid": "docs",
    "indices": {}
  },
  "docs/readme-md": {
    "id": "readme-md",
    "title": "OrientJS driver\n",
    "summary": "Official orientdb driver for node.js. Fast, lightweight, uses the binary protocol.",
    "filePath": "README.md",
    "properties": {
      "filePath": "README.md",
      "source": "\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">OrientJS driver</span>\n    </h1>\n  <p>Official <a href=\"http://www.orientechnologies.com/orientdb/\" target=\"_blank\">orientdb</a> driver for node.js. Fast, lightweight, uses the binary protocol.</p>\n<p>Master: <a href=\"https://travis-ci.org/orientechnologies/orientjs\" target=\"_blank\"><img src=\"https://travis-ci.org/orientechnologies/orientjs.svg?branch=master\" alt=\"Build Status\"></a></p>\n<p>Develop: <a href=\"https://travis-ci.org/orientechnologies/orientjs\" target=\"_blank\"><img src=\"https://travis-ci.org/orientechnologies/orientjs.svg?branch=develop\" alt=\"Build Status\"></a></p>\n<p>NOTE: <em>Release v2.2 contains big improvement on marshalling by using native C driver</em>.</p>\n\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Supported Versions</span>\n    </h1>\n  <p>OrientJS aims to work with version 2.0.0 of OrientDB and later. While it may work with earlier versions, they are not currently supported, <a href=\"./CONTRIBUTING.md\" target=\"_blank\">pull requests are welcome!</a></p>\n<blockquote>\n<p><strong>IMPORTANT</strong>: OrientJS does not currently support OrientDB&#39;s Tree Based <a href=\"https://github.com/orientechnologies/orientdb/wiki/RidBag\" target=\"_blank\">RIDBag</a> feature because it relies on making additional network requests.\nThis means that by default, the result of e.g. <code>JSON.stringify(record)</code> for a record with up to 119 edges will be very different from a record with 120+ edges.\nThis can lead to very nasty surprises which may not manifest themselves during development but could appear at any time in production.\nThere is an <a href=\"https://github.com/orientechnologies/orientdb/issues/2315\" target=\"_blank\">open issue</a> for this in OrientDB, until that gets fixed, it is <strong>strongly recommended</strong> that you set <code>RID_BAG_EMBEDDED_TO_SBTREEBONSAI_THRESHOLD</code> to a very large value, e.g. 2147483647.\nPlease see the <a href=\"http://www.orientechnologies.com/docs/2.0/orientdb.wiki/RidBag.html#configuration\" target=\"_blank\">relevant section in the OrientDB manual</a> for more information.</p>\n</blockquote>\n\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Installation</span>\n    </h1>\n  <p>Install via npm.</p>\n<pre><code class=\"lang-sh\">npm install orientjs\n</code></pre>\n<p>To install OrientJS globally use the <code>-g</code> option:</p>\n<pre><code class=\"lang-sh\">npm install orientjs -g\n</code></pre>\n\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Running Tests</span>\n    </h1>\n  <p>To run the test suite, first invoke the following command within the repo, installing the development dependencies:</p>\n<pre><code class=\"lang-sh\">npm install\n</code></pre>\n<p>Then run the tests:</p>\n<pre><code class=\"lang-sh\">npm test\n</code></pre>\n\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Features</span>\n    </h1>\n  <ul>\n<li>Tested with latest OrientDB (2.0.x and 2.1).</li>\n<li>Intuitive API, based on <a href=\"https://github.com/petkaantonov/bluebird\" target=\"_blank\">bluebird</a> promises.</li>\n<li>Fast binary protocol parser.</li>\n<li>Distributed Support</li>\n<li>Access multiple databases via the same socket.</li>\n<li>Migration support.</li>\n<li>Simple CLI.</li>\n<li>Connection Pooling</li>\n</ul>\n\n    <h1 class=\"anchorable-heading\" id=\"/docs/readme-md.html\">\n      <a href=\"#/docs/readme-md.html\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Table of Contents</span>\n    </h1>\n  <ul>\n<li><a href=\"#configuring-the-client\" target=\"_blank\">Configuring the Client</a></li>\n<li><a href=\"#server-api\" target=\"_blank\">Server API</a></li>\n<li><a href=\"#database-api\" target=\"_blank\">Database API</a><ul>\n<li><a href=\"#record-api\" target=\"_blank\">Record API</a></li>\n<li><a href=\"#class-api\" target=\"_blank\">Class API</a></li>\n<li><a href=\"#index-api\" target=\"_blank\">Index API</a></li>\n<li><a href=\"#query\" target=\"_blank\">Query</a></li>\n<li><a href=\"#query-builder\" target=\"_blank\">Query Builder</a></li>\n<li><a href=\"#transaction-builder\" target=\"_blank\">Transaction Builder</a></li>\n<li><a href=\"#batch-script\" target=\"_blank\">Batch Script</a>   </li>\n<li><a href=\"#function-api\" target=\"_blank\">Function API</a></li>\n<li><a href=\"#events\" target=\"_blank\">Events</a></li>\n</ul>\n</li>\n<li><a href=\"#cli\" target=\"_blank\">CLI</a><ul>\n<li><a href=\"#database-cli-commands\" target=\"_blank\">Database CLI Commands</a></li>\n<li><a href=\"#migrations\" target=\"_blank\">Migrations</a></li>\n</ul>\n</li>\n<li><a href=\"#history\" target=\"_blank\">History</a></li>\n</ul>\n\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/configuring-the-client\">\n      <a href=\"#/docs/readme-md.html/configuring-the-client\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Configuring the Client</span>\n    </h2>\n  <pre><code class=\"lang-js\">var OrientDB = require(&#39;orientjs&#39;);\n\nvar server = OrientDB({\n  host: &#39;localhost&#39;,\n  port: 2424,\n  username: &#39;root&#39;,\n  password: &#39;yourpassword&#39;\n});\n</code></pre>\n<pre><code class=\"lang-js\">// CLOSE THE CONNECTION AT THE END\nserver.close();\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/use-jwt\">\n      <a href=\"#/docs/readme-md.html/use-jwt\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Use <a href=\"http://orientdb.com/docs/2.1/Network-Binary-Protocol.html#token\" target=\"_blank\">JWT</a></span>\n    </h3>\n  <pre><code class=\"lang-js\">var server = OrientDB({\n  host: &#39;localhost&#39;,\n  port: 2424,\n  username: &#39;root&#39;,\n  password: &#39;yourpassword&#39;,\n  useToken: true\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/distributed-support-experimental\">\n      <a href=\"#/docs/readme-md.html/distributed-support-experimental\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Distributed Support (experimental)</span>\n    </h3>\n  <p><strong>Since orientjs 2.1.11</strong></p>\n<p>You can pass paramenter <code>servers</code> to specify the OrientDB distributed instances to be used in case of connection error on the primary host.\nThe only requirement is that at the first connection one of these server have to be online. Then orientjs will keep updated the list of the servers online in the cluster thanks to the push notification that OrientDB send to the connected clients when the shape of the cluster changes.</p>\n<pre><code class=\"lang-js\">var OrientDB = require(&quot;orientjs&quot;);\n\nvar server = OrientDB({\n host: &#39;10.0.1.5&#39;,\n port: 2424,\n username: &#39;root&#39;,\n password: &#39;root&#39;,\n servers : [{host : &#39;10.0.1.5&#39; , port : 2425}]\n});\n\nvar db = server.use({\n name: &#39;GratefulDeadConcerts&#39;,\n username: &#39;admin&#39;,\n password: &#39;admin&#39;\n});\n</code></pre>\n\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/server-api\">\n      <a href=\"#/docs/readme-md.html/server-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Server API</span>\n    </h2>\n  \n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-the-databases-on-the-server\">\n      <a href=\"#/docs/readme-md.html/listing-the-databases-on-the-server\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing the databases on the server</span>\n    </h3>\n  <pre><code class=\"lang-js\">server.list()\n.then(function (dbs) {\n  console.log(&#39;There are &#39; + dbs.length + &#39; databases on the server.&#39;);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-database\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-database\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new database</span>\n    </h3>\n  <pre><code class=\"lang-js\">server.create({\n  name: &#39;mydb&#39;,\n  type: &#39;graph&#39;,\n  storage: &#39;plocal&#39;\n})\n.then(function (db) {\n  console.log(&#39;Created a database called &#39; + db.name);\n});\n</code></pre>\n\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/database-api\">\n      <a href=\"#/docs/readme-md.html/database-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Database API</span>\n    </h2>\n  \n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/using-an-existing-database\">\n      <a href=\"#/docs/readme-md.html/using-an-existing-database\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Using an existing database</span>\n    </h3>\n  <pre><code class=\"lang-js\">var db = server.use(&#39;mydb&#39;);\nconsole.log(&#39;Using database: &#39; + db.name);\n\n// CLOSE THE DB SESSION AT THE END\ndb.close();\n</code></pre>\n<p>If you want to close also the connection you can</p>\n<pre><code class=\"lang-js\">db.close().then(function(){\n    // CLOSE THE CONNECTION \n    server.close();\n})\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/using-an-existing-database-with-credentials\">\n      <a href=\"#/docs/readme-md.html/using-an-existing-database-with-credentials\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Using an existing database with credentials</span>\n    </h3>\n  <pre><code class=\"lang-js\">var db = server.use({\n  name: &#39;mydb&#39;,\n  username: &#39;admin&#39;,\n  password: &#39;admin&#39;\n});\nconsole.log(&#39;Using database: &#39; + db.name);\n// CLOSE THE CONNECTION AT THE END\ndb.close();\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/using-standalone-db-object-without-server\">\n      <a href=\"#/docs/readme-md.html/using-standalone-db-object-without-server\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Using standalone db object without Server</span>\n    </h3>\n  <p><strong>Since orientjs 2.1.11</strong></p>\n<pre><code>var ODatabase = require(&#39;orientjs&#39;).ODatabase;\nvar db = new ODatabase({\n         host: &#39;localhost&#39;, \n        port: 2424, \n        username : &#39;admin&#39;, \n        password : &#39;admin&#39;, \n        name : &#39;GratefulDeadConcerts&#39;});\n\ndb.open().then(function(){\n    return db.query(&#39;select from v limit 1&#39;);\n}).then(function(res){\n    console.log(res.length);\n    // this will send a db close command and then close the connection\n    db.close().then(function(){\n        console.log(&#39;closed&#39;);\n    });\n});\n</code></pre>\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/record-api\">\n      <a href=\"#/docs/readme-md.html/record-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Record API</span>\n    </h3>\n  \n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/loading-a-record-by-rid\">\n      <a href=\"#/docs/readme-md.html/loading-a-record-by-rid\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Loading a record by RID.</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.record.get(&#39;#1:1&#39;)\n.then(function (record) {\n  console.log(&#39;Loaded record:&#39;, record);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/deleting-a-record\">\n      <a href=\"#/docs/readme-md.html/deleting-a-record\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Deleting a record</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.record.delete(&#39;#1:1&#39;)\n.then(function () {\n  console.log(&#39;Record deleted&#39;);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/class-api\">\n      <a href=\"#/docs/readme-md.html/class-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Class API</span>\n    </h3>\n  \n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-all-the-classes-in-the-database\">\n      <a href=\"#/docs/readme-md.html/listing-all-the-classes-in-the-database\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing all the classes in the database</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.class.list()\n.then(function (classes) {\n  console.log(&#39;There are &#39; + classes.length + &#39; classes in the db:&#39;, classes);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-class\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new class</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.class.create(&#39;MyClass&#39;)\n.then(function (MyClass) {\n  console.log(&#39;Created class: &#39; + MyClass.name);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-class-that-extends-another\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-class-that-extends-another\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new class that extends another</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.class.create(&#39;MyOtherClass&#39;, &#39;MyClass&#39;)\n.then(function (MyOtherClass) {\n  console.log(&#39;Created class: &#39; + MyOtherClass.name);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/getting-an-existing-class\">\n      <a href=\"#/docs/readme-md.html/getting-an-existing-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Getting an existing class</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.class.get(&#39;MyClass&#39;)\n.then(function (MyClass) {\n  console.log(&#39;Got class: &#39; + MyClass.name);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/updating-an-existing-class\">\n      <a href=\"#/docs/readme-md.html/updating-an-existing-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Updating an existing class</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.class.update({\n  name: &#39;MyClass&#39;,\n  superClass: &#39;V&#39;\n})\n.then(function (MyClass) {\n  console.log(&#39;Updated class: &#39; + MyClass.name + &#39; that extends &#39; + MyClass.superClass);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-properties-in-a-class\">\n      <a href=\"#/docs/readme-md.html/listing-properties-in-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing properties in a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.property.list()\n.then(function (properties) {\n  console.log(&#39;The class has the following properties:&#39;, properties);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/adding-a-property-to-a-class\">\n      <a href=\"#/docs/readme-md.html/adding-a-property-to-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Adding a property to a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.property.create({\n  name: &#39;name&#39;,\n  type: &#39;String&#39;\n})\n.then(function () {\n  console.log(&#39;Property created.&#39;)\n});\n</code></pre>\n<p>To add multiple properties, pass an array of objects. Example:</p>\n<pre><code class=\"lang-js\">MyClass.property.create([{\n  name: &#39;name&#39;,\n  type: &#39;String&#39;\n}, {\n  name: &#39;surname&#39;,\n  type: &#39;String&#39;\n}])\n.then(function () {\n  console.log(&#39;Property created.&#39;)\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/deleting-a-property-from-a-class\">\n      <a href=\"#/docs/readme-md.html/deleting-a-property-from-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Deleting a property from a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.property.drop(&#39;myprop&#39;)\n.then(function () {\n  console.log(&#39;Property deleted.&#39;);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/renaming-a-property-on-a-class\">\n      <a href=\"#/docs/readme-md.html/renaming-a-property-on-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Renaming a property on a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.property.rename(&#39;myprop&#39;, &#39;mypropchanged&#39;);\n.then(function () {\n  console.log(&#39;Property renamed.&#39;);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-record-for-a-class\">\n      <a href=\"#/docs/readme-md.html/creating-a-record-for-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a record for a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.create({\n  name: &#39;John McFakerton&#39;,\n  email: &#39;fake@example.com&#39;\n})\n.then(function (record) {\n  console.log(&#39;Created record: &#39;, record);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-records-in-a-class\">\n      <a href=\"#/docs/readme-md.html/listing-records-in-a-class\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing records in a class</span>\n    </h4>\n  <pre><code class=\"lang-js\">MyClass.list()\n.then(function (records) {\n  console.log(&#39;Found &#39; + records.length + &#39; records:&#39;, records);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-raw-binary-records\">\n      <a href=\"#/docs/readme-md.html/creating-raw-binary-records\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating raw binary records</span>\n    </h3>\n  <pre><code class=\"lang-js\">var binary_data = new Buffer(...);\n// ...\nbinary_data[&#39;@type&#39;] = &#39;b&#39;; // state that the record is a raw binary record\nbinary_data[&#39;@class&#39;] = &#39;MyBinary&#39;; // here &#39;@class&#39; does NOT mean a class, but a cluster\ndb.record.create(binary_data)\n.then(function (record) {\n  console.log(&#39;Created record. RID:&#39;, binary_data[&#39;@rid&#39;]);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/index-api\">\n      <a href=\"#/docs/readme-md.html/index-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Index API</span>\n    </h3>\n  \n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/create-a-new-index-for-a-class-property\">\n      <a href=\"#/docs/readme-md.html/create-a-new-index-for-a-class-property\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Create a new index for a class property</span>\n    </h3>\n  <pre><code class=\"lang-js\">db.index.create({\n  name: &#39;MyClass.myProp&#39;,\n  type: &#39;unique&#39;\n})\n.then(function(index){\n  console.log(&#39;Created index: &#39;, index);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/get-entry-from-class-property-index\">\n      <a href=\"#/docs/readme-md.html/get-entry-from-class-property-index\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Get entry from class property index</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.index.get(&#39;MyClass.myProp&#39;)\n.then(function (index) {\n  index.get(&#39;foo&#39;).then(console.log.bind(console));\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/query\">\n      <a href=\"#/docs/readme-md.html/query\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Query</span>\n    </h3>\n  \n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/execute-an-insert-query\">\n      <a href=\"#/docs/readme-md.html/execute-an-insert-query\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Execute an Insert Query</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.query(&#39;insert into OUser (name, password, status) values (:name, :password, :status)&#39;,\n  {\n    params: {\n      name: &#39;Radu&#39;,\n      password: &#39;mypassword&#39;,\n      status: &#39;active&#39;\n    }\n  }\n).then(function (response){\n  console.log(response); //an Array of records inserted\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/execute-a-select-query-with-params\">\n      <a href=\"#/docs/readme-md.html/execute-a-select-query-with-params\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Execute a Select Query with Params</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.query(&#39;select from OUser where name=:name&#39;, {\n  params: {\n    name: &#39;Radu&#39;\n  },\n  limit: 1\n}).then(function (results){\n  console.log(results);\n});\n</code></pre>\n\n    <h5 class=\"anchorable-heading\" id=\"/docs/readme-md.html/raw-execution-of-a-query-string-with-params\">\n      <a href=\"#/docs/readme-md.html/raw-execution-of-a-query-string-with-params\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Raw Execution of a Query String with Params</span>\n    </h5>\n  <pre><code class=\"lang-js\">db.exec(&#39;select from OUser where name=:name&#39;, {\n  params: {\n    name: &#39;Radu&#39;\n  }\n}).then(function (response){\n  console.log(response.results);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/query-builder\">\n      <a href=\"#/docs/readme-md.html/query-builder\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Query Builder</span>\n    </h3>\n  \n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-empty-vertex\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-empty-vertex\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new, empty vertex</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.create(&#39;VERTEX&#39;, &#39;V&#39;).one()\n.then(function (vertex) {\n  console.log(&#39;created vertex&#39;, vertex);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-vertex-with-some-properties\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-vertex-with-some-properties\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new vertex with some properties</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.create(&#39;VERTEX&#39;, &#39;V&#39;)\n.set({\n  key: &#39;value&#39;,\n  foo: &#39;bar&#39;\n})\n.one()\n.then(function (vertex) {\n  console.log(&#39;created vertex&#39;, vertex);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/deleting-a-vertex\">\n      <a href=\"#/docs/readme-md.html/deleting-a-vertex\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Deleting a vertex</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.delete(&#39;VERTEX&#39;)\n.where(&#39;@rid = #12:12&#39;)\n.one()\n.then(function (count) {\n  console.log(&#39;deleted &#39; + count + &#39; vertices&#39;);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-simple-edge-between-vertices\">\n      <a href=\"#/docs/readme-md.html/creating-a-simple-edge-between-vertices\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a simple edge between vertices</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.create(&#39;EDGE&#39;, &#39;E&#39;)\n.from(&#39;#12:12&#39;)\n.to(&#39;#12:13&#39;)\n.one()\n.then(function (edge) {\n  console.log(&#39;created edge:&#39;, edge);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-an-edge-with-properties\">\n      <a href=\"#/docs/readme-md.html/creating-an-edge-with-properties\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating an edge with properties</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.create(&#39;EDGE&#39;, &#39;E&#39;)\n.from(&#39;#12:12&#39;)\n.to(&#39;#12:13&#39;)\n.set({\n  key: &#39;value&#39;,\n  foo: &#39;bar&#39;\n})\n.one()\n.then(function (edge) {\n  console.log(&#39;created edge:&#39;, edge);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/deleting-an-edge-between-vertices\">\n      <a href=\"#/docs/readme-md.html/deleting-an-edge-between-vertices\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Deleting an edge between vertices</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.delete(&#39;EDGE&#39;, &#39;E&#39;)\n.from(&#39;#12:12&#39;)\n.to(&#39;#12:13&#39;)\n.scalar()\n.then(function (count) {\n  console.log(&#39;deleted &#39; + count + &#39; edges&#39;);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/insert-record\">\n      <a href=\"#/docs/readme-md.html/insert-record\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Insert Record</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.insert().into(&#39;OUser&#39;).set({name: &#39;demo&#39;, password: &#39;demo&#39;, status: &#39;ACTIVE&#39;}).one()\n.then(function (user) {\n  console.log(&#39;created&#39;, user);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/update-record\">\n      <a href=\"#/docs/readme-md.html/update-record\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Update Record</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.update(&#39;OUser&#39;).set({password: &#39;changed&#39;}).where({name: &#39;demo&#39;}).scalar()\n.then(function (total) {\n  console.log(&#39;updated&#39;, total, &#39;users&#39;);\n});\n</code></pre>\n<p>Return the updated record</p>\n<pre><code class=\"lang-js\">db.update(&#39;#5:0&#39;)\n.set({ a: &#39;b&#39; })\n.return(&#39;after @this&#39;)\n.one()\n.then(function(res){\n    console.log(res);\n})\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/delete-record\">\n      <a href=\"#/docs/readme-md.html/delete-record\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Delete Record</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.delete().from(&#39;OUser&#39;).where({name: &#39;demo&#39;}).limit(1).scalar()\n.then(function (total) {\n  console.log(&#39;deleted&#39;, total, &#39;users&#39;);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/select-records\">\n      <a href=\"#/docs/readme-md.html/select-records\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Select Records</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.select().from(&#39;OUser&#39;).where({status: &#39;ACTIVE&#39;}).all()\n.then(function (users) {\n  console.log(&#39;active users&#39;, users);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/text-search\">\n      <a href=\"#/docs/readme-md.html/text-search\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Text Search</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.select().from(&#39;OUser&#39;).containsText({name: &#39;er&#39;}).all()\n.then(function (users) {\n  console.log(&#39;found users&#39;, users);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/select-records-with-fetch-plan\">\n      <a href=\"#/docs/readme-md.html/select-records-with-fetch-plan\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Select Records with Fetch Plan</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.select().from(&#39;OUser&#39;).where({status: &#39;ACTIVE&#39;}).fetch({role: 5}).all()\n.then(function (users) {\n  console.log(&#39;active users&#39;, users);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/select-an-expression\">\n      <a href=\"#/docs/readme-md.html/select-an-expression\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Select an expression</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.select(&#39;count(*)&#39;).from(&#39;OUser&#39;).where({status: &#39;ACTIVE&#39;}).scalar()\n.then(function (total) {\n  console.log(&#39;total active users&#39;, total);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/traverse-records\">\n      <a href=\"#/docs/readme-md.html/traverse-records\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Traverse Records</span>\n    </h4>\n  <pre><code class=\"lang-js\">db.traverse().from(&#39;OUser&#39;).where({name: &#39;guest&#39;}).all()\n.then(function (records) {\n  console.log(&#39;found records&#39;, records);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/return-a-specific-field\">\n      <a href=\"#/docs/readme-md.html/return-a-specific-field\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Return a specific field</span>\n    </h4>\n  <pre><code class=\"lang-js\">db\n.select(&#39;name&#39;)\n.from(&#39;OUser&#39;)\n.where({status: &#39;ACTIVE&#39;})\n.column(&#39;name&#39;)\n.all()\n.then(function (names) {\n  console.log(&#39;active user names&#39;, names.join(&#39;, &#39;));\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/transform-a-field\">\n      <a href=\"#/docs/readme-md.html/transform-a-field\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Transform a field</span>\n    </h4>\n  <pre><code class=\"lang-js\">db\n.select(&#39;name&#39;)\n.from(&#39;OUser&#39;)\n.where({status: &#39;ACTIVE&#39;})\n.transform({\n  status: function (status) {\n    return status.toLowerCase();\n  }\n})\n.limit(1)\n.one()\n.then(function (user) {\n  console.log(&#39;user status: &#39;, user.status); // &#39;active&#39;\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/transform-a-record\">\n      <a href=\"#/docs/readme-md.html/transform-a-record\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Transform a record</span>\n    </h4>\n  <pre><code class=\"lang-js\">db\n.select(&#39;name&#39;)\n.from(&#39;OUser&#39;)\n.where({status: &#39;ACTIVE&#39;})\n.transform(function (record) {\n  return new User(record);\n})\n.limit(1)\n.one()\n.then(function (user) {\n  console.log(&#39;user is an instance of User?&#39;, (user instanceof User)); // true\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/specify-default-values\">\n      <a href=\"#/docs/readme-md.html/specify-default-values\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Specify default values</span>\n    </h4>\n  <pre><code class=\"lang-js\">db\n.select(&#39;name&#39;)\n.from(&#39;OUser&#39;)\n.where({status: &#39;ACTIVE&#39;})\n.defaults({\n  something: 123\n})\n.limit(1)\n.one()\n.then(function (user) {\n  console.log(user.name, user.something);\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/put-a-map-entry-into-a-map\">\n      <a href=\"#/docs/readme-md.html/put-a-map-entry-into-a-map\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Put a map entry into a map</span>\n    </h4>\n  <pre><code class=\"lang-js\">db\n.update(&#39;#1:1&#39;)\n.put(&#39;mapProperty&#39;, {\n  key: &#39;value&#39;,\n  foo: &#39;bar&#39;\n})\n.scalar()\n.then(function (total) {\n  console.log(&#39;updated&#39;, total, &#39;records&#39;);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/transaction-builder\">\n      <a href=\"#/docs/readme-md.html/transaction-builder\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Transaction Builder</span>\n    </h3>\n  <p>Transaction builder help you create batch script that will run on the server as a sigle transaction.</p>\n<pre><code class=\"lang-js\">db.let(&#39;first&#39;,function(f){\n        f.create(&#39;vertex&#39;,&#39;V&#39;)\n        .set({ name : &#39;John&#39;})\n    })\n    .let(&#39;second&#39;,function(s){\n        s.create(&#39;vertex&#39;,&#39;V&#39;)\n        .set({ name : &#39;John&#39;})\n    })\n    .let(&#39;edge&#39; , function(e){\n        e.create(&#39;edge&#39;,&#39;E&#39;)\n        .from(&#39;$first&#39;)\n        .to(&#39;$second&#39;)\n        .set({ when : new Date()})\n    })\n    .commit()\n    .return(&#39;$edge&#39;)\n    .all()\n    .then(function(res){\n        console.log(res);\n})\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/batch-script\">\n      <a href=\"#/docs/readme-md.html/batch-script\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Batch Script</span>\n    </h3>\n  <p>You can execute raw <a href=\"http://orientdb.com/docs/2.0/orientdb.wiki/SQL-batch.html\" target=\"_blank\">batch script</a> without transaction builder</p>\n<pre><code class=\"lang-js\">var script = &#39;begin;let $t0 = select from V limit 1; return $t0&#39; \ndb.query(script, { class : &#39;s&#39;})\n.then(function(res){\n console.log(res);\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/function-api\">\n      <a href=\"#/docs/readme-md.html/function-api\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Function API</span>\n    </h3>\n  <p>You can create a function by supplying a plain javascript function. Please note that the method stringifies the <code>function</code> passed so you can&#39;t use any varaibles outside the function closure.</p>\n<pre><code class=\"lang-js\">db.createFn(&quot;nameOfFunction&quot;, function(arg1, arg2) {\n  return arg1 + arg2;\n})\n.then(function (count) {\n  // Function created!\n});\n</code></pre>\n<p>You can also omit the name and it&#39;ll default to the <code>Function#name</code></p>\n<pre><code class=\"lang-js\">db.createFn(function nameOfFunction(arg1, arg2) {\n  return arg1 + arg2;\n})\n.then(function (count) {\n  // Function created!\n});\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/events\">\n      <a href=\"#/docs/readme-md.html/events\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Events</span>\n    </h3>\n  <p>You can also bind to the following events</p>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/beginquery\">\n      <a href=\"#/docs/readme-md.html/beginquery\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>beginQuery</code></span>\n    </h4>\n  <p>Given the query</p>\n<pre><code>db.select(&#39;name, status&#39;).from(&#39;OUser&#39;).where({&quot;status&quot;: &quot;active&quot;}).limit(1).fetch({&quot;role&quot;: 1}).one();\n</code></pre><p>The following event will be triggered</p>\n<pre><code>db.on(&quot;beginQuery&quot;, function(obj) {\n  // =&gt; {\n  //  query: &#39;SELECT name, status FROM OUser WHERE status = :paramstatus0 LIMIT 1&#39;,\n  //  mode: &#39;a&#39;,\n  //  fetchPlan: &#39;role:1&#39;,\n  //  limit: -1,\n  //  params: { params: { paramstatus0: &#39;active&#39; } }\n  // }\n});\n</code></pre>\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/endquery\">\n      <a href=\"#/docs/readme-md.html/endquery\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>endQuery</code></span>\n    </h4>\n  <p>After a query has been run, you&#39;ll get the the following event emitted</p>\n<pre><code>db.on(&quot;endQuery&quot;, function(obj) {\n  // =&gt; {\n  //   &quot;err&quot;: errObj,\n  //   &quot;result&quot;: resultObj,\n  //   &quot;perf&quot;: {\n  //     &quot;query&quot;: timeInMs\n  //   }\n  // }\n});\n</code></pre>\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/cli\">\n      <a href=\"#/docs/readme-md.html/cli\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">CLI</span>\n    </h2>\n  <p>An extremely minimalist command line interface is provided to allow\ndatabases to created and migrations to be applied via the terminal.</p>\n<p>To be useful, OrientJS requires some arguments to authenticate against the server. All operations require the <code>password</code> argument unless the user is configured with an empty password. For operations that involve a specific db, include the <code>dbname</code> argument (with <code>dbuser</code> and <code>dbpassword</code> if they are set to something other than the default).</p>\n<p>You can get a list of the supported arguments using <code>orientjs --help</code>.</p>\n<pre><code class=\"lang-sh\">  -d, --cwd         The working directory to use.\n  -h, --host        The server hostname or IP address.\n  -p, --port        The server port.\n  -u, --user        The server username.\n  -s, --password    The server password.\n  -n, --dbname      The name of the database to use.\n  -U, --dbuser      The database username.\n  -P, --dbpassword  The database password.\n  -?, --help        Show the help screen.\n</code></pre>\n<p>If it&#39;s too tedious to type these options in every time, you can also create an <code>orientjs.opts</code> file containing them. OrientJS will search for this file in the working directory and apply any arguments it contains.\nFor an example of such a file, see <a href=\"./test/fixtures/orientjs.opts\" target=\"_blank\">test/fixtures/orientjs.opts</a>.</p>\n<blockquote>\n<p>Note: For brevity, all these examples assume you&#39;ve installed OrientJS globally (<code>npm install -g orientjs</code>) and have set up an orientjs.opts file with your server and database credentials.</p>\n</blockquote>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/database-cli-commands\">\n      <a href=\"#/docs/readme-md.html/database-cli-commands\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Database CLI Commands.</span>\n    </h3>\n  \n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-all-the-databases-on-the-server\">\n      <a href=\"#/docs/readme-md.html/listing-all-the-databases-on-the-server\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing all the databases on the server.</span>\n    </h4>\n  <pre><code class=\"lang-sh\">orientjs db list\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-database\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-database\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new database</span>\n    </h4>\n  <pre><code class=\"lang-sh\">orientjs db create mydb graph plocal\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/destroying-an-existing-database\">\n      <a href=\"#/docs/readme-md.html/destroying-an-existing-database\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Destroying an existing database</span>\n    </h4>\n  <pre><code class=\"lang-sh\">orientjs db drop mydb\n</code></pre>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/migrations\">\n      <a href=\"#/docs/readme-md.html/migrations\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrations</span>\n    </h3>\n  <p>OrientJS supports a simple database migration system. This makes it easy to keep track of changes to your orientdb database structure between multiple environments and distributed teams.</p>\n<p>When you run a migration command, OrientJS first looks for an orient class called <code>Migration</code>. If this class doesn&#39;t exist it will be created.\nThis class is used to keep track of the migrations that have been applied.</p>\n<p>OrientJS then looks for migrations that have not yet been applied in a folder called <code>migrations</code>. Each migration consists of a simple node.js module which exports two methods - <code>up()</code> and <code>down()</code>. Each method receives the currently selected database instance as an argument.</p>\n<p>The <code>up()</code> method should perform the migration and the <code>down()</code> method should undo it.</p>\n<blockquote>\n<p>Note: Migrations can incur data loss! Make sure you back up your database before migrating up and down.</p>\n</blockquote>\n<p>In addition to the command line options outlined below, it&#39;s also possible to use the migration API programatically:</p>\n<pre><code class=\"lang-js\">var db = server.use(&#39;mydb&#39;);\n\nvar manager = new OrientDB.Migration.Manager({\n  db: db,\n  dir: __dirname + &#39;/migrations&#39;\n});\n\nmanager.up(1)\n.then(function () {\n  console.log(&#39;migrated up by one!&#39;)\n});\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/listing-the-available-migrations\">\n      <a href=\"#/docs/readme-md.html/listing-the-available-migrations\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Listing the available migrations</span>\n    </h4>\n  <p>To list all the unapplied migrations:</p>\n<pre><code class=\"lang-sh\">orientjs migrate list\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/creating-a-new-migration\">\n      <a href=\"#/docs/readme-md.html/creating-a-new-migration\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a new migration</span>\n    </h4>\n  <pre><code class=\"lang-sh\">orientjs migrate create my new migration\n</code></pre>\n<p>creates a file called something like <code>m20140318_200948_my_new_migration</code> which you should edit to specify the migration up and down methods.</p>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/migrating-up-fully\">\n      <a href=\"#/docs/readme-md.html/migrating-up-fully\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrating up fully</span>\n    </h4>\n  <p>To apply all the migrations:</p>\n<pre><code class=\"lang-sh\">orientjs migrate up\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/migrating-up-by-1\">\n      <a href=\"#/docs/readme-md.html/migrating-up-by-1\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrating up by 1</span>\n    </h4>\n  <p>To apply only the first migration:</p>\n<pre><code class=\"lang-sh\">orientjs migrate up 1\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/migrating-down-fully\">\n      <a href=\"#/docs/readme-md.html/migrating-down-fully\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrating down fully</span>\n    </h4>\n  <p>To revert all migrations:</p>\n<pre><code class=\"lang-sh\">orientjs migrate down\n</code></pre>\n\n    <h4 class=\"anchorable-heading\" id=\"/docs/readme-md.html/migrating-down-by-1\">\n      <a href=\"#/docs/readme-md.html/migrating-down-by-1\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Migrating down by 1</span>\n    </h4>\n  <pre><code class=\"lang-sh\">orientjs migrate down 1\n</code></pre>\n\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/troubleshooting\">\n      <a href=\"#/docs/readme-md.html/troubleshooting\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Troubleshooting</span>\n    </h2>\n  <ul>\n<li>Node exception Maximum call stack size exceeded <a href=\"https://github.com/orientechnologies/orientjs/issues/116\" target=\"_blank\">here</a></li>\n</ul>\n\n    <h2 class=\"anchorable-heading\" id=\"/docs/readme-md.html/history\">\n      <a href=\"#/docs/readme-md.html/history\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">History</span>\n    </h2>\n  <p>In 2012, <a href=\"https://github.com/gabipetrovay\" target=\"_blank\">Gabriel Petrovay</a> created the original <a href=\"https://github.com/gabipetrovay/node-orientdb\" target=\"_blank\">node-orientdb</a> library, with a straightforward callback based API.</p>\n<p>In early 2014, <a href=\"https://github.com/nitrog7\" target=\"_blank\">Giraldo Rosales</a> made a <a href=\"https://github.com/nitrog7/node-orientdb\" target=\"_blank\">whole host of improvements</a>, including support for orientdb 1.7 and switched to a promise based API.</p>\n<p>Later in 2014, codemix refactored the library to make it easier to extend and maintain, and introduced an API similar to <a href=\"https://github.com/dscape/nano\" target=\"_blank\">nano</a>. The result is so different from the original codebase that it warranted its own name and npm package. This also gave us the opportunity to switch to semantic versioning.</p>\n<p>In June 2015, Orient Technologies company officially adopted the Oriento driver and renamed it as OrientJS.</p>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/notes-for-contributors\">\n      <a href=\"#/docs/readme-md.html/notes-for-contributors\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Notes for contributors</span>\n    </h3>\n  <p>Please see <a href=\"./CONTRIBUTING.md\" target=\"_blank\">CONTRIBUTING</a>.</p>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/changes\">\n      <a href=\"#/docs/readme-md.html/changes\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Changes</span>\n    </h3>\n  <p>See <a href=\"./CHANGELOG.md\" target=\"_blank\">CHANGELOG</a></p>\n\n    <h3 class=\"anchorable-heading\" id=\"/docs/readme-md.html/license\">\n      <a href=\"#/docs/readme-md.html/license\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">License</span>\n    </h3>\n  <p>Apache 2.0 License, see <a href=\"./LICENSE.md\" target=\"_blank\">LICENSE</a></p>\n",
      "id": "readme-md",
      "sortingId": "README.md",
      "title": "OrientJS driver",
      "wordCount": 2543,
      "summary": "Official orientdb driver for node.js. Fast, lightweight, uses the binary protocol.",
      "plainTitle": "OrientJS driver\n",
      "fileName": "README",
      "folder": ".",
      "sections": [
        {
          "id": "/docs/readme-md.html",
          "scopedId": "orientjs-driver",
          "level": 1,
          "html": "OrientJS driver",
          "text": "OrientJS driver"
        },
        {
          "id": "/docs/readme-md.html",
          "scopedId": "supported-versions",
          "level": 1,
          "html": "Supported Versions",
          "text": "Supported Versions"
        },
        {
          "id": "/docs/readme-md.html",
          "scopedId": "installation",
          "level": 1,
          "html": "Installation",
          "text": "Installation"
        },
        {
          "id": "/docs/readme-md.html",
          "scopedId": "running-tests",
          "level": 1,
          "html": "Running Tests",
          "text": "Running Tests"
        },
        {
          "id": "/docs/readme-md.html",
          "scopedId": "features",
          "level": 1,
          "html": "Features",
          "text": "Features"
        },
        {
          "id": "/docs/readme-md.html",
          "scopedId": "table-of-contents",
          "level": 1,
          "html": "Table of Contents",
          "text": "Table of Contents"
        },
        {
          "id": "/docs/readme-md.html/configuring-the-client",
          "scopedId": "configuring-the-client",
          "level": 2,
          "html": "Configuring the Client",
          "text": "Configuring the Client"
        },
        {
          "id": "/docs/readme-md.html/use-jwt",
          "scopedId": "use-jwt",
          "level": 3,
          "html": "Use <a href=\"http://orientdb.com/docs/2.1/Network-Binary-Protocol.html#token\" target=\"_blank\">JWT</a>",
          "text": "Use JWT"
        },
        {
          "id": "/docs/readme-md.html/distributed-support-experimental",
          "scopedId": "distributed-support-experimental",
          "level": 3,
          "html": "Distributed Support (experimental)",
          "text": "Distributed Support (experimental)"
        },
        {
          "id": "/docs/readme-md.html/server-api",
          "scopedId": "server-api",
          "level": 2,
          "html": "Server API",
          "text": "Server API"
        },
        {
          "id": "/docs/readme-md.html/listing-the-databases-on-the-server",
          "scopedId": "listing-the-databases-on-the-server",
          "level": 3,
          "html": "Listing the databases on the server",
          "text": "Listing the databases on the server"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-database",
          "scopedId": "creating-a-new-database",
          "level": 3,
          "html": "Creating a new database",
          "text": "Creating a new database"
        },
        {
          "id": "/docs/readme-md.html/database-api",
          "scopedId": "database-api",
          "level": 2,
          "html": "Database API",
          "text": "Database API"
        },
        {
          "id": "/docs/readme-md.html/using-an-existing-database",
          "scopedId": "using-an-existing-database",
          "level": 3,
          "html": "Using an existing database",
          "text": "Using an existing database"
        },
        {
          "id": "/docs/readme-md.html/using-an-existing-database-with-credentials",
          "scopedId": "using-an-existing-database-with-credentials",
          "level": 3,
          "html": "Using an existing database with credentials",
          "text": "Using an existing database with credentials"
        },
        {
          "id": "/docs/readme-md.html/using-standalone-db-object-without-server",
          "scopedId": "using-standalone-db-object-without-server",
          "level": 3,
          "html": "Using standalone db object without Server",
          "text": "Using standalone db object without Server"
        },
        {
          "id": "/docs/readme-md.html/record-api",
          "scopedId": "record-api",
          "level": 3,
          "html": "Record API",
          "text": "Record API"
        },
        {
          "id": "/docs/readme-md.html/loading-a-record-by-rid",
          "scopedId": "loading-a-record-by-rid",
          "level": 4,
          "html": "Loading a record by RID.",
          "text": "Loading a record by RID."
        },
        {
          "id": "/docs/readme-md.html/deleting-a-record",
          "scopedId": "deleting-a-record",
          "level": 4,
          "html": "Deleting a record",
          "text": "Deleting a record"
        },
        {
          "id": "/docs/readme-md.html/class-api",
          "scopedId": "class-api",
          "level": 3,
          "html": "Class API",
          "text": "Class API"
        },
        {
          "id": "/docs/readme-md.html/listing-all-the-classes-in-the-database",
          "scopedId": "listing-all-the-classes-in-the-database",
          "level": 4,
          "html": "Listing all the classes in the database",
          "text": "Listing all the classes in the database"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-class",
          "scopedId": "creating-a-new-class",
          "level": 4,
          "html": "Creating a new class",
          "text": "Creating a new class"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-class-that-extends-another",
          "scopedId": "creating-a-new-class-that-extends-another",
          "level": 4,
          "html": "Creating a new class that extends another",
          "text": "Creating a new class that extends another"
        },
        {
          "id": "/docs/readme-md.html/getting-an-existing-class",
          "scopedId": "getting-an-existing-class",
          "level": 4,
          "html": "Getting an existing class",
          "text": "Getting an existing class"
        },
        {
          "id": "/docs/readme-md.html/updating-an-existing-class",
          "scopedId": "updating-an-existing-class",
          "level": 4,
          "html": "Updating an existing class",
          "text": "Updating an existing class"
        },
        {
          "id": "/docs/readme-md.html/listing-properties-in-a-class",
          "scopedId": "listing-properties-in-a-class",
          "level": 4,
          "html": "Listing properties in a class",
          "text": "Listing properties in a class"
        },
        {
          "id": "/docs/readme-md.html/adding-a-property-to-a-class",
          "scopedId": "adding-a-property-to-a-class",
          "level": 4,
          "html": "Adding a property to a class",
          "text": "Adding a property to a class"
        },
        {
          "id": "/docs/readme-md.html/deleting-a-property-from-a-class",
          "scopedId": "deleting-a-property-from-a-class",
          "level": 4,
          "html": "Deleting a property from a class",
          "text": "Deleting a property from a class"
        },
        {
          "id": "/docs/readme-md.html/renaming-a-property-on-a-class",
          "scopedId": "renaming-a-property-on-a-class",
          "level": 4,
          "html": "Renaming a property on a class",
          "text": "Renaming a property on a class"
        },
        {
          "id": "/docs/readme-md.html/creating-a-record-for-a-class",
          "scopedId": "creating-a-record-for-a-class",
          "level": 4,
          "html": "Creating a record for a class",
          "text": "Creating a record for a class"
        },
        {
          "id": "/docs/readme-md.html/listing-records-in-a-class",
          "scopedId": "listing-records-in-a-class",
          "level": 4,
          "html": "Listing records in a class",
          "text": "Listing records in a class"
        },
        {
          "id": "/docs/readme-md.html/creating-raw-binary-records",
          "scopedId": "creating-raw-binary-records",
          "level": 3,
          "html": "Creating raw binary records",
          "text": "Creating raw binary records"
        },
        {
          "id": "/docs/readme-md.html/index-api",
          "scopedId": "index-api",
          "level": 3,
          "html": "Index API",
          "text": "Index API"
        },
        {
          "id": "/docs/readme-md.html/create-a-new-index-for-a-class-property",
          "scopedId": "create-a-new-index-for-a-class-property",
          "level": 3,
          "html": "Create a new index for a class property",
          "text": "Create a new index for a class property"
        },
        {
          "id": "/docs/readme-md.html/get-entry-from-class-property-index",
          "scopedId": "get-entry-from-class-property-index",
          "level": 4,
          "html": "Get entry from class property index",
          "text": "Get entry from class property index"
        },
        {
          "id": "/docs/readme-md.html/query",
          "scopedId": "query",
          "level": 3,
          "html": "Query",
          "text": "Query"
        },
        {
          "id": "/docs/readme-md.html/execute-an-insert-query",
          "scopedId": "execute-an-insert-query",
          "level": 4,
          "html": "Execute an Insert Query",
          "text": "Execute an Insert Query"
        },
        {
          "id": "/docs/readme-md.html/execute-a-select-query-with-params",
          "scopedId": "execute-a-select-query-with-params",
          "level": 4,
          "html": "Execute a Select Query with Params",
          "text": "Execute a Select Query with Params"
        },
        {
          "id": "/docs/readme-md.html/raw-execution-of-a-query-string-with-params",
          "scopedId": "raw-execution-of-a-query-string-with-params",
          "level": 5,
          "html": "Raw Execution of a Query String with Params",
          "text": "Raw Execution of a Query String with Params"
        },
        {
          "id": "/docs/readme-md.html/query-builder",
          "scopedId": "query-builder",
          "level": 3,
          "html": "Query Builder",
          "text": "Query Builder"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-empty-vertex",
          "scopedId": "creating-a-new-empty-vertex",
          "level": 4,
          "html": "Creating a new, empty vertex",
          "text": "Creating a new, empty vertex"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-vertex-with-some-properties",
          "scopedId": "creating-a-new-vertex-with-some-properties",
          "level": 4,
          "html": "Creating a new vertex with some properties",
          "text": "Creating a new vertex with some properties"
        },
        {
          "id": "/docs/readme-md.html/deleting-a-vertex",
          "scopedId": "deleting-a-vertex",
          "level": 4,
          "html": "Deleting a vertex",
          "text": "Deleting a vertex"
        },
        {
          "id": "/docs/readme-md.html/creating-a-simple-edge-between-vertices",
          "scopedId": "creating-a-simple-edge-between-vertices",
          "level": 4,
          "html": "Creating a simple edge between vertices",
          "text": "Creating a simple edge between vertices"
        },
        {
          "id": "/docs/readme-md.html/creating-an-edge-with-properties",
          "scopedId": "creating-an-edge-with-properties",
          "level": 4,
          "html": "Creating an edge with properties",
          "text": "Creating an edge with properties"
        },
        {
          "id": "/docs/readme-md.html/deleting-an-edge-between-vertices",
          "scopedId": "deleting-an-edge-between-vertices",
          "level": 4,
          "html": "Deleting an edge between vertices",
          "text": "Deleting an edge between vertices"
        },
        {
          "id": "/docs/readme-md.html/insert-record",
          "scopedId": "insert-record",
          "level": 4,
          "html": "Insert Record",
          "text": "Insert Record"
        },
        {
          "id": "/docs/readme-md.html/update-record",
          "scopedId": "update-record",
          "level": 4,
          "html": "Update Record",
          "text": "Update Record"
        },
        {
          "id": "/docs/readme-md.html/delete-record",
          "scopedId": "delete-record",
          "level": 4,
          "html": "Delete Record",
          "text": "Delete Record"
        },
        {
          "id": "/docs/readme-md.html/select-records",
          "scopedId": "select-records",
          "level": 4,
          "html": "Select Records",
          "text": "Select Records"
        },
        {
          "id": "/docs/readme-md.html/text-search",
          "scopedId": "text-search",
          "level": 4,
          "html": "Text Search",
          "text": "Text Search"
        },
        {
          "id": "/docs/readme-md.html/select-records-with-fetch-plan",
          "scopedId": "select-records-with-fetch-plan",
          "level": 4,
          "html": "Select Records with Fetch Plan",
          "text": "Select Records with Fetch Plan"
        },
        {
          "id": "/docs/readme-md.html/select-an-expression",
          "scopedId": "select-an-expression",
          "level": 4,
          "html": "Select an expression",
          "text": "Select an expression"
        },
        {
          "id": "/docs/readme-md.html/traverse-records",
          "scopedId": "traverse-records",
          "level": 4,
          "html": "Traverse Records",
          "text": "Traverse Records"
        },
        {
          "id": "/docs/readme-md.html/return-a-specific-field",
          "scopedId": "return-a-specific-field",
          "level": 4,
          "html": "Return a specific field",
          "text": "Return a specific field"
        },
        {
          "id": "/docs/readme-md.html/transform-a-field",
          "scopedId": "transform-a-field",
          "level": 4,
          "html": "Transform a field",
          "text": "Transform a field"
        },
        {
          "id": "/docs/readme-md.html/transform-a-record",
          "scopedId": "transform-a-record",
          "level": 4,
          "html": "Transform a record",
          "text": "Transform a record"
        },
        {
          "id": "/docs/readme-md.html/specify-default-values",
          "scopedId": "specify-default-values",
          "level": 4,
          "html": "Specify default values",
          "text": "Specify default values"
        },
        {
          "id": "/docs/readme-md.html/put-a-map-entry-into-a-map",
          "scopedId": "put-a-map-entry-into-a-map",
          "level": 4,
          "html": "Put a map entry into a map",
          "text": "Put a map entry into a map"
        },
        {
          "id": "/docs/readme-md.html/transaction-builder",
          "scopedId": "transaction-builder",
          "level": 3,
          "html": "Transaction Builder",
          "text": "Transaction Builder"
        },
        {
          "id": "/docs/readme-md.html/batch-script",
          "scopedId": "batch-script",
          "level": 3,
          "html": "Batch Script",
          "text": "Batch Script"
        },
        {
          "id": "/docs/readme-md.html/function-api",
          "scopedId": "function-api",
          "level": 3,
          "html": "Function API",
          "text": "Function API"
        },
        {
          "id": "/docs/readme-md.html/events",
          "scopedId": "events",
          "level": 3,
          "html": "Events",
          "text": "Events"
        },
        {
          "id": "/docs/readme-md.html/beginquery",
          "scopedId": "beginquery",
          "level": 4,
          "html": "<code>beginQuery</code>",
          "text": "beginQuery"
        },
        {
          "id": "/docs/readme-md.html/endquery",
          "scopedId": "endquery",
          "level": 4,
          "html": "<code>endQuery</code>",
          "text": "endQuery"
        },
        {
          "id": "/docs/readme-md.html/cli",
          "scopedId": "cli",
          "level": 2,
          "html": "CLI",
          "text": "CLI"
        },
        {
          "id": "/docs/readme-md.html/database-cli-commands",
          "scopedId": "database-cli-commands",
          "level": 3,
          "html": "Database CLI Commands.",
          "text": "Database CLI Commands."
        },
        {
          "id": "/docs/readme-md.html/listing-all-the-databases-on-the-server",
          "scopedId": "listing-all-the-databases-on-the-server",
          "level": 4,
          "html": "Listing all the databases on the server.",
          "text": "Listing all the databases on the server."
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-database",
          "scopedId": "creating-a-new-database",
          "level": 4,
          "html": "Creating a new database",
          "text": "Creating a new database"
        },
        {
          "id": "/docs/readme-md.html/destroying-an-existing-database",
          "scopedId": "destroying-an-existing-database",
          "level": 4,
          "html": "Destroying an existing database",
          "text": "Destroying an existing database"
        },
        {
          "id": "/docs/readme-md.html/migrations",
          "scopedId": "migrations",
          "level": 3,
          "html": "Migrations",
          "text": "Migrations"
        },
        {
          "id": "/docs/readme-md.html/listing-the-available-migrations",
          "scopedId": "listing-the-available-migrations",
          "level": 4,
          "html": "Listing the available migrations",
          "text": "Listing the available migrations"
        },
        {
          "id": "/docs/readme-md.html/creating-a-new-migration",
          "scopedId": "creating-a-new-migration",
          "level": 4,
          "html": "Creating a new migration",
          "text": "Creating a new migration"
        },
        {
          "id": "/docs/readme-md.html/migrating-up-fully",
          "scopedId": "migrating-up-fully",
          "level": 4,
          "html": "Migrating up fully",
          "text": "Migrating up fully"
        },
        {
          "id": "/docs/readme-md.html/migrating-up-by-1",
          "scopedId": "migrating-up-by-1",
          "level": 4,
          "html": "Migrating up by 1",
          "text": "Migrating up by 1"
        },
        {
          "id": "/docs/readme-md.html/migrating-down-fully",
          "scopedId": "migrating-down-fully",
          "level": 4,
          "html": "Migrating down fully",
          "text": "Migrating down fully"
        },
        {
          "id": "/docs/readme-md.html/migrating-down-by-1",
          "scopedId": "migrating-down-by-1",
          "level": 4,
          "html": "Migrating down by 1",
          "text": "Migrating down by 1"
        },
        {
          "id": "/docs/readme-md.html/troubleshooting",
          "scopedId": "troubleshooting",
          "level": 2,
          "html": "Troubleshooting",
          "text": "Troubleshooting"
        },
        {
          "id": "/docs/readme-md.html/history",
          "scopedId": "history",
          "level": 2,
          "html": "History",
          "text": "History"
        },
        {
          "id": "/docs/readme-md.html/notes-for-contributors",
          "scopedId": "notes-for-contributors",
          "level": 3,
          "html": "Notes for contributors",
          "text": "Notes for contributors"
        },
        {
          "id": "/docs/readme-md.html/changes",
          "scopedId": "changes",
          "level": 3,
          "html": "Changes",
          "text": "Changes"
        },
        {
          "id": "/docs/readme-md.html/license",
          "scopedId": "license",
          "level": 3,
          "html": "License",
          "text": "License"
        }
      ]
    },
    "entities": [
      "docs/readme-md/orientjs-driver",
      "docs/readme-md/supported-versions",
      "docs/readme-md/installation",
      "docs/readme-md/running-tests",
      "docs/readme-md/features",
      "docs/readme-md/table-of-contents",
      "docs/readme-md/configuring-the-client",
      "docs/readme-md/use-jwt",
      "docs/readme-md/distributed-support-experimental",
      "docs/readme-md/server-api",
      "docs/readme-md/listing-the-databases-on-the-server",
      "docs/readme-md/creating-a-new-database",
      "docs/readme-md/database-api",
      "docs/readme-md/using-an-existing-database",
      "docs/readme-md/using-an-existing-database-with-credentials",
      "docs/readme-md/using-standalone-db-object-without-server",
      "docs/readme-md/record-api",
      "docs/readme-md/loading-a-record-by-rid",
      "docs/readme-md/deleting-a-record",
      "docs/readme-md/class-api",
      "docs/readme-md/listing-all-the-classes-in-the-database",
      "docs/readme-md/creating-a-new-class",
      "docs/readme-md/creating-a-new-class-that-extends-another",
      "docs/readme-md/getting-an-existing-class",
      "docs/readme-md/updating-an-existing-class",
      "docs/readme-md/listing-properties-in-a-class",
      "docs/readme-md/adding-a-property-to-a-class",
      "docs/readme-md/deleting-a-property-from-a-class",
      "docs/readme-md/renaming-a-property-on-a-class",
      "docs/readme-md/creating-a-record-for-a-class",
      "docs/readme-md/listing-records-in-a-class",
      "docs/readme-md/creating-raw-binary-records",
      "docs/readme-md/index-api",
      "docs/readme-md/create-a-new-index-for-a-class-property",
      "docs/readme-md/get-entry-from-class-property-index",
      "docs/readme-md/query",
      "docs/readme-md/execute-an-insert-query",
      "docs/readme-md/execute-a-select-query-with-params",
      "docs/readme-md/raw-execution-of-a-query-string-with-params",
      "docs/readme-md/query-builder",
      "docs/readme-md/creating-a-new-empty-vertex",
      "docs/readme-md/creating-a-new-vertex-with-some-properties",
      "docs/readme-md/deleting-a-vertex",
      "docs/readme-md/creating-a-simple-edge-between-vertices",
      "docs/readme-md/creating-an-edge-with-properties",
      "docs/readme-md/deleting-an-edge-between-vertices",
      "docs/readme-md/insert-record",
      "docs/readme-md/update-record",
      "docs/readme-md/delete-record",
      "docs/readme-md/select-records",
      "docs/readme-md/text-search",
      "docs/readme-md/select-records-with-fetch-plan",
      "docs/readme-md/select-an-expression",
      "docs/readme-md/traverse-records",
      "docs/readme-md/return-a-specific-field",
      "docs/readme-md/transform-a-field",
      "docs/readme-md/transform-a-record",
      "docs/readme-md/specify-default-values",
      "docs/readme-md/put-a-map-entry-into-a-map",
      "docs/readme-md/transaction-builder",
      "docs/readme-md/batch-script",
      "docs/readme-md/function-api",
      "docs/readme-md/events",
      "docs/readme-md/beginquery",
      "docs/readme-md/endquery",
      "docs/readme-md/cli",
      "docs/readme-md/database-cli-commands",
      "docs/readme-md/listing-all-the-databases-on-the-server",
      "docs/readme-md/creating-a-new-database",
      "docs/readme-md/destroying-an-existing-database",
      "docs/readme-md/migrations",
      "docs/readme-md/listing-the-available-migrations",
      "docs/readme-md/creating-a-new-migration",
      "docs/readme-md/migrating-up-fully",
      "docs/readme-md/migrating-up-by-1",
      "docs/readme-md/migrating-down-fully",
      "docs/readme-md/migrating-down-by-1",
      "docs/readme-md/troubleshooting",
      "docs/readme-md/history",
      "docs/readme-md/notes-for-contributors",
      "docs/readme-md/changes",
      "docs/readme-md/license"
    ],
    "type": "Document",
    "parentNode": "docs",
    "symbol": "/",
    "meta": {
      "href": "/docs/readme-md.html",
      "anchor": "docs-readme-md",
      "gitStats": {
        "filePath": "README.md",
        "lastCommittedAt": 1461922604,
        "committers": {
          "lvca@users.noreply.github.com": "Luca Garulli",
          "charles.pick@gmail.com": "Charles Pick",
          "maggiolo00@gmail.com": "maggiolo00",
          "gabipetrovay@gmail.com": "Gabriel Petrovay",
          "federico@fissore.org": "Federico Fissore",
          "bizauionica@yahoo.com": "♩ Ionică Bizău ♫ ♪",
          "radusamson@ymail.com": "Samson Radu",
          "giraldo@nitrogenlabs.com": "Giraldo Rosales",
          "gabriele.ds@gmail.com": "Gabriele Di Stefano",
          "info@orangemug.co.uk": "orangemug",
          "kelvin9302104@gmail.com": "Kelvin-Ng",
          "gerard@gsole.cat": "Gerard"
        }
      }
    },
    "uid": "docs/readme-md",
    "indices": {
      "readme-md": 1
    }
  },
  "docs/readme-md/orientjs-driver": {
    "id": "orientjs-driver",
    "title": "OrientJS driver",
    "properties": {
      "id": "",
      "scopedId": "orientjs-driver",
      "level": 1,
      "html": "OrientJS driver",
      "text": "OrientJS driver"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-orientjs-driver",
      "anchor": "docs-readme-md-orientjs-driver"
    },
    "uid": "docs/readme-md/orientjs-driver",
    "indices": {
      "orientjs-driver": 1,
      "readme-md/orientjs-driver": 2
    }
  },
  "docs/readme-md/supported-versions": {
    "id": "supported-versions",
    "title": "Supported Versions",
    "properties": {
      "id": "",
      "scopedId": "supported-versions",
      "level": 1,
      "html": "Supported Versions",
      "text": "Supported Versions"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-supported-versions",
      "anchor": "docs-readme-md-supported-versions"
    },
    "uid": "docs/readme-md/supported-versions",
    "indices": {
      "supported-versions": 1,
      "readme-md/supported-versions": 2
    }
  },
  "docs/readme-md/installation": {
    "id": "installation",
    "title": "Installation",
    "properties": {
      "id": "",
      "scopedId": "installation",
      "level": 1,
      "html": "Installation",
      "text": "Installation"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-installation",
      "anchor": "docs-readme-md-installation"
    },
    "uid": "docs/readme-md/installation",
    "indices": {
      "installation": 1,
      "readme-md/installation": 2
    }
  },
  "docs/readme-md/running-tests": {
    "id": "running-tests",
    "title": "Running Tests",
    "properties": {
      "id": "",
      "scopedId": "running-tests",
      "level": 1,
      "html": "Running Tests",
      "text": "Running Tests"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-running-tests",
      "anchor": "docs-readme-md-running-tests"
    },
    "uid": "docs/readme-md/running-tests",
    "indices": {
      "running-tests": 1,
      "readme-md/running-tests": 2
    }
  },
  "docs/readme-md/features": {
    "id": "features",
    "title": "Features",
    "properties": {
      "id": "",
      "scopedId": "features",
      "level": 1,
      "html": "Features",
      "text": "Features"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-features",
      "anchor": "docs-readme-md-features"
    },
    "uid": "docs/readme-md/features",
    "indices": {
      "features": 1,
      "readme-md/features": 2
    }
  },
  "docs/readme-md/table-of-contents": {
    "id": "table-of-contents",
    "title": "Table of Contents",
    "properties": {
      "id": "",
      "scopedId": "table-of-contents",
      "level": 1,
      "html": "Table of Contents",
      "text": "Table of Contents"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-table-of-contents",
      "anchor": "docs-readme-md-table-of-contents"
    },
    "uid": "docs/readme-md/table-of-contents",
    "indices": {
      "table-of-contents": 1,
      "readme-md/table-of-contents": 2
    }
  },
  "docs/readme-md/configuring-the-client": {
    "id": "configuring-the-client",
    "title": "Configuring the Client",
    "properties": {
      "id": "/configuring-the-client",
      "scopedId": "configuring-the-client",
      "level": 2,
      "html": "Configuring the Client",
      "text": "Configuring the Client"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-configuring-the-client",
      "anchor": "docs-readme-md-configuring-the-client"
    },
    "uid": "docs/readme-md/configuring-the-client",
    "indices": {
      "configuring-the-client": 1,
      "readme-md/configuring-the-client": 2
    }
  },
  "docs/readme-md/use-jwt": {
    "id": "use-jwt",
    "title": "Use JWT",
    "properties": {
      "id": "/use-jwt",
      "scopedId": "use-jwt",
      "level": 3,
      "html": "Use <a href=\"http://orientdb.com/docs/2.1/Network-Binary-Protocol.html#token\" target=\"_blank\">JWT</a>",
      "text": "Use JWT"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-use-jwt",
      "anchor": "docs-readme-md-use-jwt"
    },
    "uid": "docs/readme-md/use-jwt",
    "indices": {
      "use-jwt": 1,
      "readme-md/use-jwt": 2
    }
  },
  "docs/readme-md/distributed-support-experimental": {
    "id": "distributed-support-experimental",
    "title": "Distributed Support (experimental)",
    "properties": {
      "id": "/distributed-support-experimental",
      "scopedId": "distributed-support-experimental",
      "level": 3,
      "html": "Distributed Support (experimental)",
      "text": "Distributed Support (experimental)"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-distributed-support-experimental",
      "anchor": "docs-readme-md-distributed-support-experimental"
    },
    "uid": "docs/readme-md/distributed-support-experimental",
    "indices": {
      "distributed-support-experimental": 1,
      "readme-md/distributed-support-experimental": 2
    }
  },
  "docs/readme-md/server-api": {
    "id": "server-api",
    "title": "Server API",
    "properties": {
      "id": "/server-api",
      "scopedId": "server-api",
      "level": 2,
      "html": "Server API",
      "text": "Server API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-server-api",
      "anchor": "docs-readme-md-server-api"
    },
    "uid": "docs/readme-md/server-api",
    "indices": {
      "server-api": 1,
      "readme-md/server-api": 2
    }
  },
  "docs/readme-md/listing-the-databases-on-the-server": {
    "id": "listing-the-databases-on-the-server",
    "title": "Listing the databases on the server",
    "properties": {
      "id": "/listing-the-databases-on-the-server",
      "scopedId": "listing-the-databases-on-the-server",
      "level": 3,
      "html": "Listing the databases on the server",
      "text": "Listing the databases on the server"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-the-databases-on-the-server",
      "anchor": "docs-readme-md-listing-the-databases-on-the-server"
    },
    "uid": "docs/readme-md/listing-the-databases-on-the-server",
    "indices": {
      "listing-the-databases-on-the-server": 1,
      "readme-md/listing-the-databases-on-the-server": 2
    }
  },
  "docs/readme-md/creating-a-new-database": {
    "id": "creating-a-new-database",
    "title": "Creating a new database",
    "properties": {
      "id": "/creating-a-new-database",
      "scopedId": "creating-a-new-database",
      "level": 4,
      "html": "Creating a new database",
      "text": "Creating a new database"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-database",
      "anchor": "docs-readme-md-creating-a-new-database"
    },
    "uid": "docs/readme-md/creating-a-new-database",
    "indices": {
      "creating-a-new-database": 1,
      "readme-md/creating-a-new-database": 2
    }
  },
  "docs/readme-md/database-api": {
    "id": "database-api",
    "title": "Database API",
    "properties": {
      "id": "/database-api",
      "scopedId": "database-api",
      "level": 2,
      "html": "Database API",
      "text": "Database API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-database-api",
      "anchor": "docs-readme-md-database-api"
    },
    "uid": "docs/readme-md/database-api",
    "indices": {
      "database-api": 1,
      "readme-md/database-api": 2
    }
  },
  "docs/readme-md/using-an-existing-database": {
    "id": "using-an-existing-database",
    "title": "Using an existing database",
    "properties": {
      "id": "/using-an-existing-database",
      "scopedId": "using-an-existing-database",
      "level": 3,
      "html": "Using an existing database",
      "text": "Using an existing database"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-using-an-existing-database",
      "anchor": "docs-readme-md-using-an-existing-database"
    },
    "uid": "docs/readme-md/using-an-existing-database",
    "indices": {
      "using-an-existing-database": 1,
      "readme-md/using-an-existing-database": 2
    }
  },
  "docs/readme-md/using-an-existing-database-with-credentials": {
    "id": "using-an-existing-database-with-credentials",
    "title": "Using an existing database with credentials",
    "properties": {
      "id": "/using-an-existing-database-with-credentials",
      "scopedId": "using-an-existing-database-with-credentials",
      "level": 3,
      "html": "Using an existing database with credentials",
      "text": "Using an existing database with credentials"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-using-an-existing-database-with-credentials",
      "anchor": "docs-readme-md-using-an-existing-database-with-credentials"
    },
    "uid": "docs/readme-md/using-an-existing-database-with-credentials",
    "indices": {
      "using-an-existing-database-with-credentials": 1,
      "readme-md/using-an-existing-database-with-credentials": 2
    }
  },
  "docs/readme-md/using-standalone-db-object-without-server": {
    "id": "using-standalone-db-object-without-server",
    "title": "Using standalone db object without Server",
    "properties": {
      "id": "/using-standalone-db-object-without-server",
      "scopedId": "using-standalone-db-object-without-server",
      "level": 3,
      "html": "Using standalone db object without Server",
      "text": "Using standalone db object without Server"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-using-standalone-db-object-without-server",
      "anchor": "docs-readme-md-using-standalone-db-object-without-server"
    },
    "uid": "docs/readme-md/using-standalone-db-object-without-server",
    "indices": {
      "using-standalone-db-object-without-server": 1,
      "readme-md/using-standalone-db-object-without-server": 2
    }
  },
  "docs/readme-md/record-api": {
    "id": "record-api",
    "title": "Record API",
    "properties": {
      "id": "/record-api",
      "scopedId": "record-api",
      "level": 3,
      "html": "Record API",
      "text": "Record API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-record-api",
      "anchor": "docs-readme-md-record-api"
    },
    "uid": "docs/readme-md/record-api",
    "indices": {
      "record-api": 1,
      "readme-md/record-api": 2
    }
  },
  "docs/readme-md/loading-a-record-by-rid": {
    "id": "loading-a-record-by-rid",
    "title": "Loading a record by RID.",
    "properties": {
      "id": "/loading-a-record-by-rid",
      "scopedId": "loading-a-record-by-rid",
      "level": 4,
      "html": "Loading a record by RID.",
      "text": "Loading a record by RID."
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-loading-a-record-by-rid",
      "anchor": "docs-readme-md-loading-a-record-by-rid"
    },
    "uid": "docs/readme-md/loading-a-record-by-rid",
    "indices": {
      "loading-a-record-by-rid": 1,
      "readme-md/loading-a-record-by-rid": 2
    }
  },
  "docs/readme-md/deleting-a-record": {
    "id": "deleting-a-record",
    "title": "Deleting a record",
    "properties": {
      "id": "/deleting-a-record",
      "scopedId": "deleting-a-record",
      "level": 4,
      "html": "Deleting a record",
      "text": "Deleting a record"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-deleting-a-record",
      "anchor": "docs-readme-md-deleting-a-record"
    },
    "uid": "docs/readme-md/deleting-a-record",
    "indices": {
      "deleting-a-record": 1,
      "readme-md/deleting-a-record": 2
    }
  },
  "docs/readme-md/class-api": {
    "id": "class-api",
    "title": "Class API",
    "properties": {
      "id": "/class-api",
      "scopedId": "class-api",
      "level": 3,
      "html": "Class API",
      "text": "Class API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-class-api",
      "anchor": "docs-readme-md-class-api"
    },
    "uid": "docs/readme-md/class-api",
    "indices": {
      "class-api": 1,
      "readme-md/class-api": 2
    }
  },
  "docs/readme-md/listing-all-the-classes-in-the-database": {
    "id": "listing-all-the-classes-in-the-database",
    "title": "Listing all the classes in the database",
    "properties": {
      "id": "/listing-all-the-classes-in-the-database",
      "scopedId": "listing-all-the-classes-in-the-database",
      "level": 4,
      "html": "Listing all the classes in the database",
      "text": "Listing all the classes in the database"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-all-the-classes-in-the-database",
      "anchor": "docs-readme-md-listing-all-the-classes-in-the-database"
    },
    "uid": "docs/readme-md/listing-all-the-classes-in-the-database",
    "indices": {
      "listing-all-the-classes-in-the-database": 1,
      "readme-md/listing-all-the-classes-in-the-database": 2
    }
  },
  "docs/readme-md/creating-a-new-class": {
    "id": "creating-a-new-class",
    "title": "Creating a new class",
    "properties": {
      "id": "/creating-a-new-class",
      "scopedId": "creating-a-new-class",
      "level": 4,
      "html": "Creating a new class",
      "text": "Creating a new class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-class",
      "anchor": "docs-readme-md-creating-a-new-class"
    },
    "uid": "docs/readme-md/creating-a-new-class",
    "indices": {
      "creating-a-new-class": 1,
      "readme-md/creating-a-new-class": 2
    }
  },
  "docs/readme-md/creating-a-new-class-that-extends-another": {
    "id": "creating-a-new-class-that-extends-another",
    "title": "Creating a new class that extends another",
    "properties": {
      "id": "/creating-a-new-class-that-extends-another",
      "scopedId": "creating-a-new-class-that-extends-another",
      "level": 4,
      "html": "Creating a new class that extends another",
      "text": "Creating a new class that extends another"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-class-that-extends-another",
      "anchor": "docs-readme-md-creating-a-new-class-that-extends-another"
    },
    "uid": "docs/readme-md/creating-a-new-class-that-extends-another",
    "indices": {
      "creating-a-new-class-that-extends-another": 1,
      "readme-md/creating-a-new-class-that-extends-another": 2
    }
  },
  "docs/readme-md/getting-an-existing-class": {
    "id": "getting-an-existing-class",
    "title": "Getting an existing class",
    "properties": {
      "id": "/getting-an-existing-class",
      "scopedId": "getting-an-existing-class",
      "level": 4,
      "html": "Getting an existing class",
      "text": "Getting an existing class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-getting-an-existing-class",
      "anchor": "docs-readme-md-getting-an-existing-class"
    },
    "uid": "docs/readme-md/getting-an-existing-class",
    "indices": {
      "getting-an-existing-class": 1,
      "readme-md/getting-an-existing-class": 2
    }
  },
  "docs/readme-md/updating-an-existing-class": {
    "id": "updating-an-existing-class",
    "title": "Updating an existing class",
    "properties": {
      "id": "/updating-an-existing-class",
      "scopedId": "updating-an-existing-class",
      "level": 4,
      "html": "Updating an existing class",
      "text": "Updating an existing class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-updating-an-existing-class",
      "anchor": "docs-readme-md-updating-an-existing-class"
    },
    "uid": "docs/readme-md/updating-an-existing-class",
    "indices": {
      "updating-an-existing-class": 1,
      "readme-md/updating-an-existing-class": 2
    }
  },
  "docs/readme-md/listing-properties-in-a-class": {
    "id": "listing-properties-in-a-class",
    "title": "Listing properties in a class",
    "properties": {
      "id": "/listing-properties-in-a-class",
      "scopedId": "listing-properties-in-a-class",
      "level": 4,
      "html": "Listing properties in a class",
      "text": "Listing properties in a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-properties-in-a-class",
      "anchor": "docs-readme-md-listing-properties-in-a-class"
    },
    "uid": "docs/readme-md/listing-properties-in-a-class",
    "indices": {
      "listing-properties-in-a-class": 1,
      "readme-md/listing-properties-in-a-class": 2
    }
  },
  "docs/readme-md/adding-a-property-to-a-class": {
    "id": "adding-a-property-to-a-class",
    "title": "Adding a property to a class",
    "properties": {
      "id": "/adding-a-property-to-a-class",
      "scopedId": "adding-a-property-to-a-class",
      "level": 4,
      "html": "Adding a property to a class",
      "text": "Adding a property to a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-adding-a-property-to-a-class",
      "anchor": "docs-readme-md-adding-a-property-to-a-class"
    },
    "uid": "docs/readme-md/adding-a-property-to-a-class",
    "indices": {
      "adding-a-property-to-a-class": 1,
      "readme-md/adding-a-property-to-a-class": 2
    }
  },
  "docs/readme-md/deleting-a-property-from-a-class": {
    "id": "deleting-a-property-from-a-class",
    "title": "Deleting a property from a class",
    "properties": {
      "id": "/deleting-a-property-from-a-class",
      "scopedId": "deleting-a-property-from-a-class",
      "level": 4,
      "html": "Deleting a property from a class",
      "text": "Deleting a property from a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-deleting-a-property-from-a-class",
      "anchor": "docs-readme-md-deleting-a-property-from-a-class"
    },
    "uid": "docs/readme-md/deleting-a-property-from-a-class",
    "indices": {
      "deleting-a-property-from-a-class": 1,
      "readme-md/deleting-a-property-from-a-class": 2
    }
  },
  "docs/readme-md/renaming-a-property-on-a-class": {
    "id": "renaming-a-property-on-a-class",
    "title": "Renaming a property on a class",
    "properties": {
      "id": "/renaming-a-property-on-a-class",
      "scopedId": "renaming-a-property-on-a-class",
      "level": 4,
      "html": "Renaming a property on a class",
      "text": "Renaming a property on a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-renaming-a-property-on-a-class",
      "anchor": "docs-readme-md-renaming-a-property-on-a-class"
    },
    "uid": "docs/readme-md/renaming-a-property-on-a-class",
    "indices": {
      "renaming-a-property-on-a-class": 1,
      "readme-md/renaming-a-property-on-a-class": 2
    }
  },
  "docs/readme-md/creating-a-record-for-a-class": {
    "id": "creating-a-record-for-a-class",
    "title": "Creating a record for a class",
    "properties": {
      "id": "/creating-a-record-for-a-class",
      "scopedId": "creating-a-record-for-a-class",
      "level": 4,
      "html": "Creating a record for a class",
      "text": "Creating a record for a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-record-for-a-class",
      "anchor": "docs-readme-md-creating-a-record-for-a-class"
    },
    "uid": "docs/readme-md/creating-a-record-for-a-class",
    "indices": {
      "creating-a-record-for-a-class": 1,
      "readme-md/creating-a-record-for-a-class": 2
    }
  },
  "docs/readme-md/listing-records-in-a-class": {
    "id": "listing-records-in-a-class",
    "title": "Listing records in a class",
    "properties": {
      "id": "/listing-records-in-a-class",
      "scopedId": "listing-records-in-a-class",
      "level": 4,
      "html": "Listing records in a class",
      "text": "Listing records in a class"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-records-in-a-class",
      "anchor": "docs-readme-md-listing-records-in-a-class"
    },
    "uid": "docs/readme-md/listing-records-in-a-class",
    "indices": {
      "listing-records-in-a-class": 1,
      "readme-md/listing-records-in-a-class": 2
    }
  },
  "docs/readme-md/creating-raw-binary-records": {
    "id": "creating-raw-binary-records",
    "title": "Creating raw binary records",
    "properties": {
      "id": "/creating-raw-binary-records",
      "scopedId": "creating-raw-binary-records",
      "level": 3,
      "html": "Creating raw binary records",
      "text": "Creating raw binary records"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-raw-binary-records",
      "anchor": "docs-readme-md-creating-raw-binary-records"
    },
    "uid": "docs/readme-md/creating-raw-binary-records",
    "indices": {
      "creating-raw-binary-records": 1,
      "readme-md/creating-raw-binary-records": 2
    }
  },
  "docs/readme-md/index-api": {
    "id": "index-api",
    "title": "Index API",
    "properties": {
      "id": "/index-api",
      "scopedId": "index-api",
      "level": 3,
      "html": "Index API",
      "text": "Index API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-index-api",
      "anchor": "docs-readme-md-index-api"
    },
    "uid": "docs/readme-md/index-api",
    "indices": {
      "index-api": 1,
      "readme-md/index-api": 2
    }
  },
  "docs/readme-md/create-a-new-index-for-a-class-property": {
    "id": "create-a-new-index-for-a-class-property",
    "title": "Create a new index for a class property",
    "properties": {
      "id": "/create-a-new-index-for-a-class-property",
      "scopedId": "create-a-new-index-for-a-class-property",
      "level": 3,
      "html": "Create a new index for a class property",
      "text": "Create a new index for a class property"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-create-a-new-index-for-a-class-property",
      "anchor": "docs-readme-md-create-a-new-index-for-a-class-property"
    },
    "uid": "docs/readme-md/create-a-new-index-for-a-class-property",
    "indices": {
      "create-a-new-index-for-a-class-property": 1,
      "readme-md/create-a-new-index-for-a-class-property": 2
    }
  },
  "docs/readme-md/get-entry-from-class-property-index": {
    "id": "get-entry-from-class-property-index",
    "title": "Get entry from class property index",
    "properties": {
      "id": "/get-entry-from-class-property-index",
      "scopedId": "get-entry-from-class-property-index",
      "level": 4,
      "html": "Get entry from class property index",
      "text": "Get entry from class property index"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-get-entry-from-class-property-index",
      "anchor": "docs-readme-md-get-entry-from-class-property-index"
    },
    "uid": "docs/readme-md/get-entry-from-class-property-index",
    "indices": {
      "get-entry-from-class-property-index": 1,
      "readme-md/get-entry-from-class-property-index": 2
    }
  },
  "docs/readme-md/query": {
    "id": "query",
    "title": "Query",
    "properties": {
      "id": "/query",
      "scopedId": "query",
      "level": 3,
      "html": "Query",
      "text": "Query"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-query",
      "anchor": "docs-readme-md-query"
    },
    "uid": "docs/readme-md/query",
    "indices": {
      "query": 1,
      "readme-md/query": 2
    }
  },
  "docs/readme-md/execute-an-insert-query": {
    "id": "execute-an-insert-query",
    "title": "Execute an Insert Query",
    "properties": {
      "id": "/execute-an-insert-query",
      "scopedId": "execute-an-insert-query",
      "level": 4,
      "html": "Execute an Insert Query",
      "text": "Execute an Insert Query"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-execute-an-insert-query",
      "anchor": "docs-readme-md-execute-an-insert-query"
    },
    "uid": "docs/readme-md/execute-an-insert-query",
    "indices": {
      "execute-an-insert-query": 1,
      "readme-md/execute-an-insert-query": 2
    }
  },
  "docs/readme-md/execute-a-select-query-with-params": {
    "id": "execute-a-select-query-with-params",
    "title": "Execute a Select Query with Params",
    "properties": {
      "id": "/execute-a-select-query-with-params",
      "scopedId": "execute-a-select-query-with-params",
      "level": 4,
      "html": "Execute a Select Query with Params",
      "text": "Execute a Select Query with Params"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-execute-a-select-query-with-params",
      "anchor": "docs-readme-md-execute-a-select-query-with-params"
    },
    "uid": "docs/readme-md/execute-a-select-query-with-params",
    "indices": {
      "execute-a-select-query-with-params": 1,
      "readme-md/execute-a-select-query-with-params": 2
    }
  },
  "docs/readme-md/raw-execution-of-a-query-string-with-params": {
    "id": "raw-execution-of-a-query-string-with-params",
    "title": "Raw Execution of a Query String with Params",
    "properties": {
      "id": "/raw-execution-of-a-query-string-with-params",
      "scopedId": "raw-execution-of-a-query-string-with-params",
      "level": 5,
      "html": "Raw Execution of a Query String with Params",
      "text": "Raw Execution of a Query String with Params"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-raw-execution-of-a-query-string-with-params",
      "anchor": "docs-readme-md-raw-execution-of-a-query-string-with-params"
    },
    "uid": "docs/readme-md/raw-execution-of-a-query-string-with-params",
    "indices": {
      "raw-execution-of-a-query-string-with-params": 1,
      "readme-md/raw-execution-of-a-query-string-with-params": 2
    }
  },
  "docs/readme-md/query-builder": {
    "id": "query-builder",
    "title": "Query Builder",
    "properties": {
      "id": "/query-builder",
      "scopedId": "query-builder",
      "level": 3,
      "html": "Query Builder",
      "text": "Query Builder"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-query-builder",
      "anchor": "docs-readme-md-query-builder"
    },
    "uid": "docs/readme-md/query-builder",
    "indices": {
      "query-builder": 1,
      "readme-md/query-builder": 2
    }
  },
  "docs/readme-md/creating-a-new-empty-vertex": {
    "id": "creating-a-new-empty-vertex",
    "title": "Creating a new, empty vertex",
    "properties": {
      "id": "/creating-a-new-empty-vertex",
      "scopedId": "creating-a-new-empty-vertex",
      "level": 4,
      "html": "Creating a new, empty vertex",
      "text": "Creating a new, empty vertex"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-empty-vertex",
      "anchor": "docs-readme-md-creating-a-new-empty-vertex"
    },
    "uid": "docs/readme-md/creating-a-new-empty-vertex",
    "indices": {
      "creating-a-new-empty-vertex": 1,
      "readme-md/creating-a-new-empty-vertex": 2
    }
  },
  "docs/readme-md/creating-a-new-vertex-with-some-properties": {
    "id": "creating-a-new-vertex-with-some-properties",
    "title": "Creating a new vertex with some properties",
    "properties": {
      "id": "/creating-a-new-vertex-with-some-properties",
      "scopedId": "creating-a-new-vertex-with-some-properties",
      "level": 4,
      "html": "Creating a new vertex with some properties",
      "text": "Creating a new vertex with some properties"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-vertex-with-some-properties",
      "anchor": "docs-readme-md-creating-a-new-vertex-with-some-properties"
    },
    "uid": "docs/readme-md/creating-a-new-vertex-with-some-properties",
    "indices": {
      "creating-a-new-vertex-with-some-properties": 1,
      "readme-md/creating-a-new-vertex-with-some-properties": 2
    }
  },
  "docs/readme-md/deleting-a-vertex": {
    "id": "deleting-a-vertex",
    "title": "Deleting a vertex",
    "properties": {
      "id": "/deleting-a-vertex",
      "scopedId": "deleting-a-vertex",
      "level": 4,
      "html": "Deleting a vertex",
      "text": "Deleting a vertex"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-deleting-a-vertex",
      "anchor": "docs-readme-md-deleting-a-vertex"
    },
    "uid": "docs/readme-md/deleting-a-vertex",
    "indices": {
      "deleting-a-vertex": 1,
      "readme-md/deleting-a-vertex": 2
    }
  },
  "docs/readme-md/creating-a-simple-edge-between-vertices": {
    "id": "creating-a-simple-edge-between-vertices",
    "title": "Creating a simple edge between vertices",
    "properties": {
      "id": "/creating-a-simple-edge-between-vertices",
      "scopedId": "creating-a-simple-edge-between-vertices",
      "level": 4,
      "html": "Creating a simple edge between vertices",
      "text": "Creating a simple edge between vertices"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-simple-edge-between-vertices",
      "anchor": "docs-readme-md-creating-a-simple-edge-between-vertices"
    },
    "uid": "docs/readme-md/creating-a-simple-edge-between-vertices",
    "indices": {
      "creating-a-simple-edge-between-vertices": 1,
      "readme-md/creating-a-simple-edge-between-vertices": 2
    }
  },
  "docs/readme-md/creating-an-edge-with-properties": {
    "id": "creating-an-edge-with-properties",
    "title": "Creating an edge with properties",
    "properties": {
      "id": "/creating-an-edge-with-properties",
      "scopedId": "creating-an-edge-with-properties",
      "level": 4,
      "html": "Creating an edge with properties",
      "text": "Creating an edge with properties"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-an-edge-with-properties",
      "anchor": "docs-readme-md-creating-an-edge-with-properties"
    },
    "uid": "docs/readme-md/creating-an-edge-with-properties",
    "indices": {
      "creating-an-edge-with-properties": 1,
      "readme-md/creating-an-edge-with-properties": 2
    }
  },
  "docs/readme-md/deleting-an-edge-between-vertices": {
    "id": "deleting-an-edge-between-vertices",
    "title": "Deleting an edge between vertices",
    "properties": {
      "id": "/deleting-an-edge-between-vertices",
      "scopedId": "deleting-an-edge-between-vertices",
      "level": 4,
      "html": "Deleting an edge between vertices",
      "text": "Deleting an edge between vertices"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-deleting-an-edge-between-vertices",
      "anchor": "docs-readme-md-deleting-an-edge-between-vertices"
    },
    "uid": "docs/readme-md/deleting-an-edge-between-vertices",
    "indices": {
      "deleting-an-edge-between-vertices": 1,
      "readme-md/deleting-an-edge-between-vertices": 2
    }
  },
  "docs/readme-md/insert-record": {
    "id": "insert-record",
    "title": "Insert Record",
    "properties": {
      "id": "/insert-record",
      "scopedId": "insert-record",
      "level": 4,
      "html": "Insert Record",
      "text": "Insert Record"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-insert-record",
      "anchor": "docs-readme-md-insert-record"
    },
    "uid": "docs/readme-md/insert-record",
    "indices": {
      "insert-record": 1,
      "readme-md/insert-record": 2
    }
  },
  "docs/readme-md/update-record": {
    "id": "update-record",
    "title": "Update Record",
    "properties": {
      "id": "/update-record",
      "scopedId": "update-record",
      "level": 4,
      "html": "Update Record",
      "text": "Update Record"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-update-record",
      "anchor": "docs-readme-md-update-record"
    },
    "uid": "docs/readme-md/update-record",
    "indices": {
      "update-record": 1,
      "readme-md/update-record": 2
    }
  },
  "docs/readme-md/delete-record": {
    "id": "delete-record",
    "title": "Delete Record",
    "properties": {
      "id": "/delete-record",
      "scopedId": "delete-record",
      "level": 4,
      "html": "Delete Record",
      "text": "Delete Record"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-delete-record",
      "anchor": "docs-readme-md-delete-record"
    },
    "uid": "docs/readme-md/delete-record",
    "indices": {
      "delete-record": 1,
      "readme-md/delete-record": 2
    }
  },
  "docs/readme-md/select-records": {
    "id": "select-records",
    "title": "Select Records",
    "properties": {
      "id": "/select-records",
      "scopedId": "select-records",
      "level": 4,
      "html": "Select Records",
      "text": "Select Records"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-select-records",
      "anchor": "docs-readme-md-select-records"
    },
    "uid": "docs/readme-md/select-records",
    "indices": {
      "select-records": 1,
      "readme-md/select-records": 2
    }
  },
  "docs/readme-md/text-search": {
    "id": "text-search",
    "title": "Text Search",
    "properties": {
      "id": "/text-search",
      "scopedId": "text-search",
      "level": 4,
      "html": "Text Search",
      "text": "Text Search"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-text-search",
      "anchor": "docs-readme-md-text-search"
    },
    "uid": "docs/readme-md/text-search",
    "indices": {
      "text-search": 1,
      "readme-md/text-search": 2
    }
  },
  "docs/readme-md/select-records-with-fetch-plan": {
    "id": "select-records-with-fetch-plan",
    "title": "Select Records with Fetch Plan",
    "properties": {
      "id": "/select-records-with-fetch-plan",
      "scopedId": "select-records-with-fetch-plan",
      "level": 4,
      "html": "Select Records with Fetch Plan",
      "text": "Select Records with Fetch Plan"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-select-records-with-fetch-plan",
      "anchor": "docs-readme-md-select-records-with-fetch-plan"
    },
    "uid": "docs/readme-md/select-records-with-fetch-plan",
    "indices": {
      "select-records-with-fetch-plan": 1,
      "readme-md/select-records-with-fetch-plan": 2
    }
  },
  "docs/readme-md/select-an-expression": {
    "id": "select-an-expression",
    "title": "Select an expression",
    "properties": {
      "id": "/select-an-expression",
      "scopedId": "select-an-expression",
      "level": 4,
      "html": "Select an expression",
      "text": "Select an expression"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-select-an-expression",
      "anchor": "docs-readme-md-select-an-expression"
    },
    "uid": "docs/readme-md/select-an-expression",
    "indices": {
      "select-an-expression": 1,
      "readme-md/select-an-expression": 2
    }
  },
  "docs/readme-md/traverse-records": {
    "id": "traverse-records",
    "title": "Traverse Records",
    "properties": {
      "id": "/traverse-records",
      "scopedId": "traverse-records",
      "level": 4,
      "html": "Traverse Records",
      "text": "Traverse Records"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-traverse-records",
      "anchor": "docs-readme-md-traverse-records"
    },
    "uid": "docs/readme-md/traverse-records",
    "indices": {
      "traverse-records": 1,
      "readme-md/traverse-records": 2
    }
  },
  "docs/readme-md/return-a-specific-field": {
    "id": "return-a-specific-field",
    "title": "Return a specific field",
    "properties": {
      "id": "/return-a-specific-field",
      "scopedId": "return-a-specific-field",
      "level": 4,
      "html": "Return a specific field",
      "text": "Return a specific field"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-return-a-specific-field",
      "anchor": "docs-readme-md-return-a-specific-field"
    },
    "uid": "docs/readme-md/return-a-specific-field",
    "indices": {
      "return-a-specific-field": 1,
      "readme-md/return-a-specific-field": 2
    }
  },
  "docs/readme-md/transform-a-field": {
    "id": "transform-a-field",
    "title": "Transform a field",
    "properties": {
      "id": "/transform-a-field",
      "scopedId": "transform-a-field",
      "level": 4,
      "html": "Transform a field",
      "text": "Transform a field"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-transform-a-field",
      "anchor": "docs-readme-md-transform-a-field"
    },
    "uid": "docs/readme-md/transform-a-field",
    "indices": {
      "transform-a-field": 1,
      "readme-md/transform-a-field": 2
    }
  },
  "docs/readme-md/transform-a-record": {
    "id": "transform-a-record",
    "title": "Transform a record",
    "properties": {
      "id": "/transform-a-record",
      "scopedId": "transform-a-record",
      "level": 4,
      "html": "Transform a record",
      "text": "Transform a record"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-transform-a-record",
      "anchor": "docs-readme-md-transform-a-record"
    },
    "uid": "docs/readme-md/transform-a-record",
    "indices": {
      "transform-a-record": 1,
      "readme-md/transform-a-record": 2
    }
  },
  "docs/readme-md/specify-default-values": {
    "id": "specify-default-values",
    "title": "Specify default values",
    "properties": {
      "id": "/specify-default-values",
      "scopedId": "specify-default-values",
      "level": 4,
      "html": "Specify default values",
      "text": "Specify default values"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-specify-default-values",
      "anchor": "docs-readme-md-specify-default-values"
    },
    "uid": "docs/readme-md/specify-default-values",
    "indices": {
      "specify-default-values": 1,
      "readme-md/specify-default-values": 2
    }
  },
  "docs/readme-md/put-a-map-entry-into-a-map": {
    "id": "put-a-map-entry-into-a-map",
    "title": "Put a map entry into a map",
    "properties": {
      "id": "/put-a-map-entry-into-a-map",
      "scopedId": "put-a-map-entry-into-a-map",
      "level": 4,
      "html": "Put a map entry into a map",
      "text": "Put a map entry into a map"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-put-a-map-entry-into-a-map",
      "anchor": "docs-readme-md-put-a-map-entry-into-a-map"
    },
    "uid": "docs/readme-md/put-a-map-entry-into-a-map",
    "indices": {
      "put-a-map-entry-into-a-map": 1,
      "readme-md/put-a-map-entry-into-a-map": 2
    }
  },
  "docs/readme-md/transaction-builder": {
    "id": "transaction-builder",
    "title": "Transaction Builder",
    "properties": {
      "id": "/transaction-builder",
      "scopedId": "transaction-builder",
      "level": 3,
      "html": "Transaction Builder",
      "text": "Transaction Builder"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-transaction-builder",
      "anchor": "docs-readme-md-transaction-builder"
    },
    "uid": "docs/readme-md/transaction-builder",
    "indices": {
      "transaction-builder": 1,
      "readme-md/transaction-builder": 2
    }
  },
  "docs/readme-md/batch-script": {
    "id": "batch-script",
    "title": "Batch Script",
    "properties": {
      "id": "/batch-script",
      "scopedId": "batch-script",
      "level": 3,
      "html": "Batch Script",
      "text": "Batch Script"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-batch-script",
      "anchor": "docs-readme-md-batch-script"
    },
    "uid": "docs/readme-md/batch-script",
    "indices": {
      "batch-script": 1,
      "readme-md/batch-script": 2
    }
  },
  "docs/readme-md/function-api": {
    "id": "function-api",
    "title": "Function API",
    "properties": {
      "id": "/function-api",
      "scopedId": "function-api",
      "level": 3,
      "html": "Function API",
      "text": "Function API"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-function-api",
      "anchor": "docs-readme-md-function-api"
    },
    "uid": "docs/readme-md/function-api",
    "indices": {
      "function-api": 1,
      "readme-md/function-api": 2
    }
  },
  "docs/readme-md/events": {
    "id": "events",
    "title": "Events",
    "properties": {
      "id": "/events",
      "scopedId": "events",
      "level": 3,
      "html": "Events",
      "text": "Events"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-events",
      "anchor": "docs-readme-md-events"
    },
    "uid": "docs/readme-md/events",
    "indices": {
      "events": 1,
      "readme-md/events": 2
    }
  },
  "docs/readme-md/beginquery": {
    "id": "beginquery",
    "title": "beginQuery",
    "properties": {
      "id": "/beginquery",
      "scopedId": "beginquery",
      "level": 4,
      "html": "<code>beginQuery</code>",
      "text": "beginQuery"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-beginquery",
      "anchor": "docs-readme-md-beginquery"
    },
    "uid": "docs/readme-md/beginquery",
    "indices": {
      "beginquery": 1,
      "readme-md/beginquery": 2
    }
  },
  "docs/readme-md/endquery": {
    "id": "endquery",
    "title": "endQuery",
    "properties": {
      "id": "/endquery",
      "scopedId": "endquery",
      "level": 4,
      "html": "<code>endQuery</code>",
      "text": "endQuery"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-endquery",
      "anchor": "docs-readme-md-endquery"
    },
    "uid": "docs/readme-md/endquery",
    "indices": {
      "endquery": 1,
      "readme-md/endquery": 2
    }
  },
  "docs/readme-md/cli": {
    "id": "cli",
    "title": "CLI",
    "properties": {
      "id": "/cli",
      "scopedId": "cli",
      "level": 2,
      "html": "CLI",
      "text": "CLI"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-cli",
      "anchor": "docs-readme-md-cli"
    },
    "uid": "docs/readme-md/cli",
    "indices": {
      "cli": 1,
      "readme-md/cli": 2
    }
  },
  "docs/readme-md/database-cli-commands": {
    "id": "database-cli-commands",
    "title": "Database CLI Commands.",
    "properties": {
      "id": "/database-cli-commands",
      "scopedId": "database-cli-commands",
      "level": 3,
      "html": "Database CLI Commands.",
      "text": "Database CLI Commands."
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-database-cli-commands",
      "anchor": "docs-readme-md-database-cli-commands"
    },
    "uid": "docs/readme-md/database-cli-commands",
    "indices": {
      "database-cli-commands": 1,
      "readme-md/database-cli-commands": 2
    }
  },
  "docs/readme-md/listing-all-the-databases-on-the-server": {
    "id": "listing-all-the-databases-on-the-server",
    "title": "Listing all the databases on the server.",
    "properties": {
      "id": "/listing-all-the-databases-on-the-server",
      "scopedId": "listing-all-the-databases-on-the-server",
      "level": 4,
      "html": "Listing all the databases on the server.",
      "text": "Listing all the databases on the server."
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-all-the-databases-on-the-server",
      "anchor": "docs-readme-md-listing-all-the-databases-on-the-server"
    },
    "uid": "docs/readme-md/listing-all-the-databases-on-the-server",
    "indices": {
      "listing-all-the-databases-on-the-server": 1,
      "readme-md/listing-all-the-databases-on-the-server": 2
    }
  },
  "docs/readme-md/destroying-an-existing-database": {
    "id": "destroying-an-existing-database",
    "title": "Destroying an existing database",
    "properties": {
      "id": "/destroying-an-existing-database",
      "scopedId": "destroying-an-existing-database",
      "level": 4,
      "html": "Destroying an existing database",
      "text": "Destroying an existing database"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-destroying-an-existing-database",
      "anchor": "docs-readme-md-destroying-an-existing-database"
    },
    "uid": "docs/readme-md/destroying-an-existing-database",
    "indices": {
      "destroying-an-existing-database": 1,
      "readme-md/destroying-an-existing-database": 2
    }
  },
  "docs/readme-md/migrations": {
    "id": "migrations",
    "title": "Migrations",
    "properties": {
      "id": "/migrations",
      "scopedId": "migrations",
      "level": 3,
      "html": "Migrations",
      "text": "Migrations"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-migrations",
      "anchor": "docs-readme-md-migrations"
    },
    "uid": "docs/readme-md/migrations",
    "indices": {
      "migrations": 1,
      "readme-md/migrations": 2
    }
  },
  "docs/readme-md/listing-the-available-migrations": {
    "id": "listing-the-available-migrations",
    "title": "Listing the available migrations",
    "properties": {
      "id": "/listing-the-available-migrations",
      "scopedId": "listing-the-available-migrations",
      "level": 4,
      "html": "Listing the available migrations",
      "text": "Listing the available migrations"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-listing-the-available-migrations",
      "anchor": "docs-readme-md-listing-the-available-migrations"
    },
    "uid": "docs/readme-md/listing-the-available-migrations",
    "indices": {
      "listing-the-available-migrations": 1,
      "readme-md/listing-the-available-migrations": 2
    }
  },
  "docs/readme-md/creating-a-new-migration": {
    "id": "creating-a-new-migration",
    "title": "Creating a new migration",
    "properties": {
      "id": "/creating-a-new-migration",
      "scopedId": "creating-a-new-migration",
      "level": 4,
      "html": "Creating a new migration",
      "text": "Creating a new migration"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-creating-a-new-migration",
      "anchor": "docs-readme-md-creating-a-new-migration"
    },
    "uid": "docs/readme-md/creating-a-new-migration",
    "indices": {
      "creating-a-new-migration": 1,
      "readme-md/creating-a-new-migration": 2
    }
  },
  "docs/readme-md/migrating-up-fully": {
    "id": "migrating-up-fully",
    "title": "Migrating up fully",
    "properties": {
      "id": "/migrating-up-fully",
      "scopedId": "migrating-up-fully",
      "level": 4,
      "html": "Migrating up fully",
      "text": "Migrating up fully"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-migrating-up-fully",
      "anchor": "docs-readme-md-migrating-up-fully"
    },
    "uid": "docs/readme-md/migrating-up-fully",
    "indices": {
      "migrating-up-fully": 1,
      "readme-md/migrating-up-fully": 2
    }
  },
  "docs/readme-md/migrating-up-by-1": {
    "id": "migrating-up-by-1",
    "title": "Migrating up by 1",
    "properties": {
      "id": "/migrating-up-by-1",
      "scopedId": "migrating-up-by-1",
      "level": 4,
      "html": "Migrating up by 1",
      "text": "Migrating up by 1"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-migrating-up-by-1",
      "anchor": "docs-readme-md-migrating-up-by-1"
    },
    "uid": "docs/readme-md/migrating-up-by-1",
    "indices": {
      "migrating-up-by-1": 1,
      "readme-md/migrating-up-by-1": 2
    }
  },
  "docs/readme-md/migrating-down-fully": {
    "id": "migrating-down-fully",
    "title": "Migrating down fully",
    "properties": {
      "id": "/migrating-down-fully",
      "scopedId": "migrating-down-fully",
      "level": 4,
      "html": "Migrating down fully",
      "text": "Migrating down fully"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-migrating-down-fully",
      "anchor": "docs-readme-md-migrating-down-fully"
    },
    "uid": "docs/readme-md/migrating-down-fully",
    "indices": {
      "migrating-down-fully": 1,
      "readme-md/migrating-down-fully": 2
    }
  },
  "docs/readme-md/migrating-down-by-1": {
    "id": "migrating-down-by-1",
    "title": "Migrating down by 1",
    "properties": {
      "id": "/migrating-down-by-1",
      "scopedId": "migrating-down-by-1",
      "level": 4,
      "html": "Migrating down by 1",
      "text": "Migrating down by 1"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-migrating-down-by-1",
      "anchor": "docs-readme-md-migrating-down-by-1"
    },
    "uid": "docs/readme-md/migrating-down-by-1",
    "indices": {
      "migrating-down-by-1": 1,
      "readme-md/migrating-down-by-1": 2
    }
  },
  "docs/readme-md/troubleshooting": {
    "id": "troubleshooting",
    "title": "Troubleshooting",
    "properties": {
      "id": "/troubleshooting",
      "scopedId": "troubleshooting",
      "level": 2,
      "html": "Troubleshooting",
      "text": "Troubleshooting"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-troubleshooting",
      "anchor": "docs-readme-md-troubleshooting"
    },
    "uid": "docs/readme-md/troubleshooting",
    "indices": {
      "troubleshooting": 1,
      "readme-md/troubleshooting": 2
    }
  },
  "docs/readme-md/history": {
    "id": "history",
    "title": "History",
    "properties": {
      "id": "/history",
      "scopedId": "history",
      "level": 2,
      "html": "History",
      "text": "History"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-history",
      "anchor": "docs-readme-md-history"
    },
    "uid": "docs/readme-md/history",
    "indices": {
      "history": 1,
      "readme-md/history": 2
    }
  },
  "docs/readme-md/notes-for-contributors": {
    "id": "notes-for-contributors",
    "title": "Notes for contributors",
    "properties": {
      "id": "/notes-for-contributors",
      "scopedId": "notes-for-contributors",
      "level": 3,
      "html": "Notes for contributors",
      "text": "Notes for contributors"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-notes-for-contributors",
      "anchor": "docs-readme-md-notes-for-contributors"
    },
    "uid": "docs/readme-md/notes-for-contributors",
    "indices": {
      "notes-for-contributors": 1,
      "readme-md/notes-for-contributors": 2
    }
  },
  "docs/readme-md/changes": {
    "id": "changes",
    "title": "Changes",
    "properties": {
      "id": "/changes",
      "scopedId": "changes",
      "level": 3,
      "html": "Changes",
      "text": "Changes"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-changes",
      "anchor": "docs-readme-md-changes"
    },
    "uid": "docs/readme-md/changes",
    "indices": {
      "changes": 1,
      "readme-md/changes": 2
    }
  },
  "docs/readme-md/license": {
    "id": "license",
    "title": "License",
    "properties": {
      "id": "/license",
      "scopedId": "license",
      "level": 3,
      "html": "License",
      "text": "License"
    },
    "type": "DocumentEntity",
    "parentNode": "docs/readme-md",
    "meta": {
      "href": "/docs/readme-md.html#docs-readme-md-license",
      "anchor": "docs-readme-md-license"
    },
    "uid": "docs/readme-md/license",
    "indices": {
      "license": 1,
      "readme-md/license": 2
    }
  },
  "ui": {
    "id": "ui",
    "name": "ui",
    "meta": {
      "href": null,
      "anchor": "ui"
    },
    "documents": [
      "ui/index",
      "ui/404"
    ],
    "type": "Namespace",
    "symbol": "/",
    "uid": "ui",
    "indices": {}
  },
  "ui/index": {
    "id": "index",
    "title": "orientjs",
    "summary": "",
    "meta": {
      "href": "/index.html",
      "anchor": "ui-index"
    },
    "type": "Document",
    "parentNode": "ui",
    "symbol": "/",
    "uid": "ui/index",
    "indices": {
      "index": 1
    }
  },
  "ui/404": {
    "id": "404",
    "title": "404 - Not Found",
    "summary": "Not Found",
    "meta": {
      "href": "/404.html",
      "anchor": "ui-404"
    },
    "type": "Document",
    "parentNode": "ui",
    "symbol": "/",
    "uid": "ui/404",
    "indices": {
      "404": 1
    }
  }
}