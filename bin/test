#!/usr/bin/env bash

# Run mocha tests for the backend sources of a certain package or all packages.
#
# Usage:
#
#     $0 [PACKAGE]
#
# Environment variables:
#
#   - PACKAGE: the package, in case $1 is not passed
#   - COVERAGE: when set to "1", istanbul will run mocha to generate a coverage
#     report under /coverage

ROOT=$(readlink -f "$0" | xargs dirname | xargs dirname)
SOURCE_DIRS=""

if [ -z $PACKAGE ]; then
  if [ "$1" != "--" ]; then
    PACKAGE=$1
  fi

  shift
fi

if [ -z $PACKAGE ]; then
  SOURCE_DIRS="${ROOT}/packages/*/lib"
else
  [ -f "${ROOT}/packages/${PACKAGE}/package.json" ] && {
    test_script=$(cat ${ROOT}/packages/${PACKAGE}/package.json | jq -e -r '.scripts.test')

    if [ "${test_script}" != 'null' ]; then
      {
        cd ${ROOT}/packages/${PACKAGE}
        NODE_PATH="${ROOT}/packages/" exec npm test
      }
    fi
  }

  if [ -d "${ROOT}/packages/${PACKAGE}/lib" ]; then
    SOURCE_DIRS="${ROOT}/packages/${PACKAGE}/lib"
  elif [ -d "${ROOT}/packages/megadoc-${PACKAGE}/lib" ]; then
    SOURCE_DIRS="${ROOT}/packages/megadoc-${PACKAGE}/lib"
  elif [ -d "${ROOT}/packages/megadoc-plugin-${PACKAGE}/lib" ]; then
    SOURCE_DIRS="${ROOT}/packages/megadoc-plugin-${PACKAGE}/lib"
  fi

  stat $SOURCE_DIRS/**/*.test.js &> /dev/null || {
    echo "No tests were found matching the pattern '${SOURCE_DIRS}/**/*.test.js' - nothing to do."
    exit 0
  }
fi

if [ "${COVERAGE}" == "1" ]; then
  NODE_PATH="${ROOT}/packages/" \
    "${ROOT}/node_modules/.bin/istanbul" cover \
      --preserve-comments \
      --report lcov \
      --report html \
      "${ROOT}/node_modules/mocha/bin/_mocha" -- \
        --reporter dot \
        $@ "packages/megadoc-test-utils/index.js" "${SOURCE_DIRS}/**/*.test.js"
else
  NODE_PATH="${ROOT}/packages/" \
    exec "${ROOT}/node_modules/.bin/mocha" \
      --reporter dot \
      $@ "packages/megadoc-test-utils/index.js" "${SOURCE_DIRS}/**/*.test.js"
fi
