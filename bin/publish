#!/usr/bin/env bash

# Publish a package to NPM.
#
# Usage:
#
#     $0 PACKAGE
#
# Environment variables:
#
#   - PACKAGE: the package, in case $1 is not passed

[ -f "./package.json" ] && grep '"name": "megadoc"' ./package.json &> /dev/null || {
  echo "$0: Must be run from megadoc root.";
  exit 1
}

source "bin/_helpers.sh"

if [ -z $PACKAGE ]; then
  if [ $# -gt 0 ]; then
    PACKAGE=$1
    shift
  fi

  if [ -z $PACKAGE ]; then
    echo "Usage: $0 PACKAGE"
    exit 1
  fi
fi

PACKAGE_NAME="${PACKAGE}"
PACKAGE_ROOT="packages/${PACKAGE_NAME}"

if [ ! -d "${PACKAGE_ROOT}" ]; then
  PACKAGE_NAME="megadoc-plugin-${PACKAGE}"
  PACKAGE_ROOT="packages/${PACKAGE_NAME}"

  if [ ! -d "${PACKAGE_ROOT}" ]; then
    echo "${PACKAGE_NAME} is not a valid megadoc plugin package."
    exit 1
  fi
fi

function verify_dependency_versions {
  MEGADOC_VERSION=$(read_package_version package.json | cut -d'.' -f1)
  PACKAGE_VERSION=$(read_package_version $PACKAGE_ROOT/package.json | cut -d'.' -f1)
  MEGADOC_DEP_VERSION=$(read_peer_dependency_version $PACKAGE_ROOT/package.json "megadoc" | cut -d'.' -f1)

  if [ $MEGADOC_DEP_VERSION != $PACKAGE_VERSION ]; then
    echo "
Package major version seems to be '${PACKAGE_VERSION}' while the version
of megadoc specified as a peerDependency is '${MEGADOC_VERSION}'.

Optimally, we want major versions to be consistent between the packages
and the megadoc peerDependency they specify.
    "

    return 1
  fi

  if [ $MEGADOC_VERSION != $MEGADOC_DEP_VERSION ]; then
    echo "
Peer dependency mismatch: package depends on megadoc v${MEGADOC_DEP_VERSION}
but megadoc is currently version v${MEGADOC_VERSION}.
    "

    return 1
  fi
}

function build_package {
  ./bin/prepublish $PACKAGE
}

function publish_package {
  (cd $PACKAGE_ROOT; npm publish)
}

echo "Preparing \"${PACKAGE_NAME}\" for publishing... hang on tight."
echo "---------------------------------------------------------------"

run_task verify_dependency_versions
run_task build_package
run_task publish_package

echo "Package \"${PACKAGE_NAME}\" has been published!"
echo "---------------------------------------------------------------"
