#!/usr/bin/env node

var program = require('commander');
var fs = require('fs-extra');
var assert = require('assert');
var path = require('path');
var deep = require('deep-get-set');
var pkg = require('../package');
var PluginCompiler = require('../lib/PluginCompiler');
var ctx = {};

function resolvePath(arg) {
  return path.resolve(arg);
}

program
  .version(pkg.version)
  .description('Compile a tinydoc UI plugin.')
  .arguments('<outfile> <entry_file> [other_entry_files...]')
  .option('--optimize', 'Build a production-ready version.')
  .option('-v, --verbose', 'Shortcut for --log-level="info"')
  .option('-d, --debug', 'Shortcut for --log-level="debug"')
  .action(function(output, entry, otherEntries) {
    ctx.output = output;
    ctx.entry = [ entry ].concat(otherEntries);
  })
  .parse(process.argv)
;

if (!ctx.output || ctx.entry.length === 0) {
  program.help();
}

PluginCompiler.compile(ctx.entry.map(resolvePath), resolvePath(ctx.output), program.optimize, function(err) {
  if (err) {
    throw err;
  }

  // process.stdin.end();
});

// process.stdin.resume();